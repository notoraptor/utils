==10278== Memcheck, a memory error detector
==10278== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10278== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10278== Command: python -c import\ theano
==10278== Parent PID: 5977
==10278== 
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE5202: tupledealloc (tupleobject.c:235)
==10278==    by 0x4E9C0BA: code_dealloc (codeobject.c:349)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Address 0x5fe0020 is 3,616 bytes inside a block of size 4,096 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BE17BA: _IO_setb (genops.c:382)
==10278==    by 0x5BDF89D: _IO_file_close_it@@GLIBC_2.2.5 (fileops.c:193)
==10278==    by 0x5BD25AE: fclose@@GLIBC_2.2.5 (iofclose.c:58)
==10278==    by 0x4F4D2E1: load_source_module (import.c:1095)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BD2341: _IO_file_doallocate (filedoalloc.c:101)
==10278==    by 0x5BE1815: _IO_doallocbuf (genops.c:398)
==10278==    by 0x5BE0703: _IO_file_underflow@@GLIBC_2.2.5 (fileops.c:564)
==10278==    by 0x5BE18D1: _IO_default_uflow (genops.c:413)
==10278==    by 0x5BDB9AF: getc (getc.c:38)
==10278==    by 0x4F501D6: r_long (marshal.c:524)
==10278==    by 0x4F501D6: PyMarshal_ReadLongFromFile (marshal.c:1115)
==10278==    by 0x4F4D276: check_compiled_module (import.c:796)
==10278==    by 0x4F4D276: load_source_module (import.c:1093)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C04A: code_dealloc (codeobject.c:347)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Address 0x6038020 is 1,040 bytes inside a block of size 2,676 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F5184B: PyMarshal_ReadLastObjectFromFile (marshal.c:1150)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F51818: PyMarshal_ReadLastObjectFromFile (marshal.c:1146)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C04A: code_dealloc (codeobject.c:347)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==  Address 0x6026020 is 512 bytes inside a block of size 848 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BFF: r_object (marshal.c:1027)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BFF: r_object (marshal.c:1027)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:code_dealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE5202: tupledealloc (tupleobject.c:235)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Address 0x5fd5020 is 10,432 bytes inside a block of size 11,270 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F5184B: PyMarshal_ReadLastObjectFromFile (marshal.c:1150)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F51818: PyMarshal_ReadLastObjectFromFile (marshal.c:1146)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C025: code_dealloc (codeobject.c:357)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Address 0x605f020 is 528 bytes inside a block of size 1,008 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50C13: r_object (marshal.c:1030)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50C74: r_object (marshal.c:1042)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C05A: code_dealloc (codeobject.c:355)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Address 0x6131020 is 2,576 bytes inside a block of size 4,784 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB96B8: list_dealloc (listobject.c:311)
==10278==    by 0x4F5173C: PyMarshal_ReadObjectFromString (marshal.c:1189)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7B62C: fixstate (acceler.c:124)
==10278==    by 0x4E7B62C: fixdfa (acceler.c:60)
==10278==    by 0x4E7B62C: PyGrammar_AddAccelerators (acceler.c:30)
==10278==    by 0x4E7CE44: PyParser_New (parser.c:77)
==10278==    by 0x4E7CEB2: parsetok (parsetok.c:136)
==10278==    by 0x4F57705: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F58CEF: PyRun_SimpleStringFlags (pythonrun.c:974)
==10278==    by 0x4F6E8B6: Py_Main (main.c:589)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:fixstate
   fun:fixdfa
   fun:PyGrammar_AddAccelerators
   fun:PyParser_New
   fun:parsetok
   fun:PyParser_ASTFromString
   fun:PyRun_StringFlags
   fun:PyRun_SimpleStringFlags
   fun:Py_Main
   fun:(below main)
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7B62C: fixstate (acceler.c:124)
==10278==    by 0x4E7B62C: fixdfa (acceler.c:60)
==10278==    by 0x4E7B62C: PyGrammar_AddAccelerators (acceler.c:30)
==10278==    by 0x4E7CE44: PyParser_New (parser.c:77)
==10278==    by 0x4E7CEB2: parsetok (parsetok.c:136)
==10278==    by 0x4F57705: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F58CEF: PyRun_SimpleStringFlags (pythonrun.c:974)
==10278==    by 0x4F6E8B6: Py_Main (main.c:589)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:fixstate
   fun:fixdfa
   fun:PyGrammar_AddAccelerators
   fun:PyParser_New
   fun:parsetok
   fun:PyParser_ASTFromString
   fun:PyRun_StringFlags
   fun:PyRun_SimpleStringFlags
   fun:Py_Main
   fun:(below main)
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7B62C: fixstate (acceler.c:124)
==10278==    by 0x4E7B62C: fixdfa (acceler.c:60)
==10278==    by 0x4E7B62C: PyGrammar_AddAccelerators (acceler.c:30)
==10278==    by 0x4E7CE44: PyParser_New (parser.c:77)
==10278==    by 0x4E7CEB2: parsetok (parsetok.c:136)
==10278==    by 0x4F57705: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F58CEF: PyRun_SimpleStringFlags (pythonrun.c:974)
==10278==    by 0x4F6E8B6: Py_Main (main.c:589)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278==  Address 0x61fe020 is 544 bytes inside a block of size 676 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7B62C: fixstate (acceler.c:124)
==10278==    by 0x4E7B62C: fixdfa (acceler.c:60)
==10278==    by 0x4E7B62C: PyGrammar_AddAccelerators (acceler.c:30)
==10278==    by 0x4E7CE44: PyParser_New (parser.c:77)
==10278==    by 0x4E7CEB2: parsetok (parsetok.c:136)
==10278==    by 0x4F57705: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F58CEF: PyRun_SimpleStringFlags (pythonrun.c:974)
==10278==    by 0x4F6E8B6: Py_Main (main.c:589)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7B4C3: fixstate (acceler.c:71)
==10278==    by 0x4E7B4C3: fixdfa (acceler.c:60)
==10278==    by 0x4E7B4C3: PyGrammar_AddAccelerators (acceler.c:30)
==10278==    by 0x4E7CE44: PyParser_New (parser.c:77)
==10278==    by 0x4E7CEB2: parsetok (parsetok.c:136)
==10278==    by 0x4F57705: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F58CEF: PyRun_SimpleStringFlags (pythonrun.c:974)
==10278==    by 0x4F6E8B6: Py_Main (main.c:589)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:fixstate
   fun:fixdfa
   fun:PyGrammar_AddAccelerators
   fun:PyParser_New
   fun:parsetok
   fun:PyParser_ASTFromString
   fun:PyRun_StringFlags
   fun:PyRun_SimpleStringFlags
   fun:Py_Main
   fun:(below main)
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C04A: code_dealloc (codeobject.c:347)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Address 0x628f020 is 54,384 bytes inside a block of size 56,699 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F5184B: PyMarshal_ReadLastObjectFromFile (marshal.c:1150)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F51818: PyMarshal_ReadLastObjectFromFile (marshal.c:1146)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:code_dealloc
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C025: code_dealloc (codeobject.c:357)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Address 0x6297020 is 8 bytes after a block of size 840 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE5202: tupledealloc (tupleobject.c:235)
==10278==    by 0x4E9C0BA: code_dealloc (codeobject.c:349)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EE541E: PyTuple_New (tupleobject.c:90)
==10278==    by 0x4F50A3D: r_object (marshal.c:885)
==10278==    by 0x4F50BFF: r_object (marshal.c:1027)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:code_dealloc
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F701F9: delete_garbage (gcmodule.c:821)
==10278==    by 0x4F701F9: collect (gcmodule.c:984)
==10278==    by 0x4F7089D: collect_generations (gcmodule.c:1050)
==10278==    by 0x4F7089D: _PyObject_GC_Malloc (gcmodule.c:1511)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0x74db020 is 128 bytes inside a block of size 4,097 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4EC70: import_module_level (import.c:2288)
==10278==    by 0x4F4EC70: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4E7DC: import_module_level (import.c:2238)
==10278==    by 0x4F4E7DC: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:delete_garbage
   fun:collect
   fun:collect_generations
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0xC60708F: __intel_sse2_strrchr (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libiomp5.so)
==10278==    by 0xC5A5411: _INTERNAL_45_______src_thirdparty_tbb_omp_dynamic_link_cpp_7b148ce4::__kmp::init_dl_data() (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libiomp5.so)
==10278==    by 0xC5A5366: __sti__$E (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libiomp5.so)
==10278==    by 0xC617F25: ??? (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libiomp5.so)
==10278==    by 0xC51748A: ??? (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libiomp5.so)
==10278==    by 0x2: ???
==10278==    by 0x4010989: call_init.part.0 (dl-init.c:58)
==10278==    by 0x4010ADA: call_init (dl-init.c:30)
==10278==    by 0x4010ADA: _dl_init (dl-init.c:120)
==10278==    by 0x4015A75: dl_open_worker (dl-open.c:575)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:__intel_sse2_strrchr
   fun:_ZN67_INTERNAL_45_______src_thirdparty_tbb_omp_dynamic_link_cpp_7b148ce45__kmp12init_dl_dataEv
   fun:__sti__$E
   obj:/home/notoraptor/Programmes/anaconda3/envs/python2/lib/libiomp5.so
   obj:/home/notoraptor/Programmes/anaconda3/envs/python2/lib/libiomp5.so
   obj:*
   fun:call_init.part.0
   fun:call_init
   fun:_dl_init
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C025: code_dealloc (codeobject.c:357)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==  Address 0x7835020 is 112 bytes inside a block of size 864 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBB32A: list_resize (listobject.c:62)
==10278==    by 0x4EBB32A: app1 (listobject.c:277)
==10278==    by 0x4EBB32A: listappend (listobject.c:796)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBB32A: list_resize (listobject.c:62)
==10278==    by 0x4EBB32A: app1 (listobject.c:277)
==10278==    by 0x4EBB32A: listappend (listobject.c:796)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:code_dealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED1CA7: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CC9C: shift (parser.c:112)
==10278==    by 0x4E7CC9C: PyParser_AddToken (parser.c:262)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Realloc
   fun:PyNode_AddChild
   fun:shift
   fun:PyParser_AddToken
   fun:parsetok
   fun:PyParser_ASTFromString
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED1CBA: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CC9C: shift (parser.c:112)
==10278==    by 0x4E7CC9C: PyParser_AddToken (parser.c:262)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Realloc
   fun:PyNode_AddChild
   fun:shift
   fun:PyParser_AddToken
   fun:parsetok
   fun:PyParser_ASTFromString
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BED3: freechildren (node.c:146)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==  Address 0xd245020 is 33,488 bytes inside a block of size 36,032 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7D0D7: parsetok (parsetok.c:218)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7CDA9: PyParser_New (parser.c:78)
==10278==    by 0x4E7CEB2: parsetok (parsetok.c:136)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F3921D: compiler_unit_free (compile.c:447)
==10278==    by 0x4F39CC5: compiler_exit_scope (compile.c:544)
==10278==    by 0x4F40017: compiler_function (compile.c:1382)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Address 0xd24c020 is 512 bytes inside a block of size 768 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F3921D: compiler_unit_free (compile.c:447)
==10278==    by 0x4F39CC5: compiler_exit_scope (compile.c:544)
==10278==    by 0x4F40017: compiler_function (compile.c:1382)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F397A7: compiler_addop (compile.c:929)
==10278==    by 0x4F3CFF7: compiler_visit_expr (compile.c:3025)
==10278==    by 0x4F3C967: compiler_call (compile.c:2544)
==10278==    by 0x4F3C967: compiler_visit_expr (compile.c:3022)
==10278==    by 0x4F3EA95: compiler_visit_stmt (compile.c:2122)
==10278==    by 0x4F40A57: compiler_if (compile.c:1595)
==10278==    by 0x4F3FFDD: compiler_function (compile.c:1379)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:compiler_unit_free
   fun:compiler_exit_scope
   fun:compiler_function
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3BD61: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3BD61: compiler_nameop (compile.c:2434)
==10278==    by 0x4F3EE34: compiler_visit_stmt (compile.c:2105)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Address 0xd24d020 is 304 bytes inside a block of size 768 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F3921D: compiler_unit_free (compile.c:447)
==10278==    by 0x4F39CC5: compiler_exit_scope (compile.c:544)
==10278==    by 0x4F40017: compiler_function (compile.c:1382)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3AC5C: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3AC5C: compiler_addop_o (compile.c:980)
==10278==    by 0x4F3C840: compiler_visit_expr (compile.c:3031)
==10278==    by 0x4F3D013: compiler_visit_expr (compile.c:2972)
==10278==    by 0x4F3C967: compiler_call (compile.c:2544)
==10278==    by 0x4F3C967: compiler_visit_expr (compile.c:3022)
==10278==    by 0x4F3EA95: compiler_visit_stmt (compile.c:2122)
==10278==    by 0x4F40A57: compiler_if (compile.c:1595)
==10278==    by 0x4F3FFDD: compiler_function (compile.c:1379)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_nameop
   fun:compiler_visit_stmt
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F3921D: compiler_unit_free (compile.c:447)
==10278==    by 0x4F39CC5: compiler_exit_scope (compile.c:544)
==10278==    by 0x4F3FD19: compiler_class (compile.c:1443)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==  Address 0xd24e020 is 8 bytes after a block of size 40 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB96B8: list_dealloc (listobject.c:311)
==10278==    by 0x4F3BA7A: makecode (compile.c:3851)
==10278==    by 0x4F3BA7A: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBC530: list_resize (listobject.c:62)
==10278==    by 0x4EBC530: listextend (listobject.c:827)
==10278==    by 0x4E887C1: PySequence_List (abstract.c:2265)
==10278==    by 0x4F3B2F3: makecode (compile.c:3821)
==10278==    by 0x4F3B2F3: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:compiler_unit_free
   fun:compiler_exit_scope
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EB2651: frame_dealloc (frameobject.c:458)
==10278==    by 0x4F388DE: PyEval_EvalCodeEx (ceval.c:3595)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==  Address 0xd239020 is 10 bytes after a block of size 1,830 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EDF84F: build_string (string_format.h:1008)
==10278==    by 0x4EDFF8B: do_string_format (string_format.h:1041)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EDFC28: output_extend (string_format.h:162)
==10278==    by 0x4EDFC28: output_data (string_format.h:184)
==10278==    by 0x4EDFC28: render_field (string_format.h:626)
==10278==    by 0x4EDFC28: output_markup (string_format.h:926)
==10278==    by 0x4EDFC28: do_markup (string_format.h:965)
==10278==    by 0x4EDFC28: build_string (string_format.h:1002)
==10278==    by 0x4EDFF8B: do_string_format (string_format.h:1041)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:frame_dealloc
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EDFC28: output_extend (string_format.h:162)
==10278==    by 0x4EDFC28: output_data (string_format.h:184)
==10278==    by 0x4EDFC28: render_field (string_format.h:626)
==10278==    by 0x4EDFC28: output_markup (string_format.h:926)
==10278==    by 0x4EDFC28: do_markup (string_format.h:965)
==10278==    by 0x4EDFC28: build_string (string_format.h:1002)
==10278==    by 0x4EDFF8B: do_string_format (string_format.h:1041)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd299020 is 32 bytes before a block of size 48 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:output_extend
   fun:output_data
   fun:render_field
   fun:output_markup
   fun:do_markup
   fun:build_string
   fun:do_string_format
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EDF84F: build_string (string_format.h:1008)
==10278==    by 0x4EDFF8B: do_string_format (string_format.h:1041)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd299020 is 32 bytes before a block of size 48 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:build_string
   fun:do_string_format
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3C2F1: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3C2F1: compiler_make_closure (compile.c:1265)
==10278==    by 0x4F4003D: compiler_function (compile.c:1386)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Address 0xd2ac020 is 16 bytes before a block of size 32 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB8F38: list_resize (listobject.c:62)
==10278==    by 0x4EBBA52: list_ass_slice (listobject.c:687)
==10278==    by 0x4F39CF9: compiler_exit_scope (compile.c:552)
==10278==    by 0x4F40017: compiler_function (compile.c:1382)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F3C637: compiler_enter_scope (compile.c:519)
==10278==    by 0x4F3FB22: compiler_class (compile.c:1414)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_make_closure
   fun:compiler_function
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE5202: tupledealloc (tupleobject.c:235)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==  Address 0xd266020 is 240 bytes inside a block of size 464 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50C13: r_object (marshal.c:1030)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50C13: r_object (marshal.c:1030)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:tupledealloc
   fun:code_dealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE5202: tupledealloc (tupleobject.c:235)
==10278==    by 0x4E9C0BA: code_dealloc (codeobject.c:349)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==  Address 0xd26b020 is 1,952 bytes inside a block of size 2,152 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BFF: r_object (marshal.c:1027)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50C13: r_object (marshal.c:1030)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:tupledealloc
   fun:code_dealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4F36839: do_call (ceval.c:4571)
==10278==    by 0x4F36839: call_function (ceval.c:4374)
==10278==    by 0x4F36839: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==  Address 0xe86a020 is 1,120 bytes inside a block of size 2,537 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4F35E1C: call_function (ceval.c:4354)
==10278==    by 0x4F35E1C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F73486: posix_urandom (posixmodule.c:8739)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:tupledealloc
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xEC1D9A9: random_seed (_randommodule.c:282)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==  Address 0xe86d020 is 16 bytes after a block of size 2,688 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xEC1D9A9: random_seed (_randommodule.c:282)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBDD90: _PyLong_New (longobject.c:76)
==10278==    by 0x4EC6465: long_rshift (longobject.c:3681)
==10278==    by 0x4E84A31: binary_op1 (abstract.c:945)
==10278==    by 0x4E8814D: binary_op (abstract.c:997)
==10278==    by 0x4E8814D: PyNumber_Rshift (abstract.c:1177)
==10278==    by 0xEC1D7BD: random_seed (_randommodule.c:279)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:random_seed
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xEC1D9A9: random_seed (_randommodule.c:282)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:random_seed
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xEC1D9A9: random_seed (_randommodule.c:282)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:random_seed
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==  Address 0xd309020 is 2,592 bytes inside a block of size 4,097 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4EB06: import_module_level (import.c:2298)
==10278==    by 0x4F4EB06: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4E7DC: import_module_level (import.c:2238)
==10278==    by 0x4F4E7DC: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==  Address 0xeb5e020 is 3,216 bytes inside a block of size 4,096 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BE17BA: _IO_setb (genops.c:382)
==10278==    by 0x5BDF89D: _IO_file_close_it@@GLIBC_2.2.5 (fileops.c:193)
==10278==    by 0x5BD25AE: fclose@@GLIBC_2.2.5 (iofclose.c:58)
==10278==    by 0x4F4D2E1: load_source_module (import.c:1095)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BD2341: _IO_file_doallocate (filedoalloc.c:101)
==10278==    by 0x5BE1815: _IO_doallocbuf (genops.c:398)
==10278==    by 0x5BE0703: _IO_file_underflow@@GLIBC_2.2.5 (fileops.c:564)
==10278==    by 0x5BE18D1: _IO_default_uflow (genops.c:413)
==10278==    by 0x5BDB9AF: getc (getc.c:38)
==10278==    by 0x4F501D6: r_long (marshal.c:524)
==10278==    by 0x4F501D6: PyMarshal_ReadLongFromFile (marshal.c:1115)
==10278==    by 0x4F4D276: check_compiled_module (import.c:796)
==10278==    by 0x4F4D276: load_source_module (import.c:1093)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4F31DBD: call_function (ceval.c:4385)
==10278==    by 0x4F31DBD: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Address 0xf5fd020 is 1,040 bytes inside a block of size 1,156 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EDF84F: build_string (string_format.h:1008)
==10278==    by 0x4EDFF8B: do_string_format (string_format.h:1041)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4EDF456: output_initialize (string_format.h:138)
==10278==    by 0x4EDF456: build_string (string_format.h:997)
==10278==    by 0x4EDFF8B: do_string_format (string_format.h:1041)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:tupledealloc
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==  Address 0x7642020 is 10 bytes after a block of size 3,190 alloc'd
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51788: PyMarshal_ReadObjectFromFile (marshal.c:1173)
==10278==    by 0x4F5185F: PyMarshal_ReadLastObjectFromFile (marshal.c:1159)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:tupledealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EDE40E: PyString_FromFormatV (stringobject.c:394)
==10278==    by 0x4EDEA2C: PyString_FromFormat (stringobject.c:410)
==10278==    by 0xCD51BFC: ufunc_get_doc (ufunc_object.c:5629)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==  Address 0x1010e020 is 3,872 bytes inside a block of size 4,097 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4EB06: import_module_level (import.c:2298)
==10278==    by 0x4F4EB06: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x4F4F16B: PyImport_ImportModule (import.c:2151)
==10278==    by 0xCD51C2B: npy_cache_import (npy_import.h:23)
==10278==    by 0xCD51C2B: ufunc_get_doc (ufunc_object.c:5609)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4E7DC: import_module_level (import.c:2238)
==10278==    by 0x4F4E7DC: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x4F4F16B: PyImport_ImportModule (import.c:2151)
==10278==    by 0xCD51C2B: npy_cache_import (npy_import.h:23)
==10278==    by 0xCD51C2B: ufunc_get_doc (ufunc_object.c:5609)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:PyString_FromFormatV
   fun:PyString_FromFormat
   fun:ufunc_get_doc
   fun:_PyObject_GenericGetAttrWithDict
   fun:builtin_getattr
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xCD51C09: ufunc_get_doc (ufunc_object.c:5629)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4E984E5: PyInstance_New (classobject.c:581)
==10278==  Address 0x1010e020 is 3,872 bytes inside a block of size 4,097 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4EB06: import_module_level (import.c:2298)
==10278==    by 0x4F4EB06: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x4F4F16B: PyImport_ImportModule (import.c:2151)
==10278==    by 0xCD51C2B: npy_cache_import (npy_import.h:23)
==10278==    by 0xCD51C2B: ufunc_get_doc (ufunc_object.c:5609)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4E7DC: import_module_level (import.c:2238)
==10278==    by 0x4F4E7DC: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x4F4F16B: PyImport_ImportModule (import.c:2151)
==10278==    by 0xCD51C2B: npy_cache_import (npy_import.h:23)
==10278==    by 0xCD51C2B: ufunc_get_doc (ufunc_object.c:5609)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:ufunc_get_doc
   fun:_PyObject_GenericGetAttrWithDict
   fun:builtin_getattr
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyInstance_New
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EC940A: dict_dealloc (dictobject.c:1040)
==10278==    by 0x4E988A3: instance_dealloc (classobject.c:681)
==10278==    by 0x4EC72C6: insertdict_by_entry (dictobject.c:519)
==10278==    by 0x4ECA79B: insertdict (dictobject.c:556)
==10278==    by 0x4ECA79B: dict_set_item_by_hash_or_entry (dictobject.c:795)
==10278==    by 0x4ECA79B: PyDict_SetItem (dictobject.c:848)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==  Address 0x10114020 is 880 bytes inside a block of size 1,649 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EDE40E: PyString_FromFormatV (stringobject.c:394)
==10278==    by 0x4EDEA2C: PyString_FromFormat (stringobject.c:410)
==10278==    by 0xCD51BFC: ufunc_get_doc (ufunc_object.c:5629)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4EDE1BC: PyString_FromFormatV (stringobject.c:269)
==10278==    by 0x4EDEA2C: PyString_FromFormat (stringobject.c:410)
==10278==    by 0xCD51BFC: ufunc_get_doc (ufunc_object.c:5629)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:dict_dealloc
   fun:instance_dealloc
   fun:insertdict_by_entry
   fun:insertdict
   fun:dict_set_item_by_hash_or_entry
   fun:PyDict_SetItem
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EE1392: PyString_Format (stringobject.c:4687)
==10278==    by 0x4F363BA: PyEval_EvalFrameEx (ceval.c:1450)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==  Address 0x10160020 is 256 bytes inside a block of size 768 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC9426: dict_dealloc (dictobject.c:1044)
==10278==    by 0x4F32237: PyEval_EvalFrameEx (ceval.c:2162)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:PyString_Format
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xCD51C09: ufunc_get_doc (ufunc_object.c:5629)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F331B4: PyEval_EvalFrameEx (ceval.c:2543)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Address 0x10167020 is 1,856 bytes inside a block of size 2,154 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EDE40E: PyString_FromFormatV (stringobject.c:394)
==10278==    by 0x4EDEA2C: PyString_FromFormat (stringobject.c:410)
==10278==    by 0xCD51BFC: ufunc_get_doc (ufunc_object.c:5629)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F331B4: PyEval_EvalFrameEx (ceval.c:2543)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4EDE1BC: PyString_FromFormatV (stringobject.c:269)
==10278==    by 0x4EDEA2C: PyString_FromFormat (stringobject.c:410)
==10278==    by 0xCD51BFC: ufunc_get_doc (ufunc_object.c:5629)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F331B4: PyEval_EvalFrameEx (ceval.c:2543)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:ufunc_get_doc
   fun:_PyObject_GenericGetAttrWithDict
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F31DBD: call_function (ceval.c:4385)
==10278==    by 0x4F31DBD: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==  Address 0x10175020 is 32 bytes before a block of size 1,168 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED1CA7: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED1CBA: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C025: code_dealloc (codeobject.c:357)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:code_dealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C025: code_dealloc (codeobject.c:357)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:code_dealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F77766: posix_read (posixmodule.c:6788)
==10278==    by 0x4F37BAC: ext_do_call (ceval.c:4663)
==10278==    by 0x4F37BAC: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==  Address 0x10d6d020 is 32 bytes before a block of size 1,048,624 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:posix_read
   fun:ext_do_call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F31B7D: PyEval_EvalFrameEx (ceval.c:1239)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F31B7D: PyEval_EvalFrameEx (ceval.c:1239)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED1CA7: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F77766: posix_read (posixmodule.c:6788)
==10278==    by 0x4F37BAC: ext_do_call (ceval.c:4663)
==10278==    by 0x4F37BAC: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:posix_read
   fun:ext_do_call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED1CBA: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F77766: posix_read (posixmodule.c:6788)
==10278==    by 0x4F37BAC: ext_do_call (ceval.c:4663)
==10278==    by 0x4F37BAC: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:posix_read
   fun:ext_do_call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F31B7D: PyEval_EvalFrameEx (ceval.c:1239)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Address 0x10f97020 is 1,047,376 bytes inside a block of size 1,048,613 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F77766: posix_read (posixmodule.c:6788)
==10278==    by 0x4F37BAC: ext_do_call (ceval.c:4663)
==10278==    by 0x4F37BAC: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F77719: posix_read (posixmodule.c:6773)
==10278==    by 0x4F37BAC: ext_do_call (ceval.c:4663)
==10278==    by 0x4F37BAC: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F77766: posix_read (posixmodule.c:6788)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Address 0x10f97020 is 1,047,376 bytes inside a block of size 1,048,613 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F77766: posix_read (posixmodule.c:6788)
==10278==    by 0x4F37BAC: ext_do_call (ceval.c:4663)
==10278==    by 0x4F37BAC: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F77719: posix_read (posixmodule.c:6773)
==10278==    by 0x4F37BAC: ext_do_call (ceval.c:4663)
==10278==    by 0x4F37BAC: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:posix_read
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE8C44: subtype_dealloc (typeobject.c:1050)
==10278==    by 0x4F701F9: delete_garbage (gcmodule.c:821)
==10278==    by 0x4F701F9: collect (gcmodule.c:984)
==10278==    by 0x4F7089D: collect_generations (gcmodule.c:1050)
==10278==    by 0x4F7089D: _PyObject_GC_Malloc (gcmodule.c:1511)
==10278==    by 0x4F7093C: _PyObject_GC_New (gcmodule.c:1521)
==10278==    by 0x4EB4015: PyFunction_New (funcobject.c:12)
==10278==    by 0x4F30AB5: PyEval_EvalFrameEx (ceval.c:3046)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==  Address 0x11037020 is 16 bytes after a block of size 48 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:subtype_dealloc
   fun:delete_garbage
   fun:collect
   fun:collect_generations
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_New
   fun:PyFunction_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE8C66: subtype_dealloc (typeobject.c:1053)
==10278==    by 0x4F701F9: delete_garbage (gcmodule.c:821)
==10278==    by 0x4F701F9: collect (gcmodule.c:984)
==10278==    by 0x4F7089D: collect_generations (gcmodule.c:1050)
==10278==    by 0x4F7089D: _PyObject_GC_Malloc (gcmodule.c:1511)
==10278==    by 0x4F7093C: _PyObject_GC_New (gcmodule.c:1521)
==10278==    by 0x4EB4015: PyFunction_New (funcobject.c:12)
==10278==    by 0x4F30AB5: PyEval_EvalFrameEx (ceval.c:3046)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==  Address 0x11037020 is 16 bytes after a block of size 48 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:subtype_dealloc
   fun:delete_garbage
   fun:collect
   fun:collect_generations
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_New
   fun:PyFunction_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EDF61D: output_extend (string_format.h:162)
==10278==    by 0x4EDF61D: output_data (string_format.h:184)
==10278==    by 0x4EDF61D: do_markup (string_format.h:962)
==10278==    by 0x4EDF61D: build_string (string_format.h:1002)
==10278==    by 0x4EDFF8B: do_string_format (string_format.h:1041)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0x10e3f020 is 16 bytes after a block of size 3,072 alloc'd
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:output_extend
   fun:output_data
   fun:do_markup
   fun:build_string
   fun:do_string_format
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED1CA7: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Realloc
   fun:PyNode_AddChild
   fun:push
   fun:PyParser_AddToken
   fun:parsetok
   fun:PyParser_ASTFromString
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED1CBA: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Realloc
   fun:PyNode_AddChild
   fun:push
   fun:PyParser_AddToken
   fun:parsetok
   fun:PyParser_ASTFromString
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3C285: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3C285: compiler_addop_o (compile.c:980)
==10278==    by 0x4F3C285: compiler_make_closure (compile.c:1264)
==10278==    by 0x4F4003D: compiler_function (compile.c:1386)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Address 0x10e52020 is 0 bytes after a block of size 112 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F55796: PyCode_Optimize (peephole.c:650)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F54D82: PyCode_Optimize (peephole.c:346)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_addop_o
   fun:compiler_make_closure
   fun:compiler_function
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F39637: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3D3A8: compiler_tuple (compile.c:2487)
==10278==    by 0x4F3D3A8: compiler_visit_expr (compile.c:3094)
==10278==    by 0x4F3EDB3: compiler_visit_stmt (compile.c:2101)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Address 0x10e54020 is 0 bytes inside a block of size 72 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB96B8: list_dealloc (listobject.c:311)
==10278==    by 0x4F3BA7A: makecode (compile.c:3851)
==10278==    by 0x4F3BA7A: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBC530: list_resize (listobject.c:62)
==10278==    by 0x4EBC530: listextend (listobject.c:827)
==10278==    by 0x4E887C1: PySequence_List (abstract.c:2265)
==10278==    by 0x4F3B2F3: makecode (compile.c:3821)
==10278==    by 0x4F3B2F3: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_tuple
   fun:compiler_visit_expr
   fun:compiler_visit_stmt
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C025: code_dealloc (codeobject.c:357)
==10278==    by 0x4F57A06: run_mod (pythonrun.c:1377)
==10278==    by 0x4F57A06: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Address 0x10e39020 is 16 bytes inside a block of size 256 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE038F: string_subscript (stringobject.c:1346)
==10278==    by 0x4F309E6: PyEval_EvalFrameEx (ceval.c:1539)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE0339: string_subscript (stringobject.c:1335)
==10278==    by 0x4F309E6: PyEval_EvalFrameEx (ceval.c:1539)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:code_dealloc
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3BD61: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3BD61: compiler_nameop (compile.c:2434)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==  Address 0x10f18020 is 432 bytes inside a block of size 768 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC9426: dict_dealloc (dictobject.c:1044)
==10278==    by 0x4F5C23D: analyze_block (symtable.c:722)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F5C443: analyze_name (symtable.c:398)
==10278==    by 0x4F5C443: analyze_block (symtable.c:669)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_nameop
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3AC5C: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3AC5C: compiler_addop_o (compile.c:980)
==10278==    by 0x4F3C840: compiler_visit_expr (compile.c:3031)
==10278==    by 0x4F3CA37: compiler_visit_keyword (compile.c:2847)
==10278==    by 0x4F3CA37: compiler_call (compile.c:2546)
==10278==    by 0x4F3CA37: compiler_visit_expr (compile.c:3022)
==10278==    by 0x4F3EDB3: compiler_visit_stmt (compile.c:2101)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==  Address 0x10f19020 is 160 bytes inside a block of size 248 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F55796: PyCode_Optimize (peephole.c:650)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F54D82: PyCode_Optimize (peephole.c:346)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_addop_o
   fun:compiler_visit_expr
   fun:compiler_visit_keyword
   fun:compiler_call
   fun:compiler_visit_expr
   fun:compiler_visit_stmt
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EB3D1A: func_dealloc (funcobject.c:456)
==10278==    by 0x4EC72C6: insertdict_by_entry (dictobject.c:519)
==10278==    by 0x4ECA79B: insertdict (dictobject.c:556)
==10278==    by 0x4ECA79B: dict_set_item_by_hash_or_entry (dictobject.c:795)
==10278==    by 0x4ECA79B: PyDict_SetItem (dictobject.c:848)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F2A093: builtin_setattr (bltinmodule.c:1153)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==  Address 0x5fd4020 is 2,768 bytes inside a block of size 4,097 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4D344: load_source_module (import.c:1124)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4D120: load_source_module (import.c:1086)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:func_dealloc
   fun:insertdict_by_entry
   fun:insertdict
   fun:dict_set_item_by_hash_or_entry
   fun:PyDict_SetItem
   fun:PyObject_SetAttr
   fun:builtin_setattr
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE5202: tupledealloc (tupleobject.c:235)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C04A: code_dealloc (codeobject.c:347)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:code_dealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C04A: code_dealloc (codeobject.c:347)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:code_dealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE5202: tupledealloc (tupleobject.c:235)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:tupledealloc
   fun:code_dealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EE5202: tupledealloc (tupleobject.c:235)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4E9C0CA: code_dealloc (codeobject.c:348)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:tupledealloc
   fun:code_dealloc
   fun:tupledealloc
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F2EDA4: string_concatenate (ceval.c:5172)
==10278==    by 0x4F36859: PyEval_EvalFrameEx (ceval.c:1478)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==  Address 0x748d020 is 2,752 bytes inside a block of size 4,097 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4C18D: find_module (import.c:1616)
==10278==    by 0x4F4E097: import_submodule (import.c:2714)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4BF10: find_module (import.c:1340)
==10278==    by 0x4F4E097: import_submodule (import.c:2714)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:string_concatenate
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C04A: code_dealloc (codeobject.c:347)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E9C04A: code_dealloc (codeobject.c:347)
==10278==    by 0x4F4D33C: load_source_module (import.c:1122)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:code_dealloc
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED1CA7: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x11CA3475: arrange_output_buffer_with_maximum (zlibmodule.c:169)
==10278==    by 0x11CA3475: arrange_output_buffer (zlibmodule.c:190)
==10278==    by 0x11CA3475: PyZlib_decompress (zlibmodule.c:328)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F85DB4: get_data (zipimport.c:1010)
==10278==    by 0x4F86142: get_code_from_data (zipimport.c:1212)
==10278==    by 0x4F86142: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:arrange_output_buffer_with_maximum
   fun:arrange_output_buffer
   fun:PyZlib_decompress
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:get_data
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x11CA34DF: PyZlib_decompress (zlibmodule.c:371)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F85DB4: get_data (zipimport.c:1010)
==10278==    by 0x4F86142: get_code_from_data (zipimport.c:1212)
==10278==    by 0x4F86142: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0x11154020 is 31,984 bytes inside a block of size 32,805 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x11CA3475: arrange_output_buffer_with_maximum (zlibmodule.c:169)
==10278==    by 0x11CA3475: arrange_output_buffer (zlibmodule.c:190)
==10278==    by 0x11CA3475: PyZlib_decompress (zlibmodule.c:328)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F85DB4: get_data (zipimport.c:1010)
==10278==    by 0x4F86142: get_code_from_data (zipimport.c:1212)
==10278==    by 0x4F86142: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x11CA3475: arrange_output_buffer_with_maximum (zlibmodule.c:169)
==10278==    by 0x11CA3475: arrange_output_buffer (zlibmodule.c:190)
==10278==    by 0x11CA3475: PyZlib_decompress (zlibmodule.c:328)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F85DB4: get_data (zipimport.c:1010)
==10278==    by 0x4F86142: get_code_from_data (zipimport.c:1212)
==10278==    by 0x4F86142: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:PyZlib_decompress
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:get_data
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F85E09: get_data (zipimport.c:1012)
==10278==    by 0x4F86142: get_code_from_data (zipimport.c:1212)
==10278==    by 0x4F86142: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Address 0xd019020 is 2,112 bytes inside a block of size 4,096 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BE17BA: _IO_setb (genops.c:382)
==10278==    by 0x5BDF89D: _IO_file_close_it@@GLIBC_2.2.5 (fileops.c:193)
==10278==    by 0x5BD25AE: fclose@@GLIBC_2.2.5 (iofclose.c:58)
==10278==    by 0x4F85BEC: get_data (zipimport.c:990)
==10278==    by 0x4F86142: get_code_from_data (zipimport.c:1212)
==10278==    by 0x4F86142: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BD2341: _IO_file_doallocate (filedoalloc.c:101)
==10278==    by 0x5BE1815: _IO_doallocbuf (genops.c:398)
==10278==    by 0x5BDE182: _IO_file_seekoff@@GLIBC_2.2.5 (fileops.c:1031)
==10278==    by 0x5BDB828: fseek (fseek.c:36)
==10278==    by 0x4F85AC6: get_data (zipimport.c:947)
==10278==    by 0x4F86142: get_code_from_data (zipimport.c:1212)
==10278==    by 0x4F86142: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:get_data
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F8603F: get_code_from_data (zipimport.c:1224)
==10278==    by 0x4F8603F: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==  Address 0x11ea6020 is 32 bytes before a block of size 56,240 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x11CA3475: arrange_output_buffer_with_maximum (zlibmodule.c:169)
==10278==    by 0x11CA3475: arrange_output_buffer (zlibmodule.c:190)
==10278==    by 0x11CA3475: PyZlib_decompress (zlibmodule.c:328)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F85DB4: get_data (zipimport.c:1010)
==10278==    by 0x4F86142: get_code_from_data (zipimport.c:1212)
==10278==    by 0x4F86142: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd082020 is 1,120 bytes inside a block of size 4,096 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BE17BA: _IO_setb (genops.c:382)
==10278==    by 0x5BDF89D: _IO_file_close_it@@GLIBC_2.2.5 (fileops.c:193)
==10278==    by 0x5BD25AE: fclose@@GLIBC_2.2.5 (iofclose.c:58)
==10278==    by 0x4F4D2E1: load_source_module (import.c:1095)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BD2341: _IO_file_doallocate (filedoalloc.c:101)
==10278==    by 0x5BE1815: _IO_doallocbuf (genops.c:398)
==10278==    by 0x5BE0703: _IO_file_underflow@@GLIBC_2.2.5 (fileops.c:564)
==10278==    by 0x5BE18D1: _IO_default_uflow (genops.c:413)
==10278==    by 0x5BDB9AF: getc (getc.c:38)
==10278==    by 0x4F501D6: r_long (marshal.c:524)
==10278==    by 0x4F501D6: PyMarshal_ReadLongFromFile (marshal.c:1115)
==10278==    by 0x4F4D276: check_compiled_module (import.c:796)
==10278==    by 0x4F4D276: load_source_module (import.c:1093)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:arrange_output_buffer_with_maximum
   fun:arrange_output_buffer
   fun:PyZlib_decompress
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:get_data
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd079020 is 32 bytes before a block of size 656 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:PyNode_AddChild
   fun:push
   fun:PyParser_AddToken
   fun:parsetok
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BF48: freechildren (node.c:148)
==10278==    by 0x4E7BF48: freechildren (node.c:144)
==10278==    by 0x4E7BF48: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==  Address 0xd101020 is 1,392 bytes inside a block of size 4,160 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BF8F: freechildren (node.c:146)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd102020 is 288 bytes inside a block of size 808 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BF48: freechildren (node.c:148)
==10278==    by 0x4E7BF48: freechildren (node.c:144)
==10278==    by 0x4E7BF48: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7CF94: parsetok (parsetok.c:180)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BF31: freechildren (node.c:146)
==10278==    by 0x4E7BF31: freechildren (node.c:144)
==10278==    by 0x4E7BF31: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==  Address 0xd0e6020 is 496 bytes inside a block of size 2,720 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BE62: freechildren (node.c:148)
==10278==    by 0x4E7BE62: freechildren (node.c:144)
==10278==    by 0x4E7BE62: freechildren (node.c:144)
==10278==    by 0x4E7BE62: freechildren (node.c:144)
==10278==    by 0x4E7BE62: freechildren (node.c:144)
==10278==    by 0x4E7BE62: freechildren (node.c:144)
==10278==    by 0x4E7BE62: freechildren (node.c:144)
==10278==    by 0x4E7BE62: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==  Address 0xd09c020 is 144 bytes inside a block of size 640 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BF60: freechildren (node.c:146)
==10278==    by 0x4E7BF60: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd09c020 is 144 bytes inside a block of size 640 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BED3: freechildren (node.c:146)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd099020 is 400 bytes inside a block of size 960 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BEA4: freechildren (node.c:146)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Address 0xd09b020 is 1,232 bytes inside a block of size 1,280 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BE7A: freechildren (node.c:146)
==10278==    by 0x4E7BE7A: freechildren (node.c:144)
==10278==    by 0x4E7BE7A: freechildren (node.c:144)
==10278==    by 0x4E7BE7A: freechildren (node.c:144)
==10278==    by 0x4E7BE7A: freechildren (node.c:144)
==10278==    by 0x4E7BE7A: freechildren (node.c:144)
==10278==    by 0x4E7BE7A: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==  Address 0xd115020 is 880 bytes inside a block of size 1,440 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BE50: freechildren (node.c:146)
==10278==    by 0x4E7BE50: freechildren (node.c:144)
==10278==    by 0x4E7BE50: freechildren (node.c:144)
==10278==    by 0x4E7BE50: freechildren (node.c:144)
==10278==    by 0x4E7BE50: freechildren (node.c:144)
==10278==    by 0x4E7BE50: freechildren (node.c:144)
==10278==    by 0x4E7BE50: freechildren (node.c:144)
==10278==    by 0x4E7BE50: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==  Address 0xd115020 is 880 bytes inside a block of size 1,440 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BF60: freechildren (node.c:146)
==10278==    by 0x4E7BF60: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Address 0xd096020 is 464 bytes inside a block of size 3,360 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BB29: PyNode_AddChild (node.c:98)
==10278==    by 0x4E7CA66: push (parser.c:126)
==10278==    by 0x4E7CA66: PyParser_AddToken (parser.c:252)
==10278==    by 0x4E7CF43: parsetok (parsetok.c:198)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BF60: freechildren (node.c:146)
==10278==    by 0x4E7BF60: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Address 0xd102020 is 288 bytes inside a block of size 808 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7BF48: freechildren (node.c:148)
==10278==    by 0x4E7BF48: freechildren (node.c:144)
==10278==    by 0x4E7BF48: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BE1B: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E7CF94: parsetok (parsetok.c:180)
==10278==    by 0x4F57782: PyParser_ASTFromString (pythonrun.c:1470)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3E59C: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3E59C: compiler_addop_o (compile.c:980)
==10278==    by 0x4F3E59C: compiler_import (compile.c:1926)
==10278==    by 0x4F3E59C: compiler_visit_stmt (compile.c:2142)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Address 0xd1d9020 is 256 bytes inside an unallocated block of size 288 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_addop_o
   fun:compiler_import
   fun:compiler_visit_stmt
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F3B24A: assemble (compile.c:3957)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd1dd020 is 256 bytes inside a block of size 768 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F3921D: compiler_unit_free (compile.c:447)
==10278==    by 0x4F39CC5: compiler_exit_scope (compile.c:544)
==10278==    by 0x4F40017: compiler_function (compile.c:1382)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F397A7: compiler_addop (compile.c:929)
==10278==    by 0x4F3E3E7: compiler_from_import (compile.c:2032)
==10278==    by 0x4F3E3E7: compiler_visit_stmt (compile.c:2144)
==10278==    by 0x4F3FFDD: compiler_function (compile.c:1379)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:assemble
   fun:compiler_function
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F3B81F: assemble_free (compile.c:3516)
==10278==    by 0x4F3B81F: assemble (compile.c:3962)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Address 0xd155020 is 752 bytes inside a block of size 2,152 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F55D70: PyArena_AddPyObject (pyarena.c:208)
==10278==    by 0x4F25081: ast_for_atom (ast.c:1401)
==10278==    by 0x4F25081: ast_for_power (ast.c:1790)
==10278==    by 0x4F25081: ast_for_expr (ast.c:1968)
==10278==    by 0x4F2612E: ast_for_arguments (ast.c:712)
==10278==    by 0x4F287E7: ast_for_funcdef (ast.c:908)
==10278==    by 0x4F28CD4: PyAST_FromNode (ast.c:254)
==10278==    by 0x4F5772D: PyParser_ASTFromString (pythonrun.c:1479)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F55D70: PyArena_AddPyObject (pyarena.c:208)
==10278==    by 0x4F24CD6: new_identifier (ast.c:54)
==10278==    by 0x4F24CD6: ast_for_atom (ast.c:1371)
==10278==    by 0x4F24CD6: ast_for_power (ast.c:1790)
==10278==    by 0x4F24CD6: ast_for_expr (ast.c:1968)
==10278==    by 0x4F26F8B: ast_for_testlist (ast.c:2131)
==10278==    by 0x4F26F8B: ast_for_expr_stmt (ast.c:2249)
==10278==    by 0x4F26F8B: ast_for_stmt (ast.c:3267)
==10278==    by 0x4F28CD4: PyAST_FromNode (ast.c:254)
==10278==    by 0x4F5772D: PyParser_ASTFromString (pythonrun.c:1479)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:assemble_free
   fun:assemble
   fun:compiler_function
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3BF2C: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3BF2C: compiler_addop_o (compile.c:980)
==10278==    by 0x4F3BF2C: compiler_nameop (compile.c:2394)
==10278==    by 0x4F3EE34: compiler_visit_stmt (compile.c:2105)
==10278==    by 0x4F40ABF: compiler_if (compile.c:1599)
==10278==    by 0x4F3FFDD: compiler_function (compile.c:1379)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Address 0xd1f8020 is 48 bytes inside a block of size 128 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F55796: PyCode_Optimize (peephole.c:650)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F3FD0E: compiler_class (compile.c:1442)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F54D82: PyCode_Optimize (peephole.c:346)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F3FD0E: compiler_class (compile.c:1442)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_addop_o
   fun:compiler_nameop
   fun:compiler_visit_stmt
   fun:compiler_if
   fun:compiler_function
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F3B81F: assemble_free (compile.c:3516)
==10278==    by 0x4F3B81F: assemble (compile.c:3962)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd1ed020 is 384 bytes inside a block of size 836 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F557A6: PyCode_Optimize (peephole.c:652)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F54D9C: markblocks (peephole.c:245)
==10278==    by 0x4F54D9C: PyCode_Optimize (peephole.c:352)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:assemble_free
   fun:assemble
   fun:compiler_function
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3BD61: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3BD61: compiler_nameop (compile.c:2434)
==10278==    by 0x4F3C93B: compiler_call (compile.c:2542)
==10278==    by 0x4F3C93B: compiler_visit_expr (compile.c:3022)
==10278==    by 0x4F3EDB3: compiler_visit_stmt (compile.c:2101)
==10278==    by 0x4F40ABF: compiler_if (compile.c:1599)
==10278==    by 0x4F3FFDD: compiler_function (compile.c:1379)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==  Address 0xd209020 is 240 bytes inside a block of size 768 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC7692: dictresize (dictobject.c:676)
==10278==    by 0x4F35149: import_all_from (ceval.c:4926)
==10278==    by 0x4F35149: PyEval_EvalFrameEx (ceval.c:2643)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F4AC96: PyImport_ExecCodeModuleEx (import.c:712)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_nameop
   fun:compiler_call
   fun:compiler_visit_expr
   fun:compiler_visit_stmt
   fun:compiler_if
   fun:compiler_function
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F3B19F: assemble_emit (compile.c:3664)
==10278==    by 0x4F3B19F: assemble (compile.c:3951)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==  Address 0xd224020 is 3,440 bytes inside an unallocated block of size 4,112 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:assemble_emit
   fun:assemble
   fun:compiler_function
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F3B24A: assemble (compile.c:3957)
==10278==    by 0x4F3FD0E: compiler_class (compile.c:1442)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd223020 is 7,696 bytes inside an unallocated block of size 8,288 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:assemble
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F397A7: compiler_addop (compile.c:929)
==10278==    by 0x4F3FCE4: compiler_class (compile.c:1440)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xd235020 is 320 bytes inside a block of size 1,260 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F557A6: PyCode_Optimize (peephole.c:652)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F54D9C: markblocks (peephole.c:245)
==10278==    by 0x4F54D9C: PyCode_Optimize (peephole.c:352)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F3B19F: assemble_emit (compile.c:3664)
==10278==    by 0x4F3B19F: assemble (compile.c:3951)
==10278==    by 0x4F4260E: compiler_mod (compile.c:1212)
==10278==    by 0x4F4260E: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Address 0xd22b020 is 416 bytes inside a block of size 1,061 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F3B24A: assemble (compile.c:3957)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F3B19F: assemble_emit (compile.c:3664)
==10278==    by 0x4F3B19F: assemble (compile.c:3951)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:assemble_emit
   fun:assemble
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
}
==10278== Invalid read of size 4
==10278==    at 0x4ED1C9E: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F3B24A: assemble (compile.c:3957)
==10278==    by 0x4F4260E: compiler_mod (compile.c:1212)
==10278==    by 0x4F4260E: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Address 0xd238020 is 1,216 bytes inside a block of size 1,536 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F3921D: compiler_unit_free (compile.c:447)
==10278==    by 0x4F39CC5: compiler_exit_scope (compile.c:544)
==10278==    by 0x4F3FD19: compiler_class (compile.c:1443)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F397A7: compiler_addop (compile.c:929)
==10278==    by 0x4F3FCE4: compiler_class (compile.c:1440)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:assemble
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F3921D: compiler_unit_free (compile.c:447)
==10278==    by 0x4F42620: compiler_exit_scope (compile.c:544)
==10278==    by 0x4F42620: compiler_mod (compile.c:1213)
==10278==    by 0x4F42620: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:compiler_unit_free
   fun:compiler_exit_scope
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F3921D: compiler_unit_free (compile.c:447)
==10278==    by 0x4F42620: compiler_exit_scope (compile.c:544)
==10278==    by 0x4F42620: compiler_mod (compile.c:1213)
==10278==    by 0x4F42620: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:compiler_unit_free
   fun:compiler_exit_scope
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 
==10278== More than 100 errors detected.  Subsequent errors
==10278== will still be recorded, but in less detail than before.
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BE2E: freechildren (node.c:146)
==10278==    by 0x4E7BE2E: freechildren (node.c:144)
==10278==    by 0x4E7BE2E: freechildren (node.c:144)
==10278==    by 0x4E7BE2E: freechildren (node.c:144)
==10278==    by 0x4E7BE2E: freechildren (node.c:144)
==10278==    by 0x4E7BE2E: freechildren (node.c:144)
==10278==    by 0x4E7BE2E: freechildren (node.c:144)
==10278==    by 0x4E7BE2E: freechildren (node.c:144)
==10278==    by 0x4E7BE2E: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==  Address 0xd24f020 is 16,224 bytes inside a block of size 16,421 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x11CA34DF: PyZlib_decompress (zlibmodule.c:371)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F85DB4: get_data (zipimport.c:1010)
==10278==    by 0x4F86142: get_code_from_data (zipimport.c:1212)
==10278==    by 0x4F86142: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x11CA3493: arrange_output_buffer_with_maximum (zlibmodule.c:152)
==10278==    by 0x11CA3493: arrange_output_buffer (zlibmodule.c:190)
==10278==    by 0x11CA3493: PyZlib_decompress (zlibmodule.c:328)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F85DB4: get_data (zipimport.c:1010)
==10278==    by 0x4F86142: get_code_from_data (zipimport.c:1212)
==10278==    by 0x4F86142: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED1CA7: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3BD61: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3BD61: compiler_nameop (compile.c:2434)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_nameop
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED1CBA: PyObject_Realloc (obmalloc.c:1253)
==10278==    by 0x4F39598: compiler_next_instr (compile.c:650)
==10278==    by 0x4F3BD61: compiler_addop_i (compile.c:1007)
==10278==    by 0x4F3BD61: compiler_nameop (compile.c:2434)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Realloc
   fun:compiler_next_instr
   fun:compiler_addop_i
   fun:compiler_nameop
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F863FC: compile_source (zipimport.c:1150)
==10278==    by 0x4F863FC: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863FC: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==  Address 0xd2b9020 is 13,984 bytes inside a block of size 16,092 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F863AB: normalize_line_endings (zipimport.c:1133)
==10278==    by 0x4F863AB: compile_source (zipimport.c:1144)
==10278==    by 0x4F863AB: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863AB: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F86332: normalize_line_endings (zipimport.c:1113)
==10278==    by 0x4F86332: compile_source (zipimport.c:1144)
==10278==    by 0x4F86332: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F86332: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BED3: freechildren (node.c:146)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F2DEA3: builtin_compile (bltinmodule.c:570)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F35885: ext_do_call (ceval.c:4666)
==10278==    by 0x4F35885: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:builtin_compile
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:ext_do_call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BED3: freechildren (node.c:146)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BED3: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F2DEA3: builtin_compile (bltinmodule.c:570)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F35885: ext_do_call (ceval.c:4666)
==10278==    by 0x4F35885: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:builtin_compile
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:ext_do_call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F31558: PyEval_EvalFrameEx (ceval.c:1454)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4EF44BD: slot_tp_str (typeobject.c:5486)
==10278==    by 0x4ED0CBA: _PyObject_Str (object.c:430)
==10278==    by 0x4ED0DA9: PyObject_Str (object.c:451)
==10278==    by 0x4EDEB8E: string_new (stringobject.c:3709)
==10278==  Address 0xd361020 is 624 bytes inside a block of size 1,104 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F7A62C: data_stack_dealloc (_sre.c:260)
==10278==    by 0x4F7A62C: state_fini (_sre.c:1823)
==10278==    by 0x4F83356: pattern_match (_sre.c:1967)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F7D35E: data_stack_grow (_sre.c:276)
==10278==    by 0x4F7D35E: sre_match (_sre.c:825)
==10278==    by 0x4F83375: pattern_match (_sre.c:1956)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:slot_tp_str
   fun:_PyObject_Str
   fun:PyObject_Str
   fun:string_new
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xD9312E5: _bufferedreader_read_all (bufferedio.c:1400)
==10278==    by 0xD9312E5: buffered_read (bufferedio.c:837)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E886D7: _PyObject_CallMethod_SizeT (abstract.c:2691)
==10278==    by 0xD93CBE3: textiowrapper_read (textio.c:1513)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278==  Address 0xf671020 is 224 bytes inside an unallocated block of size 864 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:_bufferedreader_read_all
   fun:buffered_read
   fun:PyObject_Call
   fun:call_function_tail
   fun:_PyObject_CallMethod_SizeT
   fun:textiowrapper_read
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xD93CD66: textiowrapper_read (textio.c:1519)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278==    by 0x70337AC: ifilter_next (itertoolsmodule.c:3021)
==10278==    by 0x4F2A6DE: builtin_next (bltinmodule.c:1118)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==  Address 0xf697020 is 672 bytes inside a block of size 2,444 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F7A62C: data_stack_dealloc (_sre.c:260)
==10278==    by 0x4F7A62C: state_fini (_sre.c:1823)
==10278==    by 0x4F822BE: pattern_search (_sre.c:2009)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F7ADB4: data_stack_grow (_sre.c:276)
==10278==    by 0x4F7D46B: sre_match (_sre.c:998)
==10278==    by 0x4F7F2B2: sre_search (_sre.c:1631)
==10278==    by 0x4F822EB: pattern_search (_sre.c:2000)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:textiowrapper_read
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
   fun:ifilter_next
   fun:builtin_next
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EF9F68: unicode_dealloc (unicodeobject.c:394)
==10278==    by 0x4EB2651: frame_dealloc (frameobject.c:458)
==10278==    by 0x4F610CA: tb_dealloc (traceback.c:28)
==10278==    by 0x4EA85F7: gen_close (genobject.c:143)
==10278==    by 0x4EA894C: gen_del (genobject.c:168)
==10278==    by 0x4EA8A7A: gen_dealloc (genobject.c:32)
==10278==    by 0x4F2FEDE: PyEval_EvalFrameEx (ceval.c:3226)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278==    by 0x4EA858C: gen_close (genobject.c:133)
==10278==    by 0x4EA894C: gen_del (genobject.c:168)
==10278==    by 0x4EA8A7A: gen_dealloc (genobject.c:32)
==10278==  Address 0x12022020 is 7,344 bytes inside a block of size 8,229 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0xD933B59: fileio_readall (fileio.c:607)
==10278==    by 0xD933F2D: fileio_read (fileio.c:632)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88571: PyObject_CallMethodObjArgs (abstract.c:2752)
==10278==    by 0xD9311D6: _bufferedreader_read_all (bufferedio.c:1382)
==10278==    by 0xD9311D6: buffered_read (bufferedio.c:837)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E886D7: _PyObject_CallMethod_SizeT (abstract.c:2691)
==10278==    by 0xD93CBE3: textiowrapper_read (textio.c:1513)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0xD9339C3: fileio_readall (fileio.c:550)
==10278==    by 0xD933F2D: fileio_read (fileio.c:632)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88571: PyObject_CallMethodObjArgs (abstract.c:2752)
==10278==    by 0xD9311D6: _bufferedreader_read_all (bufferedio.c:1382)
==10278==    by 0xD9311D6: buffered_read (bufferedio.c:837)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E886D7: _PyObject_CallMethod_SizeT (abstract.c:2691)
==10278==    by 0xD93CBE3: textiowrapper_read (textio.c:1513)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:unicode_dealloc
   fun:frame_dealloc
   fun:tb_dealloc
   fun:gen_close
   fun:gen_del
   fun:gen_dealloc
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
   fun:gen_close
   fun:gen_del
   fun:gen_dealloc
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xD9312E5: _bufferedreader_read_all (bufferedio.c:1400)
==10278==    by 0xD9312E5: buffered_read (bufferedio.c:837)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E886D7: _PyObject_CallMethod_SizeT (abstract.c:2691)
==10278==    by 0xD93CBE3: textiowrapper_read (textio.c:1513)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:_bufferedreader_read_all
   fun:buffered_read
   fun:PyObject_Call
   fun:call_function_tail
   fun:_PyObject_CallMethod_SizeT
   fun:textiowrapper_read
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EB2651: frame_dealloc (frameobject.c:458)
==10278==    by 0x4F610CA: tb_dealloc (traceback.c:28)
==10278==    by 0x4EA85F7: gen_close (genobject.c:143)
==10278==    by 0x4EA894C: gen_del (genobject.c:168)
==10278==    by 0x4EA8A7A: gen_dealloc (genobject.c:32)
==10278==    by 0x4F2FEDE: PyEval_EvalFrameEx (ceval.c:3226)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278==    by 0x4EA858C: gen_close (genobject.c:133)
==10278==    by 0x4EA894C: gen_del (genobject.c:168)
==10278==    by 0x4EA8A7A: gen_dealloc (genobject.c:32)
==10278==    by 0x4F31DBD: call_function (ceval.c:4385)
==10278==    by 0x4F31DBD: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:frame_dealloc
   fun:tb_dealloc
   fun:gen_close
   fun:gen_del
   fun:gen_dealloc
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
   fun:gen_close
   fun:gen_del
   fun:gen_dealloc
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xD93CD66: textiowrapper_read (textio.c:1519)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278==    by 0x70337AC: ifilter_next (itertoolsmodule.c:3021)
==10278==    by 0x4F2A6DE: builtin_next (bltinmodule.c:1118)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:textiowrapper_read
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
   fun:ifilter_next
   fun:builtin_next
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xD93CD66: textiowrapper_read (textio.c:1519)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278==    by 0x70337AC: ifilter_next (itertoolsmodule.c:3021)
==10278==    by 0x4F2A6DE: builtin_next (bltinmodule.c:1118)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:textiowrapper_read
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
   fun:ifilter_next
   fun:builtin_next
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0xD9312E5: _bufferedreader_read_all (bufferedio.c:1400)
==10278==    by 0xD9312E5: buffered_read (bufferedio.c:837)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E886D7: _PyObject_CallMethod_SizeT (abstract.c:2691)
==10278==    by 0xD93CBE3: textiowrapper_read (textio.c:1513)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:_bufferedreader_read_all
   fun:buffered_read
   fun:PyObject_Call
   fun:call_function_tail
   fun:_PyObject_CallMethod_SizeT
   fun:textiowrapper_read
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EC85F6: PyDict_DelItem (dictobject.c:884)
==10278==    by 0x4F323AA: PyEval_EvalFrameEx (ceval.c:2195)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F579AB: run_mod (pythonrun.c:1376)
==10278==    by 0x4F579AB: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Address 0xf608020 is 2,976 bytes inside a block of size 4,097 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4EB06: import_module_level (import.c:2298)
==10278==    by 0x4F4EB06: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F4E7DC: import_module_level (import.c:2238)
==10278==    by 0x4F4E7DC: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:PyDict_DelItem
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4ECD1E2: meth_dealloc (methodobject.c:134)
==10278==    by 0x4F31DBD: call_function (ceval.c:4385)
==10278==    by 0x4F31DBD: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:meth_dealloc
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4ECD1E2: meth_dealloc (methodobject.c:134)
==10278==    by 0x4F31DBD: call_function (ceval.c:4385)
==10278==    by 0x4F31DBD: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==  Address 0x10167020 is 1,040 bytes inside a block of size 1,104 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F7A62C: data_stack_dealloc (_sre.c:260)
==10278==    by 0x4F7A62C: state_fini (_sre.c:1823)
==10278==    by 0x4F83356: pattern_match (_sre.c:1967)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F7D35E: data_stack_grow (_sre.c:276)
==10278==    by 0x4F7D35E: sre_match (_sre.c:825)
==10278==    by 0x4F83375: pattern_match (_sre.c:1956)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:meth_dealloc
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EC72C6: insertdict_by_entry (dictobject.c:519)
==10278==    by 0x4ECA79B: insertdict (dictobject.c:556)
==10278==    by 0x4ECA79B: dict_set_item_by_hash_or_entry (dictobject.c:795)
==10278==    by 0x4ECA79B: PyDict_SetItem (dictobject.c:848)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==  Address 0xf799020 is 0 bytes after a block of size 128 in arena "client"
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:insertdict_by_entry
   fun:insertdict
   fun:dict_set_item_by_hash_or_entry
   fun:PyDict_SetItem
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F31DBD: call_function (ceval.c:4385)
==10278==    by 0x4F31DBD: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BEA4: freechildren (node.c:146)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F579AB: run_mod (pythonrun.c:1376)
==10278==    by 0x4F579AB: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7BEA4: freechildren (node.c:146)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BEA4: freechildren (node.c:144)
==10278==    by 0x4E7BFCD: PyNode_Free (node.c:124)
==10278==    by 0x4F57738: PyParser_ASTFromString (pythonrun.c:1480)
==10278==    by 0x4F57977: PyRun_StringFlags (pythonrun.c:1337)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F579AB: run_mod (pythonrun.c:1376)
==10278==    by 0x4F579AB: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:freechildren
   fun:PyNode_Free
   fun:PyParser_ASTFromString
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4ECD1E2: meth_dealloc (methodobject.c:134)
==10278==    by 0x4F31DBD: call_function (ceval.c:4385)
==10278==    by 0x4F31DBD: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:meth_dealloc
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EC72C6: insertdict_by_entry (dictobject.c:519)
==10278==    by 0x4ECA79B: insertdict (dictobject.c:556)
==10278==    by 0x4ECA79B: dict_set_item_by_hash_or_entry (dictobject.c:795)
==10278==    by 0x4ECA79B: PyDict_SetItem (dictobject.c:848)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:insertdict_by_entry
   fun:insertdict
   fun:dict_set_item_by_hash_or_entry
   fun:PyDict_SetItem
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EC72C6: insertdict_by_entry (dictobject.c:519)
==10278==    by 0x4ECA79B: insertdict (dictobject.c:556)
==10278==    by 0x4ECA79B: dict_set_item_by_hash_or_entry (dictobject.c:795)
==10278==    by 0x4ECA79B: PyDict_SetItem (dictobject.c:848)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:insertdict_by_entry
   fun:insertdict
   fun:dict_set_item_by_hash_or_entry
   fun:PyDict_SetItem
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==10278== Conditional jump or move depends on uninitialised value(s)
==10278==    at 0x4ED16DC: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EC940A: dict_dealloc (dictobject.c:1040)
==10278==    by 0x4EB2651: frame_dealloc (frameobject.c:458)
==10278==    by 0x4F388DE: PyEval_EvalCodeEx (ceval.c:3595)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Cond
   fun:PyObject_Free
   fun:dict_dealloc
   fun:frame_dealloc
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==10278== Use of uninitialised value of size 8
==10278==    at 0x4ED16F6: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4EC940A: dict_dealloc (dictobject.c:1040)
==10278==    by 0x4EB2651: frame_dealloc (frameobject.c:458)
==10278==    by 0x4F388DE: PyEval_EvalCodeEx (ceval.c:3595)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:PyObject_Free
   fun:dict_dealloc
   fun:frame_dealloc
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F5AF1F: PyMember_SetOne (structmember.c:321)
==10278==    by 0x4ECF054: _PyObject_GenericSetAttrWithDict (object.c:1507)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==  Address 0xd14b020 is 0 bytes inside a block of size 368 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4ED9C8B: stringlib_splitlines (split.h:384)
==10278==    by 0x4ED9C8B: string_splitlines (stringobject.c:3568)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4ED9C8B: stringlib_splitlines (split.h:384)
==10278==    by 0x4ED9C8B: string_splitlines (stringobject.c:3568)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:PyMember_SetOne
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4F7B7CA: pattern_dealloc (_sre.c:1883)
==10278==    by 0x4EE51EC: tupledealloc (tupleobject.c:222)
==10278==    by 0x4EC940A: dict_dealloc (dictobject.c:1040)
==10278==    by 0x4EC72C6: insertdict_by_entry (dictobject.c:519)
==10278==    by 0x4ECA79B: insertdict (dictobject.c:556)
==10278==    by 0x4ECA79B: dict_set_item_by_hash_or_entry (dictobject.c:795)
==10278==    by 0x4ECA79B: PyDict_SetItem (dictobject.c:848)
==10278==    by 0x4ECD9C9: _PyModule_Clear (moduleobject.c:125)
==10278==    by 0x4F4B691: PyImport_Cleanup (import.c:530)
==10278==    by 0x4F5857A: Py_Finalize (pythonrun.c:458)
==10278==    by 0x4F6E8E4: Py_Main (main.c:670)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278==  Address 0x177c5020 is 16 bytes after a block of size 4,208 free'd
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50C13: r_object (marshal.c:1030)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==  Block was alloc'd at
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4F51473: r_object (marshal.c:828)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:pattern_dealloc
   fun:tupledealloc
   fun:dict_dealloc
   fun:insertdict_by_entry
   fun:insertdict
   fun:dict_set_item_by_hash_or_entry
   fun:PyDict_SetItem
   fun:_PyModule_Clear
   fun:PyImport_Cleanup
   fun:Py_Finalize
   fun:Py_Main
   fun:(below main)
}
==10278== Invalid read of size 4
==10278==    at 0x4ED16D3: PyObject_Free (obmalloc.c:1013)
==10278==    by 0x4E7B419: PyGrammar_RemoveAccelerators (acceler.c:47)
==10278==    by 0x4F585F5: Py_Finalize (pythonrun.c:544)
==10278==    by 0x4F6E8E4: Py_Main (main.c:670)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278==  Address 0x61fc020 is 6,336 bytes inside a block of size 8,224 free'd
==10278==    at 0x4C2ED5B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F55EC3: block_free (pyarena.c:98)
==10278==    by 0x4F55EC3: PyArena_Free (pyarena.c:172)
==10278==    by 0x4F579C9: PyRun_StringFlags (pythonrun.c:1340)
==10278==    by 0x4F58CEF: PyRun_SimpleStringFlags (pythonrun.c:974)
==10278==    by 0x4F6E8B6: Py_Main (main.c:589)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278==  Block was alloc'd at
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F55F25: block_new (pyarena.c:83)
==10278==    by 0x4F55F25: PyArena_New (pyarena.c:137)
==10278==    by 0x4F57955: PyRun_StringFlags (pythonrun.c:1333)
==10278==    by 0x4F58CEF: PyRun_SimpleStringFlags (pythonrun.c:974)
==10278==    by 0x4F6E8B6: Py_Main (main.c:589)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:PyObject_Free
   fun:PyGrammar_RemoveAccelerators
   fun:Py_Finalize
   fun:Py_Main
   fun:(below main)
}
==10278== 
==10278== HEAP SUMMARY:
==10278==     in use at exit: 11,916,392 bytes in 11,356 blocks
==10278==   total heap usage: 160,758 allocs, 149,402 frees, 140,695,967 bytes allocated
==10278== 
==10278== 1 bytes in 1 blocks are still reachable in loss record 1 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0xCD0373F: allocate_reduce_result (reduction.c:71)
==10278==    by 0xCD03C99: PyArray_CreateReduceResult (reduction.c:231)
==10278==    by 0xCD03C99: PyUFunc_ReduceWrapper (reduction.c:488)
==10278==    by 0xCD59912: PyUFunc_Reduce (ufunc_object.c:3157)
==10278==    by 0xCD59912: PyUFunc_GenericReduction (ufunc_object.c:4151)
==10278==    by 0xCD5A097: ufunc_reduce (ufunc_object.c:5200)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:allocate_reduce_result
   fun:PyArray_CreateReduceResult
   fun:PyUFunc_ReduceWrapper
   fun:PyUFunc_Reduce
   fun:PyUFunc_GenericReduction
   fun:ufunc_reduce
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==10278== 1 bytes in 1 blocks are still reachable in loss record 2 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0xCD0373F: allocate_reduce_result (reduction.c:71)
==10278==    by 0xCD03C99: PyArray_CreateReduceResult (reduction.c:231)
==10278==    by 0xCD03C99: PyUFunc_ReduceWrapper (reduction.c:488)
==10278==    by 0xCD59912: PyUFunc_Reduce (ufunc_object.c:3157)
==10278==    by 0xCD59912: PyUFunc_GenericReduction (ufunc_object.c:4151)
==10278==    by 0xCD5A097: ufunc_reduce (ufunc_object.c:5200)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:allocate_reduce_result
   fun:PyArray_CreateReduceResult
   fun:PyUFunc_ReduceWrapper
   fun:PyUFunc_Reduce
   fun:PyUFunc_GenericReduction
   fun:ufunc_reduce
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==10278== 2 bytes in 1 blocks are still reachable in loss record 3 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8F638: StructUnionType_new (_ctypes.c:429)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:StructUnionType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== 3 bytes in 1 blocks are still reachable in loss record 4 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8EBC6: PyCSimpleType_new (_ctypes.c:2004)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== 3 bytes in 1 blocks are still reachable in loss record 5 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0xCD5B6DE: execute_legacy_ufunc_loop (ufunc_object.c:1662)
==10278==    by 0xCD5B6DE: PyUFunc_GenericFunction (ufunc_object.c:2749)
==10278==    by 0xCD5B8B4: ufunc_generic_call (ufunc_object.c:4411)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4ECEE69: try_rich_compare (object.c:622)
==10278==    by 0x4ED0560: do_richcmp (object.c:930)
==10278==    by 0x4ED0560: PyObject_RichCompare (object.c:982)
==10278==    by 0xFD92C94: __pyx_pf_6mtrand_11RandomState_4seed (mtrand.c:14014)
==10278==    by 0xFD92C94: __pyx_pw_6mtrand_11RandomState_5seed (mtrand.c:13502)
==10278==    by 0xFD6135E: __Pyx_PyObject_Call (mtrand.c:44507)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:execute_legacy_ufunc_loop
   fun:PyUFunc_GenericFunction
   fun:ufunc_generic_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:try_rich_compare
   fun:do_richcmp
   fun:PyObject_RichCompare
   fun:__pyx_pf_6mtrand_11RandomState_4seed
   fun:__pyx_pw_6mtrand_11RandomState_5seed
   fun:__Pyx_PyObject_Call
}
==10278== 3 bytes in 1 blocks are still reachable in loss record 6 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0xCD5B6DE: execute_legacy_ufunc_loop (ufunc_object.c:1662)
==10278==    by 0xCD5B6DE: PyUFunc_GenericFunction (ufunc_object.c:2749)
==10278==    by 0xCD5B8B4: ufunc_generic_call (ufunc_object.c:4411)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4ECEE69: try_rich_compare (object.c:622)
==10278==    by 0x4ED0560: do_richcmp (object.c:930)
==10278==    by 0x4ED0560: PyObject_RichCompare (object.c:982)
==10278==    by 0xFD92CC6: __pyx_pf_6mtrand_11RandomState_4seed (mtrand.c:14016)
==10278==    by 0xFD92CC6: __pyx_pw_6mtrand_11RandomState_5seed (mtrand.c:13502)
==10278==    by 0xFD6135E: __Pyx_PyObject_Call (mtrand.c:44507)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:execute_legacy_ufunc_loop
   fun:PyUFunc_GenericFunction
   fun:ufunc_generic_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:try_rich_compare
   fun:do_richcmp
   fun:PyObject_RichCompare
   fun:__pyx_pf_6mtrand_11RandomState_4seed
   fun:__pyx_pw_6mtrand_11RandomState_5seed
   fun:__Pyx_PyObject_Call
}
==10278== 3 bytes in 1 blocks are still reachable in loss record 7 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0xCD5B6DE: execute_legacy_ufunc_loop (ufunc_object.c:1662)
==10278==    by 0xCD5B6DE: PyUFunc_GenericFunction (ufunc_object.c:2749)
==10278==    by 0xCD5B8B4: ufunc_generic_call (ufunc_object.c:4411)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x8209032: PyArray_GenericBinaryFunction (number.c:260)
==10278==    by 0x8209032: array_bitwise_or (number.c:624)
==10278==    by 0x4E84A31: binary_op1 (abstract.c:945)
==10278==    by 0x4E87D5D: binary_op (abstract.c:997)
==10278==    by 0x4E87D5D: PyNumber_Or (abstract.c:1173)
==10278==    by 0xFD92CDD: __pyx_pf_6mtrand_11RandomState_4seed (mtrand.c:14017)
==10278==    by 0xFD92CDD: __pyx_pw_6mtrand_11RandomState_5seed (mtrand.c:13502)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:execute_legacy_ufunc_loop
   fun:PyUFunc_GenericFunction
   fun:ufunc_generic_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:PyArray_GenericBinaryFunction
   fun:array_bitwise_or
   fun:binary_op1
   fun:binary_op
   fun:PyNumber_Or
   fun:__pyx_pf_6mtrand_11RandomState_4seed
   fun:__pyx_pw_6mtrand_11RandomState_5seed
}
==10278== 4 bytes in 1 blocks are still reachable in loss record 8 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8E7B8: PyCFuncPtrType_new (_ctypes.c:2400)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
}
==10278== 4 bytes in 1 blocks are still reachable in loss record 9 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8E7B8: PyCFuncPtrType_new (_ctypes.c:2400)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 4 bytes in 1 blocks are still reachable in loss record 10 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8FA96: PyCPointerType_new (_ctypes.c:980)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x7A9425F: POINTER (callproc.c:1851)
==10278==    by 0x124AA084: __Pyx_PyObject_CallMethO (_ccallback_c.c:4997)
==10278==    by 0x124AA084: __Pyx_PyObject_CallOneArg (_ccallback_c.c:5032)
==10278==    by 0x124AEA94: init_ccallback_c (_ccallback_c.c:3527)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCPointerType_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:POINTER
   fun:__Pyx_PyObject_CallMethO
   fun:__Pyx_PyObject_CallOneArg
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 4 bytes in 1 blocks are still reachable in loss record 11 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8E7B8: PyCFuncPtrType_new (_ctypes.c:2400)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B24AB: init_ccallback_c (_ccallback_c.c:3582)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 4 bytes in 1 blocks are still reachable in loss record 12 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8E7B8: PyCFuncPtrType_new (_ctypes.c:2400)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B1803: init_ccallback_c (_ccallback_c.c:3808)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 4 bytes in 1 blocks are still reachable in loss record 13 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8E7B8: PyCFuncPtrType_new (_ctypes.c:2400)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B0C0D: init_ccallback_c (_ccallback_c.c:4044)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 4 bytes in 1 blocks are still reachable in loss record 14 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8E7B8: PyCFuncPtrType_new (_ctypes.c:2400)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B05AB: init_ccallback_c (_ccallback_c.c:4210)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 4 bytes in 1 blocks are still reachable in loss record 15 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x820FA05: PyArray_FromScalar (scalarapi.c:313)
==10278==    by 0x816D081: PyArray_FromAny (ctors.c:1733)
==10278==    by 0xCD55C52: get_ufunc_arguments (ufunc_object.c:833)
==10278==    by 0xCD5A27A: PyUFunc_GenericFunction (ufunc_object.c:2665)
==10278==    by 0xCD5B8B4: ufunc_generic_call (ufunc_object.c:4411)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x811C7E2: array_richcompare (arrayobject.c:1396)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_FromScalar
   fun:PyArray_FromAny
   fun:get_ufunc_arguments
   fun:PyUFunc_GenericFunction
   fun:ufunc_generic_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:array_richcompare
}
==10278== 6 bytes in 1 blocks are still reachable in loss record 16 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BF1799: strdup (strdup.c:42)
==10278==    by 0x4F5A324: Py_InitializeEx (pythonrun.c:311)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:strdup
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 6 bytes in 1 blocks are still reachable in loss record 17 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A93DB5: set_conversion_mode (callproc.c:1704)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:set_conversion_mode
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 6 bytes in 2 blocks are still reachable in loss record 18 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0xCD5B6DE: execute_legacy_ufunc_loop (ufunc_object.c:1662)
==10278==    by 0xCD5B6DE: PyUFunc_GenericFunction (ufunc_object.c:2749)
==10278==    by 0xCD5B8B4: ufunc_generic_call (ufunc_object.c:4411)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x8209D71: array_power (number.c:546)
==10278==    by 0x4E85EAD: ternary_op (abstract.c:1065)
==10278==    by 0x4F312C4: PyEval_EvalFrameEx (ceval.c:1387)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:execute_legacy_ufunc_loop
   fun:PyUFunc_GenericFunction
   fun:ufunc_generic_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:array_power
   fun:ternary_op
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 7 bytes in 1 blocks are still reachable in loss record 19 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A93DDC: set_conversion_mode (callproc.c:1712)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:set_conversion_mode
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 20 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F538C4: do_mklist (modsupport.c:249)
==10278==    by 0x4F538C4: do_mkvalue (modsupport.c:328)
==10278==    by 0x4F5437C: va_build_value (modsupport.c:563)
==10278==    by 0x4F5472E: Py_BuildValue (modsupport.c:511)
==10278==    by 0x4F4F138: PyImport_Import (import.c:2874)
==10278==    by 0x4F4F16B: PyImport_ImportModule (import.c:2151)
==10278==    by 0x4EA66B3: _PyExc_Init (exceptions.c:2120)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:do_mklist
   fun:do_mkvalue
   fun:va_build_value
   fun:Py_BuildValue
   fun:PyImport_Import
   fun:PyImport_ImportModule
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 21 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFC0B: InitOperators (__umath_generated.c:2137)
==10278==    by 0xCCFFC0B: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 22 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFC96: InitOperators (__umath_generated.c:2143)
==10278==    by 0xCCFFC96: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 23 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFEA4: InitOperators (__umath_generated.c:2165)
==10278==    by 0xCCFFEA4: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 24 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFF20: InitOperators (__umath_generated.c:2170)
==10278==    by 0xCCFFF20: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 25 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFF9C: InitOperators (__umath_generated.c:2175)
==10278==    by 0xCCFFF9C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 26 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00094: InitOperators (__umath_generated.c:2185)
==10278==    by 0xCD00094: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 27 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00284: InitOperators (__umath_generated.c:2205)
==10278==    by 0xCD00284: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 28 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00300: InitOperators (__umath_generated.c:2210)
==10278==    by 0xCD00300: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 29 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0037C: InitOperators (__umath_generated.c:2215)
==10278==    by 0xCD0037C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 30 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0056C: InitOperators (__umath_generated.c:2235)
==10278==    by 0xCD0056C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 31 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD008EE: InitOperators (__umath_generated.c:2272)
==10278==    by 0xCD008EE: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 32 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00A62: InitOperators (__umath_generated.c:2287)
==10278==    by 0xCD00A62: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 33 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00F85: InitOperators (__umath_generated.c:2342)
==10278==    by 0xCD00F85: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 34 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01506: InitOperators (__umath_generated.c:2400)
==10278==    by 0xCD01506: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 35 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01B30: InitOperators (__umath_generated.c:2466)
==10278==    by 0xCD01B30: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 36 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01CC2: InitOperators (__umath_generated.c:2483)
==10278==    by 0xCD01CC2: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 37 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01DC9: InitOperators (__umath_generated.c:2494)
==10278==    by 0xCD01DC9: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 38 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01EC1: InitOperators (__umath_generated.c:2504)
==10278==    by 0xCD01EC1: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 39 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD02035: InitOperators (__umath_generated.c:2519)
==10278==    by 0xCD02035: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 40 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD020B1: InitOperators (__umath_generated.c:2524)
==10278==    by 0xCD020B1: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 41 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD021B8: InitOperators (__umath_generated.c:2535)
==10278==    by 0xCD021B8: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 42 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD02234: InitOperators (__umath_generated.c:2540)
==10278==    by 0xCD02234: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 43 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0232C: InitOperators (__umath_generated.c:2550)
==10278==    by 0xCD0232C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 44 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD023A8: InitOperators (__umath_generated.c:2555)
==10278==    by 0xCD023A8: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 45 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD024AF: InitOperators (__umath_generated.c:2566)
==10278==    by 0xCD024AF: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 46 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0252B: InitOperators (__umath_generated.c:2571)
==10278==    by 0xCD0252B: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 47 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD02632: InitOperators (__umath_generated.c:2582)
==10278==    by 0xCD02632: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 48 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816D1B0: PyArray_FromAny (ctors.c:1766)
==10278==    by 0xCD55FC3: get_ufunc_arguments (ufunc_object.c:833)
==10278==    by 0xCD5A27A: PyUFunc_GenericFunction (ufunc_object.c:2665)
==10278==    by 0xCD5B8B4: ufunc_generic_call (ufunc_object.c:4411)
==10278==    by 0xFD6135E: __Pyx_PyObject_Call (mtrand.c:44507)
==10278==    by 0xFD61EA3: __Pyx__PyObject_CallOneArg (mtrand.c:44546)
==10278==    by 0xFD61EA3: __Pyx_PyObject_CallOneArg (mtrand.c:44569)
==10278==    by 0xFD99D07: initmtrand (mtrand.c:43317)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_FromAny
   fun:get_ufunc_arguments
   fun:PyUFunc_GenericFunction
   fun:ufunc_generic_call
   fun:__Pyx_PyObject_Call
   fun:__Pyx__PyObject_CallOneArg
   fun:__Pyx_PyObject_CallOneArg
   fun:initmtrand
   fun:_PyImport_LoadDynamicModule
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 49 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x8162DB5: PyArray_CastToType (convert_datatype.c:55)
==10278==    by 0xCD5A891: check_for_trivial_loop (ufunc_object.c:1267)
==10278==    by 0xCD5A891: PyUFunc_GenericFunction (ufunc_object.c:2699)
==10278==    by 0xCD5B8B4: ufunc_generic_call (ufunc_object.c:4411)
==10278==    by 0xFD6135E: __Pyx_PyObject_Call (mtrand.c:44507)
==10278==    by 0xFD61EA3: __Pyx__PyObject_CallOneArg (mtrand.c:44546)
==10278==    by 0xFD61EA3: __Pyx_PyObject_CallOneArg (mtrand.c:44569)
==10278==    by 0xFD99D07: initmtrand (mtrand.c:43317)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_CastToType
   fun:check_for_trivial_loop
   fun:PyUFunc_GenericFunction
   fun:ufunc_generic_call
   fun:__Pyx_PyObject_Call
   fun:__Pyx__PyObject_CallOneArg
   fun:__Pyx_PyObject_CallOneArg
   fun:initmtrand
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 50 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x820FA05: PyArray_FromScalar (scalarapi.c:313)
==10278==    by 0x8210F57: gentype_generic_method (scalartypes.c.src:172)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_FromScalar
   fun:gentype_generic_method
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 1 blocks are still reachable in loss record 51 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x820FA05: PyArray_FromScalar (scalarapi.c:313)
==10278==    by 0x816D081: PyArray_FromAny (ctors.c:1733)
==10278==    by 0xCD55C52: get_ufunc_arguments (ufunc_object.c:833)
==10278==    by 0xCD5A27A: PyUFunc_GenericFunction (ufunc_object.c:2665)
==10278==    by 0xCD5B8B4: ufunc_generic_call (ufunc_object.c:4411)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_FromScalar
   fun:PyArray_FromAny
   fun:get_ufunc_arguments
   fun:PyUFunc_GenericFunction
   fun:ufunc_generic_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8 bytes in 2 blocks are still reachable in loss record 52 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8FA96: PyCPointerType_new (_ctypes.c:980)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x7A9425F: POINTER (callproc.c:1851)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCPointerType_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:POINTER
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 53 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFD21: InitOperators (__umath_generated.c:2149)
==10278==    by 0xCCFFD21: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 54 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00110: InitOperators (__umath_generated.c:2190)
==10278==    by 0xCD00110: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 55 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0018C: InitOperators (__umath_generated.c:2195)
==10278==    by 0xCD0018C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 56 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00208: InitOperators (__umath_generated.c:2200)
==10278==    by 0xCD00208: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 57 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00664: InitOperators (__umath_generated.c:2245)
==10278==    by 0xCD00664: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 58 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0076B: InitOperators (__umath_generated.c:2256)
==10278==    by 0xCD0076B: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 59 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00ADE: InitOperators (__umath_generated.c:2292)
==10278==    by 0xCD00ADE: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 60 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00D77: InitOperators (__umath_generated.c:2320)
==10278==    by 0xCD00D77: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 61 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00E02: InitOperators (__umath_generated.c:2326)
==10278==    by 0xCD00E02: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 62 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0127C: InitOperators (__umath_generated.c:2373)
==10278==    by 0xCD0127C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 63 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD012F8: InitOperators (__umath_generated.c:2378)
==10278==    by 0xCD012F8: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 64 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01383: InitOperators (__umath_generated.c:2384)
==10278==    by 0xCD01383: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 65 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD016F6: InitOperators (__umath_generated.c:2420)
==10278==    by 0xCD016F6: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 66 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD017FD: InitOperators (__umath_generated.c:2431)
==10278==    by 0xCD017FD: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 67 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01913: InitOperators (__umath_generated.c:2443)
==10278==    by 0xCD01913: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 68 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0199E: InitOperators (__umath_generated.c:2449)
==10278==    by 0xCD0199E: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 69 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01AA5: InitOperators (__umath_generated.c:2460)
==10278==    by 0xCD01AA5: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 70 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01C37: InitOperators (__umath_generated.c:2477)
==10278==    by 0xCD01C37: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 71 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01D4D: InitOperators (__umath_generated.c:2489)
==10278==    by 0xCD01D4D: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 72 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01F3D: InitOperators (__umath_generated.c:2509)
==10278==    by 0xCD01F3D: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 73 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01FB9: InitOperators (__umath_generated.c:2514)
==10278==    by 0xCD01FB9: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 74 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD02424: InitOperators (__umath_generated.c:2560)
==10278==    by 0xCD02424: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12 bytes in 1 blocks are still reachable in loss record 75 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD025A7: InitOperators (__umath_generated.c:2576)
==10278==    by 0xCD025A7: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 14 bytes in 3 blocks are still reachable in loss record 76 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x8162DB5: PyArray_CastToType (convert_datatype.c:55)
==10278==    by 0xCD5A891: check_for_trivial_loop (ufunc_object.c:1267)
==10278==    by 0xCD5A891: PyUFunc_GenericFunction (ufunc_object.c:2699)
==10278==    by 0xCD5B8B4: ufunc_generic_call (ufunc_object.c:4411)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x8209D71: array_power (number.c:546)
==10278==    by 0x4E85EAD: ternary_op (abstract.c:1065)
==10278==    by 0x4F312C4: PyEval_EvalFrameEx (ceval.c:1387)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_CastToType
   fun:check_for_trivial_loop
   fun:PyUFunc_GenericFunction
   fun:ufunc_generic_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:array_power
   fun:ternary_op
   fun:PyEval_EvalFrameEx
}
==10278== 15 bytes in 1 blocks are still reachable in loss record 77 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BF1799: strdup (strdup.c:42)
==10278==    by 0x117014B1: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:strdup
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== 16 bytes in 1 blocks are still reachable in loss record 78 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4698)
==10278==    by 0xCD54FA6: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD006EF: InitOperators (__umath_generated.c:2251)
==10278==    by 0xCD006EF: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 16 bytes in 1 blocks are still reachable in loss record 79 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4EB99E9: list_repeat (listobject.c:559)
==10278==    by 0x4F31385: PyEval_EvalFrameEx (ceval.c:1399)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:list_repeat
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 16 bytes in 1 blocks are still reachable in loss record 80 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816D1B0: PyArray_FromAny (ctors.c:1766)
==10278==    by 0x816D2FB: PyArray_CheckFromAny (ctors.c:1874)
==10278==    by 0x81EDE4A: _array_fromobject (multiarraymodule.c:1753)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_FromAny
   fun:PyArray_CheckFromAny
   fun:_array_fromobject
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 16 bytes in 1 blocks are still reachable in loss record 81 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8167E74: PyArray_NewFromDescr_int (ctors.c:1019)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x81A24E0: PyArray_Diagonal (item_selection.c:1882)
==10278==    by 0x81E3AF9: array_diagonal (methods.c:2234)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_Diagonal
   fun:array_diagonal
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 17 bytes in 1 blocks are still reachable in loss record 82 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x5BF1799: strdup (strdup.c:42)
==10278==    by 0x116FE802: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x116FEAE5: _nc_first_db (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11707413: _nc_read_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701118: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701461: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:strdup
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_first_db
   fun:_nc_read_entry
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 18 bytes in 3 blocks are still reachable in loss record 83 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0xCD5B212: execute_legacy_ufunc_loop (ufunc_object.c:1603)
==10278==    by 0xCD5B212: PyUFunc_GenericFunction (ufunc_object.c:2749)
==10278==    by 0xCD5B8B4: ufunc_generic_call (ufunc_object.c:4411)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:execute_legacy_ufunc_loop
   fun:PyUFunc_GenericFunction
   fun:ufunc_generic_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 84 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065D0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 85 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065D0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 86 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065D0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 87 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065D0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 88 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065DD: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 89 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065DD: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 90 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065DD: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 91 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065DD: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 92 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065F5: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 93 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50660D: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 94 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50661A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 95 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50661A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 96 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50661A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 97 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50661A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 98 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506627: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 99 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506627: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 100 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506634: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 101 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506634: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 102 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506634: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 103 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506634: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 104 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50664C: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 105 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506664: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 106 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506671: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 107 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506671: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 108 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506671: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 109 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506671: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 110 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506689: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 111 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066A1: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 112 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066B9: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 113 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066C6: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 114 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066D3: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 115 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066D3: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 116 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066D3: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 117 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066D3: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 118 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066E0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 119 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066E0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 120 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066E0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 121 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066E0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 122 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066F8: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 123 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506710: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 124 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50671D: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 125 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50671D: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 126 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50671D: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 127 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50671D: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 128 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50672A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 129 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50672A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 130 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50672A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 131 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50672A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 132 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506737: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 133 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506737: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 134 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506737: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 135 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506737: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 136 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506744: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 137 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506744: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 138 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506744: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 139 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506744: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 140 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 141 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7590: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 142 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7590: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 143 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C759D: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 144 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C759D: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 145 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75AA: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 146 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75AA: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 147 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75B7: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 148 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75B7: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 149 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75C4: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 150 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75C4: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 151 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75D1: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 152 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75D1: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 153 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75DE: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 154 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75DE: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 155 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75EB: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 156 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75EB: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 157 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75F8: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 158 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C75F8: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 159 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7605: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 160 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7605: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 161 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7612: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 162 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7612: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 163 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C761F: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 164 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C761F: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 165 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C762C: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 166 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C762C: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 167 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7639: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 168 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7639: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 169 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7646: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 170 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7646: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 171 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7653: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 172 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7653: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 173 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7660: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 174 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C7660: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 175 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C766D: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 176 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C766D: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 177 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C767A: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 178 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C767A: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 179 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DF0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 180 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DF0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 181 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DF0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 182 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DF0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 183 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DFD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 184 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DFD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 185 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DFD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 186 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DFD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 187 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E0A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 188 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E0A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 189 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E0A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 190 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E0A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 191 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E17: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 192 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E17: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 193 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E17: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 194 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E17: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 195 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E24: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 196 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E24: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 197 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E24: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 198 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E24: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 199 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E31: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 200 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E31: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 201 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E31: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 202 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E31: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 203 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E3E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 204 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E3E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 205 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E3E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 206 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E3E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 207 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E4B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 208 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E4B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 209 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E4B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 210 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E4B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 211 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E58: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 212 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E58: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 213 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E58: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 214 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E58: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 215 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E65: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 216 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E65: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 217 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E65: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 218 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E65: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 219 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E72: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 220 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E72: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 221 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E72: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 222 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E72: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 223 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E8A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 224 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505E8A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 225 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EA2: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 226 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EA2: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 227 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EAF: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 228 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EAF: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 229 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EC7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 230 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EC7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 231 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EDF: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 232 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EDF: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 233 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EEC: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 234 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EEC: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 235 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EEC: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 236 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EEC: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 237 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EF9: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 238 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505EF9: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 239 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F11: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 240 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F11: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 241 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F29: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 242 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F29: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 243 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F36: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 244 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F36: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 245 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F36: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 246 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F36: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 247 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F43: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 248 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F43: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 249 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F43: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 250 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F43: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 251 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F50: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 252 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F50: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 253 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F50: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 254 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F50: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 255 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F5D: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 256 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F5D: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 257 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F6A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 258 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F6A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 259 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F77: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 260 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F77: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 261 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F77: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 262 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F77: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 263 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F84: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 264 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F84: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 265 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F91: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 266 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F91: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 267 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F91: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 268 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F91: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 269 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F9E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 270 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F9E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 271 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F9E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 272 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505F9E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 273 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FAB: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 274 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FAB: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 275 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FAB: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 276 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FAB: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 277 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FB8: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 278 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FB8: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 279 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FD0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 280 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FD0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 281 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FE8: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 282 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FE8: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 283 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FF5: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 284 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FF5: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 285 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FF5: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 286 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505FF5: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 287 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506002: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 288 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506002: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 289 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506002: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 290 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506002: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 291 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50600F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 292 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50600F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 293 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50600F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 294 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50600F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 295 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50601C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 296 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50601C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 297 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506034: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 298 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506034: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 299 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50604C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 300 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50604C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 301 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506059: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 302 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506059: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 303 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506059: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 304 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506059: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 305 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506066: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 306 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506066: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 307 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506066: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 308 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506066: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 309 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506073: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 310 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506073: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 311 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506073: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 312 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506073: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 313 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506080: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 314 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506080: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 315 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50608D: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 316 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50608D: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 317 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50609A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 318 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50609A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 319 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50609A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 320 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50609A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 321 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060B2: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 322 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060B2: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 323 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060CA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 324 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060CA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 325 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060D7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 326 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060D7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 327 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060D7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 328 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060D7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 329 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060E4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 330 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060E4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 331 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060E4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 332 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060E4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 333 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060F1: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 334 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060F1: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 335 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060F1: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 336 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060F1: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 337 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060FE: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 338 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060FE: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 339 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060FE: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 340 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5060FE: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 341 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506116: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 342 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506116: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 343 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50612E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 344 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50612E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 345 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506146: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 346 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506146: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 347 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506153: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 348 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506153: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 349 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506153: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 350 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506153: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 351 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506160: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 352 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506160: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 353 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506160: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 354 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506160: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 355 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50616D: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 356 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50616D: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 357 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50616D: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 358 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50616D: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 359 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50617A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 360 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50617A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 361 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50617A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 362 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50617A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 363 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506192: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 364 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506192: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 365 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061AA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 366 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061AA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 367 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061C2: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 368 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061C2: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 369 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061DA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 370 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061DA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 371 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061E7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 372 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061E7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 373 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061E7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 374 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061E7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 375 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061F4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 376 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5061F4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 377 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506201: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 378 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506201: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 379 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506201: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 380 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506201: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 381 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50620E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 382 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50620E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 383 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50620E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 384 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50620E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 385 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50621B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 386 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50621B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 387 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50621B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 388 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50621B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 389 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506228: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 390 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506228: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 391 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506228: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 392 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506228: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 393 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506235: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 394 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506235: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 395 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506235: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 396 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506235: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 397 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506242: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 398 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506242: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 399 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50624F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 400 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50624F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 401 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50624F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 402 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50624F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 403 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50625C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 404 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50625C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 405 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50625C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 406 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50625C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 407 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506269: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 408 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506269: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 409 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506281: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 410 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506281: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 411 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506299: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 412 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506299: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 413 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062A6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 414 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062A6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 415 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062A6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 416 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062A6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 417 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062B3: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 418 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062B3: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 419 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062C0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 420 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062C0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 421 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062C0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 422 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062C0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 423 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062CD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 424 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062CD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 425 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062CD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 426 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062CD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 427 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062DA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 428 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062DA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 429 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062DA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 430 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062DA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 431 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062E7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 432 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062E7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 433 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062E7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 434 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062E7: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 435 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062F4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 436 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062F4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 437 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062F4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 438 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5062F4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 439 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506301: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 440 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506301: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 441 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506301: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 442 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506301: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 443 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50630E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 444 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50630E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 445 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50630E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 446 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50630E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 447 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50631B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 448 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50631B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 449 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506333: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 450 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506333: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 451 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50634B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 452 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50634B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 453 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506358: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 454 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506358: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 455 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506358: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 456 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506358: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 457 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506365: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 458 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506365: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 459 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506372: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 460 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506372: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 461 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506372: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 462 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506372: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 463 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50637F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 464 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50637F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 465 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50637F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 466 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50637F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 467 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50638C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 468 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50638C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 469 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50638C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 470 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50638C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 471 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506399: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 472 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506399: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 473 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506399: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 474 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506399: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 475 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063A6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 476 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063A6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 477 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063A6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 478 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063A6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 479 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063B3: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 480 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063B3: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 481 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063C0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 482 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063C0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 483 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063C0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 484 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063C0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 485 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063CD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 486 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063CD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 487 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063CD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 488 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063CD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 489 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063DA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 490 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063DA: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 491 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063F2: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 492 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5063F2: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 493 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50640A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 494 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50640A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 495 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506417: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 496 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506417: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 497 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506424: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 498 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506424: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 499 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506431: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 500 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506431: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 501 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50643E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 502 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50643E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 503 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50644B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 504 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50644B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 505 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50644B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 506 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50644B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 507 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506458: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 508 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506458: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 509 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506465: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 510 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506465: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 511 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506465: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 512 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506465: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 513 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506472: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 514 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506472: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 515 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506472: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 516 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506472: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 517 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50647F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 518 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50647F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 519 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50647F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 520 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50647F: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 521 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50648C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 522 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50648C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 523 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50648C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 524 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50648C: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 525 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064A4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 526 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064A4: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 527 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064BC: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 528 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064BC: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 529 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064C9: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 530 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064C9: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 531 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064C9: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 532 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064C9: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 533 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064D6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 534 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064D6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 535 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064D6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 536 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064D6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 537 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064E3: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 538 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064E3: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 539 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064E3: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 540 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064E3: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 541 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064F0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 542 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064F0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 543 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064F0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 544 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064F0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 545 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064FD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 546 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064FD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 547 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064FD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 548 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064FD: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 549 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50650A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 550 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50650A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 551 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50650A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 552 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50650A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 553 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506522: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 554 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506522: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 555 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50653A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 556 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50653A: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 557 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506547: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 558 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506547: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 559 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506547: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 560 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506547: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 561 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506554: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 562 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506554: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 563 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506561: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 564 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506561: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 565 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506561: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 566 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506561: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 567 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50656E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 568 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50656E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 569 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50656E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 570 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50656E: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 571 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50657B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 572 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50657B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 573 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50657B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 574 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50657B: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 575 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506588: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 576 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506588: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 577 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506588: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 578 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506588: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 579 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065A0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 580 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065A0: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 581 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 582 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 583 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065D0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 584 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065D0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 585 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065D0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 586 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065D0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 587 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065DD: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 588 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065DD: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 589 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065DD: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 590 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065DD: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 591 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065F5: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 592 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50660D: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 593 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50661A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 594 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50661A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 595 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50661A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 596 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50661A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 597 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506627: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 598 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506627: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 599 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506634: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 600 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506634: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 601 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506634: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 602 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506634: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 603 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50664C: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 604 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506664: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 605 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506671: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 606 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506671: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 607 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506671: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 608 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506671: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 609 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506689: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 610 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066A1: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 611 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066B9: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 612 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066C6: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 613 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066D3: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 614 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066D3: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 615 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066D3: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 616 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066D3: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 617 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066E0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 618 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066E0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 619 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066E0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 620 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066E0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 621 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5066F8: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 622 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506710: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 623 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50671D: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 624 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50671D: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 625 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50671D: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 626 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50671D: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 627 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50672A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 628 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50672A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 629 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50672A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 630 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE50672A: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 631 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506737: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 632 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506737: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 633 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506737: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 634 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506737: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 635 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506744: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 636 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506744: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 637 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501BB9: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506744: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 638 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE506744: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:OpenSSL_add_all_digests
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 639 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D73: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B95: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 640 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816D1B0: PyArray_FromAny (ctors.c:1766)
==10278==    by 0x816D2FB: PyArray_CheckFromAny (ctors.c:1874)
==10278==    by 0x81EDE4A: _array_fromobject (multiarraymodule.c:1753)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0xFD61CE4: __Pyx_PyFunction_FastCallDict.clone.17 (mtrand.c:44485)
==10278==    by 0xFD61E6E: __Pyx_PyObject_CallOneArg (mtrand.c:44553)
==10278==    by 0xFD92AD9: __pyx_pf_6mtrand_11RandomState_4seed (mtrand.c:13948)
==10278==    by 0xFD92AD9: __pyx_pw_6mtrand_11RandomState_5seed (mtrand.c:13502)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_FromAny
   fun:PyArray_CheckFromAny
   fun:_array_fromobject
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.17
   fun:__Pyx_PyObject_CallOneArg
   fun:__pyx_pf_6mtrand_11RandomState_4seed
   fun:__pyx_pw_6mtrand_11RandomState_5seed
}
==10278== 24 bytes in 1 blocks are still reachable in loss record 641 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x816A8C7: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816A8C7: PyArray_NewLikeArray (ctors.c:1201)
==10278==    by 0x81E42A7: array_astype (methods.c:830)
==10278==    by 0xFD6135E: __Pyx_PyObject_Call (mtrand.c:44507)
==10278==    by 0xFD92BF6: __pyx_pf_6mtrand_11RandomState_4seed (mtrand.c:13996)
==10278==    by 0xFD92BF6: __pyx_pw_6mtrand_11RandomState_5seed (mtrand.c:13502)
==10278==    by 0xFD6135E: __Pyx_PyObject_Call (mtrand.c:44507)
==10278==    by 0xFD61EA3: __Pyx__PyObject_CallOneArg (mtrand.c:44546)
==10278==    by 0xFD61EA3: __Pyx_PyObject_CallOneArg (mtrand.c:44569)
==10278==    by 0xFD65A9F: __pyx_pf_6mtrand_11RandomState___init__ (mtrand.c:13316)
==10278==    by 0xFD65A9F: __pyx_pw_6mtrand_11RandomState_1__init__ (mtrand.c:13223)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_NewLikeArray
   fun:array_astype
   fun:__Pyx_PyObject_Call
   fun:__pyx_pf_6mtrand_11RandomState_4seed
   fun:__pyx_pw_6mtrand_11RandomState_5seed
   fun:__Pyx_PyObject_Call
   fun:__Pyx__PyObject_CallOneArg
   fun:__Pyx_PyObject_CallOneArg
   fun:__pyx_pf_6mtrand_11RandomState___init__
   fun:__pyx_pw_6mtrand_11RandomState_1__init__
   fun:type_call
   fun:PyObject_Call
}
==10278== 24 bytes in 6 blocks are still reachable in loss record 642 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8E7B8: PyCFuncPtrType_new (_ctypes.c:2400)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 24 bytes in 8 blocks are still reachable in loss record 643 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8EF59: PyCSimpleType_new (_ctypes.c:2121)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
}
==10278== 29 bytes in 1 blocks are still reachable in loss record 644 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x116FF244: _nc_home_terminfo (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x116FEACF: _nc_first_db (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11707413: _nc_read_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701118: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701461: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_nc_home_terminfo
   fun:_nc_first_db
   fun:_nc_read_entry
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 645 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x4F56BAC: PyInterpreterState_New (pystate.c:64)
==10278==    by 0x4F59AF6: Py_InitializeEx (pythonrun.c:196)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:PyInterpreterState_New
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 646 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4ECE34F: _Py_ReadyTypes (object.c:2083)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 647 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4ECE363: _Py_ReadyTypes (object.c:2086)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 648 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EA62D9: _PyExc_Init (exceptions.c:2059)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 649 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EA6405: _PyExc_Init (exceptions.c:2080)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 650 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EA6441: _PyExc_Init (exceptions.c:2083)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 651 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EA6455: _PyExc_Init (exceptions.c:2084)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 652 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EA647D: _PyExc_Init (exceptions.c:2086)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 653 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EA64CD: _PyExc_Init (exceptions.c:2091)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 654 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EA6531: _PyExc_Init (exceptions.c:2097)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 655 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x4F4B9A4: _PyImport_AcquireLock (import.c:298)
==10278==    by 0x4F4E7AE: PyImport_ImportModuleLevel (import.c:2311)
==10278==    by 0x4F4F0D4: PyImport_Import (import.c:2889)
==10278==    by 0x4F4F16B: PyImport_ImportModule (import.c:2151)
==10278==    by 0x4EA66B3: _PyExc_Init (exceptions.c:2120)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:_PyImport_AcquireLock
   fun:PyImport_ImportModuleLevel
   fun:PyImport_Import
   fun:PyImport_ImportModule
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 656 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F854BC: initzipimport (zipimport.c:1327)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initzipimport
   fun:init_builtin
   fun:load_module
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 657 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x4F6B5AC: PyThread_create_key (thread.c:311)
==10278==    by 0x4F560F8: _PyGILState_Init (pystate.c:527)
==10278==    by 0x4F59C6F: Py_InitializeEx (pythonrun.c:280)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:PyThread_create_key
   fun:_PyGILState_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 658 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x4F2F353: Py_MakePendingCalls (ceval.c:459)
==10278==    by 0x4F34EA5: PyEval_EvalFrameEx (ceval.c:1098)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:Py_MakePendingCalls
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 659 of 1,766
==10278==    at 0x4C2FB45: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x545565E: _dlerror_run (dlerror.c:141)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278==    by 0x4F4FA67: _PyImport_LoadDynamicModule (importdl.c:42)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 660 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBB32A: list_resize (listobject.c:62)
==10278==    by 0x4EBB32A: app1 (listobject.c:277)
==10278==    by 0x4EBB32A: listappend (listobject.c:796)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:listappend
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 661 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x4F2F38C: PyEval_InitThreads (ceval.c:253)
==10278==    by 0x7A8DCE6: init_ctypes (_ctypes.c:5582)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:PyEval_InitThreads
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 662 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x7A8EAB9: PyCSimpleType_new (_ctypes.c:1948)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 663 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x7A8F58F: StructUnionType_new (_ctypes.c:408)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:StructUnionType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 664 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x7A8FA35: PyCPointerType_new (_ctypes.c:990)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x7A9425F: POINTER (callproc.c:1851)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:PyCPointerType_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:POINTER
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 665 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0xCADE5F5: initdatetime (datetimemodule.c:4778)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:initdatetime
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 666 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC14E: setup_scalartypes (multiarraymodule.c:4317)
==10278==    by 0x81EC14E: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 667 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC192: setup_scalartypes (multiarraymodule.c:4319)
==10278==    by 0x81EC192: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 668 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC1D6: setup_scalartypes (multiarraymodule.c:4321)
==10278==    by 0x81EC1D6: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 669 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC23C: setup_scalartypes (multiarraymodule.c:4324)
==10278==    by 0x81EC23C: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 670 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC47A: setup_scalartypes (multiarraymodule.c:4413)
==10278==    by 0x81EC47A: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 671 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC4E4: setup_scalartypes (multiarraymodule.c:4415)
==10278==    by 0x81EC4E4: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 672 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC528: setup_scalartypes (multiarraymodule.c:4418)
==10278==    by 0x81EC528: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 673 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC570: setup_scalartypes (multiarraymodule.c:4419)
==10278==    by 0x81EC570: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 674 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC651: setup_scalartypes (multiarraymodule.c:4423)
==10278==    by 0x81EC651: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 675 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xD415BEC: init_stuff (cPickle.c:5968)
==10278==    by 0xD415BEC: initcPickle (cPickle.c:6043)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_stuff
   fun:initcPickle
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 676 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xD415C5F: init_stuff (cPickle.c:5983)
==10278==    by 0xD415C5F: initcPickle (cPickle.c:6043)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_stuff
   fun:initcPickle
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 677 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xD415CBE: init_stuff (cPickle.c:5993)
==10278==    by 0xD415CBE: initcPickle (cPickle.c:6043)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_stuff
   fun:initcPickle
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 678 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8167E74: PyArray_NewFromDescr_int (ctors.c:1019)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816D1B0: PyArray_FromAny (ctors.c:1766)
==10278==    by 0x816D2FB: PyArray_CheckFromAny (ctors.c:1874)
==10278==    by 0x81EDE4A: _array_fromobject (multiarraymodule.c:1753)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_FromAny
   fun:PyArray_CheckFromAny
   fun:_array_fromobject
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 679 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0xD9358D9: init_io (_iomodule.c:676)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 680 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0xD935985: init_io (_iomodule.c:683)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 681 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0xD935A0F: init_io (_iomodule.c:691)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 682 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F1FE80: init_types (Python-ast.c:677)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 683 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F209ED: init_types (Python-ast.c:817)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 684 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20ADC: init_types (Python-ast.c:828)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 685 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20EFC: init_types (Python-ast.c:890)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 686 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2135B: init_types (Python-ast.c:956)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 687 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x4F70ECB: newlockobject (threadmodule.c:167)
==10278==    by 0x4F70ECB: thread_PyThread_allocate_lock (threadmodule.c:752)
==10278==    by 0xFD65770: __Pyx_PyObject_CallMethO (mtrand.c:44527)
==10278==    by 0xFD65770: __Pyx_PyObject_CallNoArg (mtrand.c:44596)
==10278==    by 0xFD65770: __pyx_pf_6mtrand_11RandomState___init__ (mtrand.c:13286)
==10278==    by 0xFD65770: __pyx_pw_6mtrand_11RandomState_1__init__ (mtrand.c:13223)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0xFD6135E: __Pyx_PyObject_Call (mtrand.c:44507)
==10278==    by 0xFD99E9E: initmtrand (mtrand.c:43381)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:newlockobject
   fun:thread_PyThread_allocate_lock
   fun:__Pyx_PyObject_CallMethO
   fun:__Pyx_PyObject_CallNoArg
   fun:__pyx_pf_6mtrand_11RandomState___init__
   fun:__pyx_pw_6mtrand_11RandomState_1__init__
   fun:type_call
   fun:__Pyx_PyObject_Call
   fun:initmtrand
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 688 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x7A8F3AC: PyCArrayType_new (_ctypes.c:1465)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E872DB: call_function_tail (abstract.c:2579)
==10278==    by 0x4E872DB: _PyObject_CallFunction_SizeT (abstract.c:2623)
==10278==    by 0x7A8FDA9: PyCArrayType_from_ctype (_ctypes.c:4761)
==10278==    by 0x4F31385: PyEval_EvalFrameEx (ceval.c:1399)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:PyCArrayType_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:_PyObject_CallFunction_SizeT
   fun:PyCArrayType_from_ctype
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 689 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1070022A: init_socket (socketmodule.c:4623)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_socket
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 690 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F4F0E: sk_new (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1BEF99: load_builtin_compressions (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0xE1BF1D8: SSL_COMP_get_compression_methods (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0xE1C778F: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:sk_new
   fun:load_builtin_compressions
   fun:SSL_COMP_get_compression_methods
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 691 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F4F2C: sk_new (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1BEF99: load_builtin_compressions (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0xE1BF1D8: SSL_COMP_get_compression_methods (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0xE1C778F: SSL_library_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E6: init_ssl (_ssl.c:4091)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:sk_new
   fun:load_builtin_compressions
   fun:SSL_COMP_get_compression_methods
   fun:SSL_library_init
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 692 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBB32A: list_resize (listobject.c:62)
==10278==    by 0x4EBB32A: app1 (listobject.c:277)
==10278==    by 0x4EBB32A: listappend (listobject.c:796)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:listappend
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 693 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x11CA1723: initzlib (zlibmodule.c:1161)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x4F4F16B: PyImport_ImportModule (import.c:2151)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initzlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:PyImport_ImportModule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 694 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x13DF0413: __Pyx_FetchCommonType (_solve_toeplitz.c:23433)
==10278==    by 0x13DF81CF: __pyx_FusedFunction_init (_solve_toeplitz.c:24349)
==10278==    by 0x13DF81CF: init_solve_toeplitz (_solve_toeplitz.c:20697)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:__Pyx_FetchCommonType
   fun:__pyx_FusedFunction_init
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 695 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x13DF8F93: init_solve_toeplitz (_solve_toeplitz.c:20784)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 696 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x13DF9787: init_solve_toeplitz (_solve_toeplitz.c:21007)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 697 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x13DF9793: init_solve_toeplitz (_solve_toeplitz.c:21008)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 698 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x13DF979F: init_solve_toeplitz (_solve_toeplitz.c:21009)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 699 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x13DF97AB: init_solve_toeplitz (_solve_toeplitz.c:21010)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 700 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x13DF97B7: init_solve_toeplitz (_solve_toeplitz.c:21011)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 701 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x13DF97C3: init_solve_toeplitz (_solve_toeplitz.c:21012)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 702 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x13DF97CF: init_solve_toeplitz (_solve_toeplitz.c:21013)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 703 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x13DF97DB: init_solve_toeplitz (_solve_toeplitz.c:21014)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 704 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x1427FCEE: initcython_blas (cython_blas.c:26176)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 705 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1428002D: initcython_blas (cython_blas.c:26309)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x140265BB: __Pyx_ImportModule (_decomp_update.c:40839)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:__Pyx_ImportModule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 706 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x14280039: initcython_blas (cython_blas.c:26310)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x140265BB: __Pyx_ImportModule (_decomp_update.c:40839)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:__Pyx_ImportModule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 707 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x14280045: initcython_blas (cython_blas.c:26311)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x140265BB: __Pyx_ImportModule (_decomp_update.c:40839)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:__Pyx_ImportModule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 708 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x14280051: initcython_blas (cython_blas.c:26312)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x140265BB: __Pyx_ImportModule (_decomp_update.c:40839)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:__Pyx_ImportModule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 709 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1428005D: initcython_blas (cython_blas.c:26313)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x140265BB: __Pyx_ImportModule (_decomp_update.c:40839)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:__Pyx_ImportModule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 710 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x14280069: initcython_blas (cython_blas.c:26314)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x140265BB: __Pyx_ImportModule (_decomp_update.c:40839)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:__Pyx_ImportModule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 711 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x14280075: initcython_blas (cython_blas.c:26315)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x140265BB: __Pyx_ImportModule (_decomp_update.c:40839)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:__Pyx_ImportModule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 712 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x14280081: initcython_blas (cython_blas.c:26316)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x140265BB: __Pyx_ImportModule (_decomp_update.c:40839)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:__Pyx_ImportModule
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 713 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x15CB7243: init_csparsetools (_csparsetools.c:29889)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 714 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x15CC19BA: init_csparsetools (_csparsetools.c:34637)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 715 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x15CC19C6: init_csparsetools (_csparsetools.c:34638)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 716 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x15CC19D2: init_csparsetools (_csparsetools.c:34639)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 717 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x15CC19DE: init_csparsetools (_csparsetools.c:34640)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 718 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x15CC19EA: init_csparsetools (_csparsetools.c:34641)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 719 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x15CC19F6: init_csparsetools (_csparsetools.c:34642)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 720 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x15CC1A02: init_csparsetools (_csparsetools.c:34643)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 721 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x15CC1A0E: init_csparsetools (_csparsetools.c:34644)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 722 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x165B9DEA: init_min_spanning_tree (_min_spanning_tree.c:18729)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 723 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x165BA571: init_min_spanning_tree (_min_spanning_tree.c:18972)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 724 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x165BA57D: init_min_spanning_tree (_min_spanning_tree.c:18973)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 725 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x165BA589: init_min_spanning_tree (_min_spanning_tree.c:18974)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 726 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x165BA595: init_min_spanning_tree (_min_spanning_tree.c:18975)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 727 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x165BA5A1: init_min_spanning_tree (_min_spanning_tree.c:18976)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 728 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x165BA5AD: init_min_spanning_tree (_min_spanning_tree.c:18977)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 729 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x165BA5B9: init_min_spanning_tree (_min_spanning_tree.c:18978)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 730 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x165BA5C5: init_min_spanning_tree (_min_spanning_tree.c:18979)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 731 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x16858022: init_reordering (_reordering.c:26280)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 732 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x16858D3C: init_reordering (_reordering.c:26621)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 733 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x16858D48: init_reordering (_reordering.c:26622)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 734 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x16858D54: init_reordering (_reordering.c:26623)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 735 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x16858D60: init_reordering (_reordering.c:26624)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 736 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x16858D6C: init_reordering (_reordering.c:26625)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 737 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x16858D78: init_reordering (_reordering.c:26626)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 738 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x16858D84: init_reordering (_reordering.c:26627)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 739 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x16858D90: init_reordering (_reordering.c:26628)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 740 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x1897ABE2: init_group_columns (_group_columns.c:18958)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 741 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1897B061: init_group_columns (_group_columns.c:19129)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 742 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1897B06D: init_group_columns (_group_columns.c:19130)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 743 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1897B079: init_group_columns (_group_columns.c:19131)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 744 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1897B085: init_group_columns (_group_columns.c:19132)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 745 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1897B091: init_group_columns (_group_columns.c:19133)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 746 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1897B09D: init_group_columns (_group_columns.c:19134)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 747 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1897B0A9: init_group_columns (_group_columns.c:19135)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 748 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1897B0B5: init_group_columns (_group_columns.c:19136)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 749 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x18BA2541: initgivens_elimination (givens_elimination.c:15189)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 750 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x18BA28E0: initgivens_elimination (givens_elimination.c:15340)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 751 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x18BA28EC: initgivens_elimination (givens_elimination.c:15341)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 752 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x18BA28F8: initgivens_elimination (givens_elimination.c:15342)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 753 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x18BA2904: initgivens_elimination (givens_elimination.c:15343)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 754 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x18BA2910: initgivens_elimination (givens_elimination.c:15344)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 755 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x18BA291C: initgivens_elimination (givens_elimination.c:15345)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 756 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x18BA2928: initgivens_elimination (givens_elimination.c:15346)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 757 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x18BA2934: initgivens_elimination (givens_elimination.c:15347)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 758 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x1971ABE5: init_bspl (_bspl.c:22233)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 759 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1971B433: init_bspl (_bspl.c:22469)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 760 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1971B43F: init_bspl (_bspl.c:22470)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 761 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1971B44B: init_bspl (_bspl.c:22471)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 762 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1971B457: init_bspl (_bspl.c:22472)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 763 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1971B463: init_bspl (_bspl.c:22473)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 764 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1971B46F: init_bspl (_bspl.c:22474)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 765 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1971B47B: init_bspl (_bspl.c:22475)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 766 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1971B487: init_bspl (_bspl.c:22476)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 767 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x199AC9C6: init_ppoly (_ppoly.c:30949)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 768 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x199ADB6F: init_ppoly (_ppoly.c:31262)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 769 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x199ADB7B: init_ppoly (_ppoly.c:31263)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 770 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x199ADB87: init_ppoly (_ppoly.c:31264)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 771 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x199ADB93: init_ppoly (_ppoly.c:31265)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 772 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x199ADB9F: init_ppoly (_ppoly.c:31266)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 773 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x199ADBAB: init_ppoly (_ppoly.c:31267)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 774 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x199ADBB7: init_ppoly (_ppoly.c:31268)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 775 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x199ADBC3: init_ppoly (_ppoly.c:31269)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 776 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x19BFC0DA: initinterpnd (interpnd.c:25992)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 777 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x1A2EAF15: initqhull (qhull.c:45670)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 778 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2EC00E: initqhull (qhull.c:46193)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 779 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A2ED331: initqhull (qhull.c:46787)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 780 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A2ED33D: initqhull (qhull.c:46788)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 781 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A2ED349: initqhull (qhull.c:46789)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 782 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A2ED355: initqhull (qhull.c:46790)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 783 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A2ED361: initqhull (qhull.c:46791)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 784 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A2ED36D: initqhull (qhull.c:46792)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 785 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A2ED379: initqhull (qhull.c:46793)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 786 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A2ED385: initqhull (qhull.c:46794)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 787 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x1A606415: init_voronoi (_voronoi.c:18597)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 788 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A606852: init_voronoi (_voronoi.c:18769)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 789 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A60685E: init_voronoi (_voronoi.c:18770)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 790 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A60686A: init_voronoi (_voronoi.c:18771)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 791 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A606876: init_voronoi (_voronoi.c:18772)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 792 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A606882: init_voronoi (_voronoi.c:18773)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 793 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A60688E: init_voronoi (_voronoi.c:18774)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 794 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A60689A: init_voronoi (_voronoi.c:18775)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 795 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1A6068A6: init_voronoi (_voronoi.c:18776)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 796 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x1AA45382: init_hausdorff (_hausdorff.c:18508)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 797 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AA457BF: init_hausdorff (_hausdorff.c:18680)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 798 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AA457CB: init_hausdorff (_hausdorff.c:18681)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 799 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AA457D7: init_hausdorff (_hausdorff.c:18682)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 800 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AA457E3: init_hausdorff (_hausdorff.c:18683)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 801 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AA457EF: init_hausdorff (_hausdorff.c:18684)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 802 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AA457FB: init_hausdorff (_hausdorff.c:18685)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 803 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AA45807: init_hausdorff (_hausdorff.c:18686)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 804 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AA45813: init_hausdorff (_hausdorff.c:18687)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 805 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x19BDEDB2: __Pyx_Py3ClassCreate.clone.0 (interpnd.c:29741)
==10278==    by 0x19BFCDED: initinterpnd (interpnd.c:26240)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.0
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 806 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x19BFD912: initinterpnd (interpnd.c:26488)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 807 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x19BFD91E: initinterpnd (interpnd.c:26489)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 808 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x19BFD92A: initinterpnd (interpnd.c:26490)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 809 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x19BFD936: initinterpnd (interpnd.c:26491)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 810 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x19BFD942: initinterpnd (interpnd.c:26492)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 811 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x19BFD94E: initinterpnd (interpnd.c:26493)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 812 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x19BFD95A: initinterpnd (interpnd.c:26494)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 813 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x19BFD966: initinterpnd (interpnd.c:26495)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 814 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x1AD07C53: init_stats (_stats.c:32892)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 815 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AD084E1: init_stats (_stats.c:33128)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 816 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AD084ED: init_stats (_stats.c:33129)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 817 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AD084F9: init_stats (_stats.c:33130)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 818 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AD08505: init_stats (_stats.c:33131)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 819 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AD08511: init_stats (_stats.c:33132)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 820 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AD0851D: init_stats (_stats.c:33133)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 821 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AD08529: init_stats (_stats.c:33134)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 822 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1AD08535: init_stats (_stats.c:33135)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 823 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x1BF82E62: init_max_len_seq_inner (_max_len_seq_inner.c:17798)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 824 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1BF83239: init_max_len_seq_inner (_max_len_seq_inner.c:17955)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 825 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1BF83245: init_max_len_seq_inner (_max_len_seq_inner.c:17956)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 826 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1BF83251: init_max_len_seq_inner (_max_len_seq_inner.c:17957)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 827 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1BF8325D: init_max_len_seq_inner (_max_len_seq_inner.c:17958)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 828 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1BF83269: init_max_len_seq_inner (_max_len_seq_inner.c:17959)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 829 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1BF83275: init_max_len_seq_inner (_max_len_seq_inner.c:17960)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 830 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1BF83281: init_max_len_seq_inner (_max_len_seq_inner.c:17961)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 831 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1BF8328D: init_max_len_seq_inner (_max_len_seq_inner.c:17962)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 832 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x1C1AE520: init_upfirdn_apply (_upfirdn_apply.c:25057)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 833 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1C1AEBF8: init_upfirdn_apply (_upfirdn_apply.c:25251)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 834 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1C1AEC04: init_upfirdn_apply (_upfirdn_apply.c:25252)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 835 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1C1AEC10: init_upfirdn_apply (_upfirdn_apply.c:25253)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 836 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1C1AEC1C: init_upfirdn_apply (_upfirdn_apply.c:25254)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 837 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1C1AEC28: init_upfirdn_apply (_upfirdn_apply.c:25255)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 838 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1C1AEC34: init_upfirdn_apply (_upfirdn_apply.c:25256)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 839 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1C1AEC40: init_upfirdn_apply (_upfirdn_apply.c:25257)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 840 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1C1AEC4C: init_upfirdn_apply (_upfirdn_apply.c:25258)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 841 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x1CF92EE7: init_ni_label (_ni_label.c:28290)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 842 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1CF948CB: init_ni_label (_ni_label.c:28669)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 843 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1CF948D7: init_ni_label (_ni_label.c:28670)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 844 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1CF948E3: init_ni_label (_ni_label.c:28671)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 845 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1CF948EF: init_ni_label (_ni_label.c:28672)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 846 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1CF948FB: init_ni_label (_ni_label.c:28673)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 847 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1CF94907: init_ni_label (_ni_label.c:28674)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 848 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1CF94913: init_ni_label (_ni_label.c:28675)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 32 bytes in 1 blocks are still reachable in loss record 849 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1CF9491F: init_ni_label (_ni_label.c:28676)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 39 bytes in 4 blocks are still reachable in loss record 850 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81692CD: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x81692CD: PyArray_Empty (ctors.c:2903)
==10278==    by 0x81E8BC2: array_empty (multiarraymodule.c:1853)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_Empty
   fun:array_empty
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 40 bytes in 1 blocks are still reachable in loss record 851 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x81365EA: initialize_builtin_datetime_metadata (arraytypes.c.src:4494)
==10278==    by 0x81396D9: set_typeinfo (arraytypes.c.src:4592)
==10278==    by 0x81ECCEB: initmultiarray (multiarraymodule.c:4694)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:initialize_builtin_datetime_metadata
   fun:set_typeinfo
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 40 bytes in 1 blocks are still reachable in loss record 852 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8136601: initialize_builtin_datetime_metadata (arraytypes.c.src:4498)
==10278==    by 0x81396D9: set_typeinfo (arraytypes.c.src:4592)
==10278==    by 0x81ECCEB: initmultiarray (multiarraymodule.c:4694)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:initialize_builtin_datetime_metadata
   fun:set_typeinfo
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 40 bytes in 1 blocks are still reachable in loss record 853 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBC530: list_resize (listobject.c:62)
==10278==    by 0x4EBC530: listextend (listobject.c:827)
==10278==    by 0x4EBC71F: list_init (listobject.c:2462)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:listextend
   fun:list_init
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==10278== 46 bytes in 1 blocks are still reachable in loss record 854 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x116FEF22: _nc_doalloc (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11706EB0: _nc_read_termtype (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x117072BE: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11707480: _nc_read_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701118: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701461: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_nc_doalloc
   fun:_nc_read_termtype
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_read_entry
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 48 bytes in 1 blocks are still reachable in loss record 855 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB366: EVP_MD_CTX_create (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B8EC: init_hashlib (_hashopenssl.c:932)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_MD_CTX_create
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 48 bytes in 1 blocks are still reachable in loss record 856 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB366: EVP_MD_CTX_create (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B894: init_hashlib (_hashopenssl.c:933)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_MD_CTX_create
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 48 bytes in 1 blocks are still reachable in loss record 857 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB366: EVP_MD_CTX_create (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B83C: init_hashlib (_hashopenssl.c:935)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_MD_CTX_create
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 48 bytes in 1 blocks are still reachable in loss record 858 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB366: EVP_MD_CTX_create (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B7E4: init_hashlib (_hashopenssl.c:936)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_MD_CTX_create
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 48 bytes in 1 blocks are still reachable in loss record 859 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB366: EVP_MD_CTX_create (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B78C: init_hashlib (_hashopenssl.c:937)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_MD_CTX_create
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 48 bytes in 1 blocks are still reachable in loss record 860 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB366: EVP_MD_CTX_create (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B738: init_hashlib (_hashopenssl.c:938)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_MD_CTX_create
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 48 bytes in 1 blocks are still reachable in loss record 861 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4E9B4AE: init_name_op (classobject.c:1976)
==10278==    by 0x4E9B4AE: half_richcompare (classobject.c:1997)
==10278==    by 0x4E9B624: instance_richcompare (classobject.c:2038)
==10278==    by 0x4ECEE69: try_rich_compare (object.c:622)
==10278==    by 0x4ED0560: do_richcmp (object.c:930)
==10278==    by 0x4ED0560: PyObject_RichCompare (object.c:982)
==10278==    by 0x4ED089C: PyObject_RichCompareBool (object.c:1004)
==10278==    by 0x4EE4EB3: tuplerichcompare (tupleobject.c:598)
==10278==    by 0x4ED0606: PyObject_RichCompare (object.c:961)
==10278==    by 0x4ED089C: PyObject_RichCompareBool (object.c:1004)
==10278==    by 0x4EE4EB3: tuplerichcompare (tupleobject.c:598)
==10278==    by 0x4ED0606: PyObject_RichCompare (object.c:961)
==10278==    by 0x4F33291: cmp_outcome (ceval.c:4858)
==10278==    by 0x4F33291: PyEval_EvalFrameEx (ceval.c:2576)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:init_name_op
   fun:half_richcompare
   fun:instance_richcompare
   fun:try_rich_compare
   fun:do_richcmp
   fun:PyObject_RichCompare
   fun:PyObject_RichCompareBool
   fun:tuplerichcompare
   fun:PyObject_RichCompare
   fun:PyObject_RichCompareBool
   fun:tuplerichcompare
   fun:PyObject_RichCompare
   fun:cmp_outcome
   fun:PyEval_EvalFrameEx
}
==10278== 48 bytes in 1 blocks are still reachable in loss record 862 of 1,766
==10278==    at 0x4C2FB45: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x116FEBD3: _nc_first_db (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11707413: _nc_read_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701118: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701461: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:_nc_first_db
   fun:_nc_read_entry
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 48 bytes in 2 blocks are still reachable in loss record 863 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7F9: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 48 bytes in 2 blocks are still reachable in loss record 864 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA819: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 50 bytes in 10 blocks are still reachable in loss record 865 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x816A8C7: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816A8C7: PyArray_NewLikeArray (ctors.c:1201)
==10278==    by 0x816042C: PyArray_NewCopy (convert.c:583)
==10278==    by 0x81E3D5A: array_copy (methods.c:1068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_NewLikeArray
   fun:PyArray_NewCopy
   fun:array_copy
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 54 bytes in 18 blocks are still reachable in loss record 866 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7A8E733: _ctypes_alloc_format_string (_ctypes.c:314)
==10278==    by 0x7A8EBC6: PyCSimpleType_new (_ctypes.c:2004)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_ctypes_alloc_format_string
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
}
==10278== 56 bytes in 1 blocks are still reachable in loss record 867 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4EB9AB9: list_concat (listobject.c:522)
==10278==    by 0x4F30F61: PyEval_EvalFrameEx (ceval.c:1484)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:list_concat
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 56 bytes in 3 blocks are still reachable in loss record 868 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4EB99E9: list_repeat (listobject.c:559)
==10278==    by 0x4F31385: PyEval_EvalFrameEx (ceval.c:1399)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:list_repeat
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==10278== 64 bytes in 1 blocks are still reachable in loss record 869 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBB32A: list_resize (listobject.c:62)
==10278==    by 0x4EBB32A: app1 (listobject.c:277)
==10278==    by 0x4EBB32A: listappend (listobject.c:796)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:listappend
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 64 bytes in 1 blocks are still reachable in loss record 870 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x7A8DF97: init_ctypes (_ctypes.c:5676)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 64 bytes in 1 blocks are still reachable in loss record 871 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC36A: setup_scalartypes (multiarraymodule.c:4391)
==10278==    by 0x81EC36A: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 64 bytes in 1 blocks are still reachable in loss record 872 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC458: setup_scalartypes (multiarraymodule.c:4411)
==10278==    by 0x81EC458: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 64 bytes in 1 blocks are still reachable in loss record 873 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC695: setup_scalartypes (multiarraymodule.c:4427)
==10278==    by 0x81EC695: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 64 bytes in 1 blocks are still reachable in loss record 874 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0xD935B07: init_io (_iomodule.c:707)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 64 bytes in 1 blocks are still reachable in loss record 875 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2092C: init_types (Python-ast.c:806)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 64 bytes in 1 blocks are still reachable in loss record 876 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F44FDF: PyErr_NewExceptionWithDoc (errors.c:653)
==10278==    by 0x1091A3DB: init_ssl (_ssl.c:4125)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:PyErr_NewExceptionWithDoc
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 64 bytes in 1 blocks are still reachable in loss record 877 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4EB9AB9: list_concat (listobject.c:522)
==10278==    by 0x4F30F61: PyEval_EvalFrameEx (ceval.c:1484)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:list_concat
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 64 bytes in 2 blocks are still reachable in loss record 878 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x81EC5F0: setup_scalartypes (multiarraymodule.c:4422)
==10278==    by 0x81EC5F0: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 64 bytes in 2 blocks are still reachable in loss record 879 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F33502: PyEval_EvalFrameEx (ceval.c:2466)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 64 bytes in 8 blocks are still reachable in loss record 880 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F33502: PyEval_EvalFrameEx (ceval.c:2466)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F2BDD2: builtin_map (bltinmodule.c:1060)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:builtin_map
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 72 bytes in 1 blocks are still reachable in loss record 881 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBC530: list_resize (listobject.c:62)
==10278==    by 0x4EBC530: listextend (listobject.c:827)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:listextend
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 72 bytes in 2 blocks are still reachable in loss record 882 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F33502: PyEval_EvalFrameEx (ceval.c:2466)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 72 bytes in 3 blocks are still reachable in loss record 883 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA81E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 72 bytes in 3 blocks are still reachable in loss record 884 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4E319D: ERR_load_ECDH_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA82E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_ECDH_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 72 bytes in 3 blocks are still reachable in loss record 885 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F73BD: ERR_load_RAND_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA849: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_RAND_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 78 bytes in 1 blocks are still reachable in loss record 886 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x116FEF22: _nc_doalloc (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11706ECD: _nc_read_termtype (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x117072BE: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11707480: _nc_read_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701118: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701461: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_nc_doalloc
   fun:_nc_read_termtype
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_read_entry
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 80 bytes in 1 blocks are still reachable in loss record 887 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBB1C8: list_resize (listobject.c:62)
==10278==    by 0x4EBB1C8: ins1 (listobject.c:237)
==10278==    by 0x4EBB1C8: listinsert (listobject.c:788)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:ins1
   fun:listinsert
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 88 bytes in 6 blocks are still reachable in loss record 888 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F33502: PyEval_EvalFrameEx (ceval.c:2466)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 96 bytes in 1 blocks are still reachable in loss record 889 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4EDAFF7: stringlib_split_char (split.h:111)
==10278==    by 0x4EDAFF7: stringlib_split (split.h:161)
==10278==    by 0x4EDAFF7: string_split (stringobject.c:1477)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:stringlib_split_char
   fun:stringlib_split
   fun:string_split
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 96 bytes in 4 blocks are still reachable in loss record 890 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE559BDD: ERR_load_COMP_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA81E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_COMP_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 96 bytes in 4 blocks are still reachable in loss record 891 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA82E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 96 bytes in 6 blocks are still reachable in loss record 892 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8167E74: PyArray_NewFromDescr_int (ctors.c:1019)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816D1B0: PyArray_FromAny (ctors.c:1766)
==10278==    by 0x816D2FB: PyArray_CheckFromAny (ctors.c:1874)
==10278==    by 0x81EDE4A: _array_fromobject (multiarraymodule.c:1753)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_FromAny
   fun:PyArray_CheckFromAny
   fun:_array_fromobject
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== 98 bytes in 1 blocks are still reachable in loss record 893 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x116FEB33: _nc_first_db (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11707413: _nc_read_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701118: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701461: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_nc_first_db
   fun:_nc_read_entry
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 100 bytes in 1 blocks are still reachable in loss record 894 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB7AE: EVP_DigestInit_ex (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B90E: init_hashlib (_hashopenssl.c:932)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_DigestInit_ex
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 104 bytes in 1 blocks are still reachable in loss record 895 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB7AE: EVP_DigestInit_ex (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B8B6: init_hashlib (_hashopenssl.c:933)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_DigestInit_ex
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 112 bytes in 7 blocks are still reachable in loss record 896 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x40083B2: decompose_rpath (dl-load.c:608)
==10278==    by 0x4008F9B: cache_rpath (dl-load.c:652)
==10278==    by 0x4008F9B: _dl_map_object (dl-load.c:2281)
==10278==    by 0x400DDEF: openaux (dl-deps.c:63)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x400E40A: _dl_map_object_deps (dl-deps.c:254)
==10278==    by 0x401582E: dl_open_worker (dl-open.c:280)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:decompose_rpath
   fun:cache_rpath
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
}
==10278== 120 bytes in 1 blocks are still reachable in loss record 897 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE36C6: PyStructSequence_InitType (structseq.c:504)
==10278==    by 0x4EBD152: _PyLong_Init (longobject.c:4405)
==10278==    by 0x4F59B44: Py_InitializeEx (pythonrun.c:213)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyStructSequence_InitType
   fun:_PyLong_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 120 bytes in 1 blocks are still reachable in loss record 898 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB7AE: EVP_DigestInit_ex (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B85E: init_hashlib (_hashopenssl.c:935)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_DigestInit_ex
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 120 bytes in 1 blocks are still reachable in loss record 899 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB7AE: EVP_DigestInit_ex (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B806: init_hashlib (_hashopenssl.c:936)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_DigestInit_ex
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 120 bytes in 5 blocks are still reachable in loss record 900 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA849: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 128 bytes in 1 blocks are still reachable in loss record 901 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EA6469: _PyExc_Init (exceptions.c:2085)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 128 bytes in 1 blocks are still reachable in loss record 902 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EA6671: _PyExc_Init (exceptions.c:2113)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 128 bytes in 1 blocks are still reachable in loss record 903 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20DB5: init_types (Python-ast.c:871)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 128 bytes in 1 blocks are still reachable in loss record 904 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F21008: init_types (Python-ast.c:906)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 128 bytes in 1 blocks are still reachable in loss record 905 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2125B: init_types (Python-ast.c:941)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 128 bytes in 1 blocks are still reachable in loss record 906 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x7A8E7DF: PyCFuncPtrType_new (_ctypes.c:2405)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B1803: init_ccallback_c (_ccallback_c.c:3808)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
}
==10278== 128 bytes in 1 blocks are still reachable in loss record 907 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117EF6: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117EF6: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117EF6: npy_alloc_cache_zero (alloc.c:104)
==10278==    by 0x816811F: PyArray_NewFromDescr_int (ctors.c:1058)
==10278==    by 0x8168328: PyArray_Zeros (ctors.c:2861)
==10278==    by 0x81E8C88: array_zeros (multiarraymodule.c:2007)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache_zero
   fun:PyArray_NewFromDescr_int
   fun:PyArray_Zeros
   fun:array_zeros
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 128 bytes in 4 blocks are still reachable in loss record 908 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EF4A4F: type_new (typeobject.c:2159)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_new
}
==10278== 128 bytes in 4 blocks are still reachable in loss record 909 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBC530: list_resize (listobject.c:62)
==10278==    by 0x4EBC530: listextend (listobject.c:827)
==10278==    by 0x4EBC71F: list_init (listobject.c:2462)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:listextend
   fun:list_init
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 144 bytes in 6 blocks are still reachable in loss record 910 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4EB99E9: list_repeat (listobject.c:559)
==10278==    by 0x4F31385: PyEval_EvalFrameEx (ceval.c:1399)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:list_repeat
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 144 bytes in 6 blocks are still reachable in loss record 911 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4E9C2D: ERR_load_BUF_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7F4: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_BUF_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 144 bytes in 6 blocks are still reachable in loss record 912 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4DEA5D: ERR_load_ECDSA_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA829: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_ECDSA_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 152 bytes in 4 blocks are still reachable in loss record 913 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x401D499: strdup (strdup.c:42)
==10278==    by 0x4018C0E: _dl_load_cache_lookup (dl-cache.c:311)
==10278==    by 0x4008FE0: _dl_map_object (dl-load.c:2342)
==10278==    by 0x400DDEF: openaux (dl-deps.c:63)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x400E40A: _dl_map_object_deps (dl-deps.c:254)
==10278==    by 0x401582E: dl_open_worker (dl-open.c:280)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:strdup
   fun:_dl_load_cache_lookup
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
}
==10278== 160 bytes in 5 blocks are still reachable in loss record 914 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 164 bytes in 5 blocks are still reachable in loss record 915 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816D1B0: PyArray_FromAny (ctors.c:1766)
==10278==    by 0x816D2FB: PyArray_CheckFromAny (ctors.c:1874)
==10278==    by 0x81EDE4A: _array_fromobject (multiarraymodule.c:1753)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_FromAny
   fun:PyArray_CheckFromAny
   fun:_array_fromobject
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 168 bytes in 7 blocks are still reachable in loss record 916 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4555CD: ERR_load_OBJ_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7F9: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_OBJ_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 168 bytes in 7 blocks are still reachable in loss record 917 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA864: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 169 bytes in 1 blocks are still reachable in loss record 918 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4010630: _dl_signal_error (dl-error.c:90)
==10278==    by 0x40107F2: _dl_signal_cerror (dl-error.c:155)
==10278==    by 0x400AE49: _dl_lookup_symbol_x (dl-lookup.c:874)
==10278==    by 0x5CAA5B0: do_sym (dl-sym.c:161)
==10278==    by 0x5455013: dlsym_doit (dlsym.c:50)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5455067: dlsym (dlsym.c:70)
==10278==    by 0xAADDC11: mkl_serv_load_inspector (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libmkl_core.so)
==10278==    by 0xAADDC5C: mkl_serv_lock (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libmkl_core.so)
==10278==    by 0x90B50CC: mkl_serv_thr_cleanup (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libmkl_intel_thread.so)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_dl_signal_error
   fun:_dl_signal_cerror
   fun:_dl_lookup_symbol_x
   fun:do_sym
   fun:dlsym_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlsym
   fun:mkl_serv_load_inspector
   fun:mkl_serv_lock
   fun:mkl_serv_thr_cleanup
}
==10278== 176 bytes in 1 blocks are still reachable in loss record 919 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F555F: lh_new (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453D0C: OBJ_NAME_init (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DF4: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501B67: EVP_add_digest (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5065D0: OpenSSL_add_all_digests (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5E9: init_hashlib (_hashopenssl.c:902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_new
   fun:OBJ_NAME_init
   fun:OBJ_NAME_add
   fun:EVP_add_digest
   fun:OpenSSL_add_all_digests
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 176 bytes in 1 blocks are still reachable in loss record 920 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F555F: lh_new (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8097: int_err_get (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F93FA: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8280: ERR_load_ERR_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7D8: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_new
   fun:int_err_get
   fun:int_err_set_item
   fun:ERR_load_ERR_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 921 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFC0B: InitOperators (__umath_generated.c:2137)
==10278==    by 0xCCFFC0B: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 922 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFC96: InitOperators (__umath_generated.c:2143)
==10278==    by 0xCCFFC96: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 923 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFD21: InitOperators (__umath_generated.c:2149)
==10278==    by 0xCCFFD21: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 924 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFEA4: InitOperators (__umath_generated.c:2165)
==10278==    by 0xCCFFEA4: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 925 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFF20: InitOperators (__umath_generated.c:2170)
==10278==    by 0xCCFFF20: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 926 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCCFFF9C: InitOperators (__umath_generated.c:2175)
==10278==    by 0xCCFFF9C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 927 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00094: InitOperators (__umath_generated.c:2185)
==10278==    by 0xCD00094: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 928 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00110: InitOperators (__umath_generated.c:2190)
==10278==    by 0xCD00110: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 929 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0018C: InitOperators (__umath_generated.c:2195)
==10278==    by 0xCD0018C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 930 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00208: InitOperators (__umath_generated.c:2200)
==10278==    by 0xCD00208: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 931 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00284: InitOperators (__umath_generated.c:2205)
==10278==    by 0xCD00284: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 932 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00300: InitOperators (__umath_generated.c:2210)
==10278==    by 0xCD00300: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 933 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0037C: InitOperators (__umath_generated.c:2215)
==10278==    by 0xCD0037C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 934 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0056C: InitOperators (__umath_generated.c:2235)
==10278==    by 0xCD0056C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 935 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00664: InitOperators (__umath_generated.c:2245)
==10278==    by 0xCD00664: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 936 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD006EF: InitOperators (__umath_generated.c:2251)
==10278==    by 0xCD006EF: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 937 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0076B: InitOperators (__umath_generated.c:2256)
==10278==    by 0xCD0076B: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 938 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD008EE: InitOperators (__umath_generated.c:2272)
==10278==    by 0xCD008EE: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 939 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00A62: InitOperators (__umath_generated.c:2287)
==10278==    by 0xCD00A62: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 940 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00ADE: InitOperators (__umath_generated.c:2292)
==10278==    by 0xCD00ADE: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 941 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00D77: InitOperators (__umath_generated.c:2320)
==10278==    by 0xCD00D77: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 942 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00E02: InitOperators (__umath_generated.c:2326)
==10278==    by 0xCD00E02: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 943 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD00F85: InitOperators (__umath_generated.c:2342)
==10278==    by 0xCD00F85: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 944 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0127C: InitOperators (__umath_generated.c:2373)
==10278==    by 0xCD0127C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 945 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD012F8: InitOperators (__umath_generated.c:2378)
==10278==    by 0xCD012F8: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 946 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01383: InitOperators (__umath_generated.c:2384)
==10278==    by 0xCD01383: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 947 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01506: InitOperators (__umath_generated.c:2400)
==10278==    by 0xCD01506: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 948 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD016F6: InitOperators (__umath_generated.c:2420)
==10278==    by 0xCD016F6: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 949 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD017FD: InitOperators (__umath_generated.c:2431)
==10278==    by 0xCD017FD: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 950 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01913: InitOperators (__umath_generated.c:2443)
==10278==    by 0xCD01913: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 951 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0199E: InitOperators (__umath_generated.c:2449)
==10278==    by 0xCD0199E: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 952 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01AA5: InitOperators (__umath_generated.c:2460)
==10278==    by 0xCD01AA5: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 953 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01B30: InitOperators (__umath_generated.c:2466)
==10278==    by 0xCD01B30: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 954 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01C37: InitOperators (__umath_generated.c:2477)
==10278==    by 0xCD01C37: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 955 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01CC2: InitOperators (__umath_generated.c:2483)
==10278==    by 0xCD01CC2: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 956 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01D4D: InitOperators (__umath_generated.c:2489)
==10278==    by 0xCD01D4D: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 957 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01DC9: InitOperators (__umath_generated.c:2494)
==10278==    by 0xCD01DC9: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 958 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01EC1: InitOperators (__umath_generated.c:2504)
==10278==    by 0xCD01EC1: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 959 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01F3D: InitOperators (__umath_generated.c:2509)
==10278==    by 0xCD01F3D: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 960 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD01FB9: InitOperators (__umath_generated.c:2514)
==10278==    by 0xCD01FB9: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 961 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD02035: InitOperators (__umath_generated.c:2519)
==10278==    by 0xCD02035: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 962 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD020B1: InitOperators (__umath_generated.c:2524)
==10278==    by 0xCD020B1: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 963 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD021B8: InitOperators (__umath_generated.c:2535)
==10278==    by 0xCD021B8: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 964 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD02234: InitOperators (__umath_generated.c:2540)
==10278==    by 0xCD02234: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 965 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0232C: InitOperators (__umath_generated.c:2550)
==10278==    by 0xCD0232C: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 966 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD023A8: InitOperators (__umath_generated.c:2555)
==10278==    by 0xCD023A8: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 967 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD02424: InitOperators (__umath_generated.c:2560)
==10278==    by 0xCD02424: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 968 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD024AF: InitOperators (__umath_generated.c:2566)
==10278==    by 0xCD024AF: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 969 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD0252B: InitOperators (__umath_generated.c:2571)
==10278==    by 0xCD0252B: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 970 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD025A7: InitOperators (__umath_generated.c:2576)
==10278==    by 0xCD025A7: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 1 blocks are still reachable in loss record 971 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndDataAndSignature (ufunc_object.c:4663)
==10278==    by 0xCD54EDC: PyUFunc_FromFuncAndData (ufunc_object.c:4641)
==10278==    by 0xCD02632: InitOperators (__umath_generated.c:2582)
==10278==    by 0xCD02632: initumath (umathmodule.c:367)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyUFunc_FromFuncAndDataAndSignature
   fun:PyUFunc_FromFuncAndData
   fun:InitOperators
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 192 bytes in 3 blocks are still reachable in loss record 972 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x401603E: dl_open_worker (dl-open.c:485)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278==    by 0x4F4FA67: _PyImport_LoadDynamicModule (importdl.c:42)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 192 bytes in 8 blocks are still reachable in loss record 973 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA829: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 192 bytes in 12 blocks are still reachable in loss record 974 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8167E74: PyArray_NewFromDescr_int (ctors.c:1019)
==10278==    by 0x816A8C7: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816A8C7: PyArray_NewLikeArray (ctors.c:1201)
==10278==    by 0x816042C: PyArray_NewCopy (convert.c:583)
==10278==    by 0x81EE1A4: _array_fromobject (multiarraymodule.c:1641)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_NewLikeArray
   fun:PyArray_NewCopy
   fun:_array_fromobject
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 192 bytes in 12 blocks are still reachable in loss record 975 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x816A8C7: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816A8C7: PyArray_NewLikeArray (ctors.c:1201)
==10278==    by 0x816042C: PyArray_NewCopy (convert.c:583)
==10278==    by 0x81EE1A4: _array_fromobject (multiarraymodule.c:1641)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_NewLikeArray
   fun:PyArray_NewCopy
   fun:_array_fromobject
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 200 bytes in 1 blocks are still reachable in loss record 976 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE36C6: PyStructSequence_InitType (structseq.c:504)
==10278==    by 0xD6E3EDF: initgrp (grpmodule.c:201)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyStructSequence_InitType
   fun:initgrp
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 200 bytes in 1 blocks are still reachable in loss record 977 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2026F: init_types (Python-ast.c:724)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 200 bytes in 1 blocks are still reachable in loss record 978 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F206D3: init_types (Python-ast.c:775)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 208 bytes in 1 blocks are still reachable in loss record 979 of 1,766
==10278==    at 0x4C2FB45: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x1170144A: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 216 bytes in 5 blocks are still reachable in loss record 980 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F33502: PyEval_EvalFrameEx (ceval.c:2466)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 224 bytes in 1 blocks are still reachable in loss record 981 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB7AE: EVP_DigestInit_ex (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B7AE: init_hashlib (_hashopenssl.c:937)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_DigestInit_ex
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 224 bytes in 1 blocks are still reachable in loss record 982 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FB7AE: EVP_DigestInit_ex (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B75A: init_hashlib (_hashopenssl.c:938)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:EVP_DigestInit_ex
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 240 bytes in 1 blocks are still reachable in loss record 983 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE36C6: PyStructSequence_InitType (structseq.c:504)
==10278==    by 0x4F60C57: _PySys_Init (sysmodule.c:1494)
==10278==    by 0x4F59BBC: Py_InitializeEx (pythonrun.c:241)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyStructSequence_InitType
   fun:_PySys_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 240 bytes in 10 blocks are still reachable in loss record 984 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE452E0D: ERR_load_CRYPTO_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA819: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_CRYPTO_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 264 bytes in 11 blocks are still reachable in loss record 985 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F82E9: ERR_load_ERR_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7D8: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_ERR_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 280 bytes in 1 blocks are still reachable in loss record 986 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x7A8EAB9: PyCSimpleType_new (_ctypes.c:1948)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 288 bytes in 9 blocks are still reachable in loss record 987 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x4F70ECB: newlockobject (threadmodule.c:167)
==10278==    by 0x4F70ECB: thread_PyThread_allocate_lock (threadmodule.c:752)
==10278==    by 0x4F36F99: call_function (ceval.c:4336)
==10278==    by 0x4F36F99: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:newlockobject
   fun:thread_PyThread_allocate_lock
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== 288 bytes in 12 blocks are still reachable in loss record 988 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE55D98D: ERR_load_UI_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA864: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_UI_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 320 bytes in 1 blocks are still reachable in loss record 989 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4014DEC: add_to_global (dl-open.c:132)
==10278==    by 0x4015DE3: dl_open_worker (dl-open.c:580)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278==    by 0x4F4FA67: _PyImport_LoadDynamicModule (importdl.c:42)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:add_to_global
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 320 bytes in 1 blocks are still reachable in loss record 990 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE36C6: PyStructSequence_InitType (structseq.c:504)
==10278==    by 0x4F7A0D2: initpwd (pwdmodule.c:200)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyStructSequence_InitType
   fun:initpwd
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 324 bytes in 18 blocks are still reachable in loss record 991 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x8117E50: PyDataMem_NEW (alloc.c:198)
==10278==    by 0x8117E50: _npy_alloc_cache (alloc.c:66)
==10278==    by 0x8117E50: npy_alloc_cache (alloc.c:94)
==10278==    by 0x8168270: PyArray_NewFromDescr_int (ctors.c:1061)
==10278==    by 0x81683D9: PyArray_NewFromDescr (ctors.c:1145)
==10278==    by 0x816D1B0: PyArray_FromAny (ctors.c:1766)
==10278==    by 0x816D2FB: PyArray_CheckFromAny (ctors.c:1874)
==10278==    by 0x81EDE4A: _array_fromobject (multiarraymodule.c:1753)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyDataMem_NEW
   fun:_npy_alloc_cache
   fun:npy_alloc_cache
   fun:PyArray_NewFromDescr_int
   fun:PyArray_NewFromDescr
   fun:PyArray_FromAny
   fun:PyArray_CheckFromAny
   fun:_array_fromobject
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 328 bytes in 1 blocks are still reachable in loss record 992 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x1091AC89: _setup_ssl_threads (_ssl.c:4012)
==10278==    by 0x1091AC89: init_ssl (_ssl.c:4095)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_setup_ssl_threads
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 336 bytes in 14 blocks are still reachable in loss record 993 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA804: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 360 bytes in 15 blocks are still reachable in loss record 994 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7E7: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 995 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x7A8E7FA: PyCFuncPtrType_new (_ctypes.c:2412)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 996 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x7A8F600: StructUnionType_new (_ctypes.c:423)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:StructUnionType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 997 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x7A8E7FA: PyCFuncPtrType_new (_ctypes.c:2412)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 998 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x7A8E7FA: PyCFuncPtrType_new (_ctypes.c:2412)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B24AB: init_ccallback_c (_ccallback_c.c:3582)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 999 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x7A8E7FA: PyCFuncPtrType_new (_ctypes.c:2412)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B1803: init_ccallback_c (_ccallback_c.c:3808)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 1,000 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x7A8E7FA: PyCFuncPtrType_new (_ctypes.c:2412)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B0C0D: init_ccallback_c (_ccallback_c.c:4044)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 1,001 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x7A8E7FA: PyCFuncPtrType_new (_ctypes.c:2412)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B05AB: init_ccallback_c (_ccallback_c.c:4210)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 1,002 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x126DD147: __Pyx_Py3ClassCreate (_ufuncs.c:86851)
==10278==    by 0x126DD147: init_ufuncs (_ufuncs.c:39578)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate
   fun:init_ufuncs
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 1,003 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x19BDEDB2: __Pyx_Py3ClassCreate.clone.0 (interpnd.c:29741)
==10278==    by 0x19BFC74C: initinterpnd (interpnd.c:26133)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.0
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 1,004 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x19BDEDB2: __Pyx_Py3ClassCreate.clone.0 (interpnd.c:29741)
==10278==    by 0x19BFCDED: initinterpnd (interpnd.c:26240)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.0
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 384 bytes in 1 blocks are still reachable in loss record 1,005 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x19BDEDB2: __Pyx_Py3ClassCreate.clone.0 (interpnd.c:29741)
==10278==    by 0x19BFD627: initinterpnd (interpnd.c:26371)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.0
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 400 bytes in 1 blocks are still reachable in loss record 1,006 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE36C6: PyStructSequence_InitType (structseq.c:504)
==10278==    by 0x6812832: inittime (timemodule.c:883)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyStructSequence_InitType
   fun:inittime
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 400 bytes in 12 blocks are still reachable in loss record 1,007 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4EB99E9: list_repeat (listobject.c:559)
==10278==    by 0x4F31385: PyEval_EvalFrameEx (ceval.c:1399)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:list_repeat
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 408 bytes in 17 blocks are still reachable in loss record 1,008 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA814: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 408 bytes in 17 blocks are still reachable in loss record 1,009 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA84E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 433 bytes in 1 blocks are still reachable in loss record 1,010 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6CDA1: calculate_path (getpath.c:570)
==10278==    by 0x4F6DFA4: Py_GetPrefix (getpath.c:669)
==10278==    by 0x4F49FBF: Anaconda_GetVersion (getversion.c:23)
==10278==    by 0x4F4A0B2: Py_GetVersion (getversion.c:50)
==10278==    by 0x4F60246: _PySys_Init (sysmodule.c:1421)
==10278==    by 0x4F59BBC: Py_InitializeEx (pythonrun.c:241)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:calculate_path
   fun:Py_GetPrefix
   fun:Anaconda_GetVersion
   fun:Py_GetVersion
   fun:_PySys_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 440 bytes in 1 blocks are still reachable in loss record 1,011 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE36C6: PyStructSequence_InitType (structseq.c:504)
==10278==    by 0x4F7728B: initposix (posixmodule.c:9488)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyStructSequence_InitType
   fun:initposix
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 456 bytes in 19 blocks are still reachable in loss record 1,012 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7DD: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 456 bytes in 19 blocks are still reachable in loss record 1,013 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE55D94D: ERR_load_OCSP_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA85E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_OCSP_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 480 bytes in 1 blocks are still reachable in loss record 1,014 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE36C6: PyStructSequence_InitType (structseq.c:504)
==10278==    by 0x4EAEF0A: _PyFloat_Init (floatobject.c:2211)
==10278==    by 0x4F59B64: Py_InitializeEx (pythonrun.c:219)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyStructSequence_InitType
   fun:_PyFloat_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 480 bytes in 20 blocks are still reachable in loss record 1,015 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4DFD9D: ERR_load_DH_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7E7: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_DH_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 512 bytes in 1 blocks are still reachable in loss record 1,016 of 1,766
==10278==    at 0x4C2FB45: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x1170701E: _nc_read_termtype (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x117072BE: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11707480: _nc_read_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701118: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701461: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:_nc_read_termtype
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_read_entry
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 520 bytes in 1 blocks are possibly lost in loss record 1,017 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0xCD51BDB: ufunc_get_doc (ufunc_object.c:5623)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:ufunc_get_doc
   fun:_PyObject_GenericGetAttrWithDict
   fun:builtin_getattr
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 520 bytes in 1 blocks are possibly lost in loss record 1,018 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
}
==10278== 525 bytes in 1 blocks are still reachable in loss record 1,019 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x126CD9F5: __Pyx_CyFunction_get_doc (_ufuncs.c:86217)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4ECF8BC: PyObject_GetAttrString (object.c:1138)
==10278==    by 0x4EA1200: property_init (descrobject.c:1332)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x1A2DD47E: __Pyx_PyObject_Call (qhull.c:46982)
==10278==    by 0x1A2EBE42: initqhull (qhull.c:46143)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:__Pyx_CyFunction_get_doc
   fun:_PyObject_GenericGetAttrWithDict
   fun:PyObject_GetAttrString
   fun:property_init
   fun:type_call
   fun:__Pyx_PyObject_Call
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 527 bytes in 1 blocks are still reachable in loss record 1,020 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x4F70B59: initthread (threadmodule.c:923)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:initthread
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 528 bytes in 1 blocks are still reachable in loss record 1,021 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyObject_Realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== 528 bytes in 11 blocks are still reachable in loss record 1,022 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7CAC59F: prepare_s (_struct.c:1287)
==10278==    by 0x7CAC59F: s_init (_struct.c:1395)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x7CAC852: cache_struct (_struct.c:1830)
==10278==    by 0x7CACAD8: calcsize (_struct.c:1858)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:prepare_s
   fun:s_init
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:cache_struct
   fun:calcsize
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 528 bytes in 22 blocks are still reachable in loss record 1,023 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE54DB0D: ERR_load_CONF_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA814: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_CONF_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 528 bytes in 22 blocks are still reachable in loss record 1,024 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA844: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 528 bytes in 1 blocks are possibly lost in loss record 1,025 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
}
==10278== 528 bytes in 1 blocks are possibly lost in loss record 1,026 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 528 bytes in 1 blocks are possibly lost in loss record 1,027 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F35885: ext_do_call (ceval.c:4666)
==10278==    by 0x4F35885: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:ext_do_call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==10278== 533 bytes in 1 blocks are still reachable in loss record 1,028 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0xD93590F: init_io (_iomodule.c:677)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 536 bytes in 1 blocks are possibly lost in loss record 1,029 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 536 bytes in 1 blocks are possibly lost in loss record 1,030 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278==    by 0x4E8319A: PyIter_Next (abstract.c:3121)
==10278==    by 0x4E891E1: PySequence_Tuple (abstract.c:2207)
==10278==    by 0x4EE5D34: tuple_new (tupleobject.c:658)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
   fun:PyIter_Next
   fun:PySequence_Tuple
   fun:tuple_new
}
==10278== 544 bytes in 1 blocks are still reachable in loss record 1,031 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 544 bytes in 1 blocks are possibly lost in loss record 1,032 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 552 bytes in 1 blocks are still reachable in loss record 1,033 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x4ECE377: _Py_ReadyTypes (object.c:2089)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 560 bytes in 1 blocks are still reachable in loss record 1,034 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE36C6: PyStructSequence_InitType (structseq.c:504)
==10278==    by 0x4F7724E: initposix (posixmodule.c:9483)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyStructSequence_InitType
   fun:initposix
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 560 bytes in 1 blocks are still reachable in loss record 1,035 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== 560 bytes in 1 blocks are possibly lost in loss record 1,036 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF42AB: slot_tp_call (typeobject.c:5546)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 560 bytes in 1 blocks are possibly lost in loss record 1,037 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:PyObject_Realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== 565 bytes in 1 blocks are still reachable in loss record 1,038 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x4ECE467: _Py_ReadyTypes (object.c:2127)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 576 bytes in 1 blocks are possibly lost in loss record 1,039 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EE541E: PyTuple_New (tupleobject.c:90)
==10278==    by 0x4F50A3D: r_object (marshal.c:885)
==10278==    by 0x4F50BFF: r_object (marshal.c:1027)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyTuple_New
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
}
==10278== 576 bytes in 1 blocks are possibly lost in loss record 1,040 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F35885: ext_do_call (ceval.c:4666)
==10278==    by 0x4F35885: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:ext_do_call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 599 bytes in 1 blocks are still reachable in loss record 1,041 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x4ECE4B7: _Py_ReadyTypes (object.c:2141)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 600 bytes in 1 blocks are still reachable in loss record 1,042 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278==    by 0x4F324F0: PyEval_EvalFrameEx (ceval.c:2808)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==10278== 600 bytes in 1 blocks are possibly lost in loss record 1,043 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 608 bytes in 1 blocks are possibly lost in loss record 1,044 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 624 bytes in 26 blocks are still reachable in loss record 1,045 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4DACAD: ERR_load_DSA_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA804: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_DSA_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 640 bytes in 1 blocks are still reachable in loss record 1,046 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 640 bytes in 1 blocks are possibly lost in loss record 1,047 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 672 bytes in 28 blocks are still reachable in loss record 1,048 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8280: ERR_load_ERR_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7D8: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_ERR_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 672 bytes in 28 blocks are still reachable in loss record 1,049 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F33502: PyEval_EvalFrameEx (ceval.c:2466)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF0D46: call_method (typeobject.c:1283)
==10278==    by 0x4EF10AA: slot_mp_ass_subscript (typeobject.c:5220)
==10278==    by 0x4F32EAB: PyEval_EvalFrameEx (ceval.c:1909)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:call_method
   fun:slot_mp_ass_subscript
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 677 bytes in 1 blocks are still reachable in loss record 1,050 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x4EEED37: PyType_Ready (typeobject.c:4102)
==10278==    by 0x4ECE34F: _Py_ReadyTypes (object.c:2083)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 680 bytes in 1 blocks are still reachable in loss record 1,051 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EE36C6: PyStructSequence_InitType (structseq.c:504)
==10278==    by 0x4F60C85: _PySys_Init (sysmodule.c:1502)
==10278==    by 0x4F59BBC: Py_InitializeEx (pythonrun.c:241)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyStructSequence_InitType
   fun:_PySys_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 680 bytes in 1 blocks are possibly lost in loss record 1,052 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EE541E: PyTuple_New (tupleobject.c:90)
==10278==    by 0x4F50A3D: r_object (marshal.c:885)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyTuple_New
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
}
==10278== 696 bytes in 29 blocks are still reachable in loss record 1,053 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7FE: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 696 bytes in 29 blocks are still reachable in loss record 1,054 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA834: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 696 bytes in 29 blocks are still reachable in loss record 1,055 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE55988D: ERR_load_PKCS12_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA844: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_PKCS12_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 706 bytes in 1 blocks are still reachable in loss record 1,056 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x4ECF3D7: _PyObject_GenericGetAttrWithDict (object.c:1359)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278==    by 0x4E8319A: PyIter_Next (abstract.c:3121)
==10278==    by 0x4ED47CF: set_update_internal (setobject.c:966)
==10278==    by 0x4ED56B8: set_init (setobject.c:2007)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:_PyObject_GenericGetAttrWithDict
   fun:builtin_getattr
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
   fun:PyIter_Next
   fun:set_update_internal
   fun:set_init
   fun:type_call
   fun:PyObject_Call
}
==10278== 720 bytes in 15 blocks are still reachable in loss record 1,057 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBB82E: list_resize (listobject.c:62)
==10278==    by 0x4EBB82E: list_ass_slice (listobject.c:692)
==10278==    by 0x4F2EF9E: assign_slice (ceval.c:4758)
==10278==    by 0x4F3064E: PyEval_EvalFrameEx (ceval.c:1868)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:list_ass_slice
   fun:assign_slice
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
}
==10278== 720 bytes in 15 blocks are still reachable in loss record 1,058 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBB82E: list_resize (listobject.c:62)
==10278==    by 0x4EBB82E: list_ass_slice (listobject.c:692)
==10278==    by 0x4F2EF9E: assign_slice (ceval.c:4758)
==10278==    by 0x4F3064E: PyEval_EvalFrameEx (ceval.c:1868)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F35885: ext_do_call (ceval.c:4666)
==10278==    by 0x4F35885: PyEval_EvalFrameEx (ceval.c:3028)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:list_ass_slice
   fun:assign_slice
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:ext_do_call
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 720 bytes in 30 blocks are still reachable in loss record 1,059 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA85E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 728 bytes in 1 blocks are still reachable in loss record 1,060 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 750 bytes in 1 blocks are still reachable in loss record 1,061 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x117070EC: _nc_read_termtype (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x117072BE: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11707480: _nc_read_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701118: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701461: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_nc_read_termtype
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_read_entry
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 760 bytes in 24 blocks are still reachable in loss record 1,062 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F33502: PyEval_EvalFrameEx (ceval.c:2466)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,063 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4EEED37: PyType_Ready (typeobject.c:4102)
==10278==    by 0x4ECE2FF: _Py_ReadyTypes (object.c:2071)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,064 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE313: _Py_ReadyTypes (object.c:2074)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,065 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE34F: _Py_ReadyTypes (object.c:2083)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,066 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4ECE3DB: _Py_ReadyTypes (object.c:2104)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,067 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECEE7: add_tp_new_wrapper (typeobject.c:4944)
==10278==    by 0x4EECEE7: add_operators (typeobject.c:6537)
==10278==    by 0x4EECEE7: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE403: _Py_ReadyTypes (object.c:2110)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_tp_new_wrapper
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,068 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4ECE453: _Py_ReadyTypes (object.c:2124)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,069 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEDC2B: PyType_Ready (typeobject.c:4211)
==10278==    by 0x4ECE467: _Py_ReadyTypes (object.c:2127)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,070 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE4A3: _Py_ReadyTypes (object.c:2138)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,071 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECEE7: add_tp_new_wrapper (typeobject.c:4944)
==10278==    by 0x4EECEE7: add_operators (typeobject.c:6537)
==10278==    by 0x4EECEE7: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE4F3: _Py_ReadyTypes (object.c:2150)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_tp_new_wrapper
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,072 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEDC2B: PyType_Ready (typeobject.c:4211)
==10278==    by 0x4ECE543: _Py_ReadyTypes (object.c:2162)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,073 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4ECE56B: _Py_ReadyTypes (object.c:2168)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,074 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE57F: _Py_ReadyTypes (object.c:2171)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,075 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE593: _Py_ReadyTypes (object.c:2174)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,076 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE5BB: _Py_ReadyTypes (object.c:2180)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,077 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4ECE5E3: _Py_ReadyTypes (object.c:2186)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,078 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4ECE5F7: _Py_ReadyTypes (object.c:2189)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,079 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4ECE60B: _Py_ReadyTypes (object.c:2192)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,080 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4ECE647: _Py_ReadyTypes (object.c:2201)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,081 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4EA62C5: _PyExc_Init (exceptions.c:2058)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,082 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EA6379: _PyExc_Init (exceptions.c:2067)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,083 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EA642D: _PyExc_Init (exceptions.c:2082)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,084 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EA64CD: _PyExc_Init (exceptions.c:2091)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,085 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EA64E1: _PyExc_Init (exceptions.c:2092)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,086 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EA64F5: _PyExc_Init (exceptions.c:2093)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,087 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECEE7: add_tp_new_wrapper (typeobject.c:4944)
==10278==    by 0x4EECEE7: add_operators (typeobject.c:6537)
==10278==    by 0x4EECEE7: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECF3D7: _PyObject_GenericGetAttrWithDict (object.c:1359)
==10278==    by 0x4F4F041: PyImport_Import (import.c:2905)
==10278==    by 0x4F4F16B: PyImport_ImportModule (import.c:2151)
==10278==    by 0x4EA66B3: _PyExc_Init (exceptions.c:2120)
==10278==    by 0x4F59C1B: Py_InitializeEx (pythonrun.c:256)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_tp_new_wrapper
   fun:add_operators
   fun:PyType_Ready
   fun:_PyObject_GenericGetAttrWithDict
   fun:PyImport_Import
   fun:PyImport_ImportModule
   fun:_PyExc_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,088 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4F8544D: initzipimport (zipimport.c:1304)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initzipimport
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,089 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEDC2B: PyType_Ready (typeobject.c:4211)
==10278==    by 0x4ECF3D7: _PyObject_GenericGetAttrWithDict (object.c:1359)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4EA839B: gen_send_ex (genobject.c:85)
==10278==    by 0x4E8319A: PyIter_Next (abstract.c:3121)
==10278==    by 0x4ED47CF: set_update_internal (setobject.c:966)
==10278==    by 0x4ED56B8: set_init (setobject.c:2007)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:_PyObject_GenericGetAttrWithDict
   fun:builtin_getattr
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:gen_send_ex
   fun:PyIter_Next
   fun:set_update_internal
   fun:set_init
   fun:type_call
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,090 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EC8E20: _PyDict_NewPresized (dictobject.c:690)
==10278==    by 0x4F3310E: PyEval_EvalFrameEx (ceval.c:2502)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyDict_NewPresized
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,091 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4F7A479: init_sre (_sre.c:4021)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_sre
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,092 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4F7A49B: init_sre (_sre.c:4021)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_sre
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,093 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4E9A363: PyClass_New (classobject.c:60)
==10278==    by 0x4E9A56D: class_new (classobject.c:183)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyClass_New
   fun:class_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,094 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,095 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F873B2: read_directory (zipimport.c:848)
==10278==    by 0x4F873B2: zipimporter_init (zipimport.c:129)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F4A501: get_path_importer (import.c:1257)
==10278==    by 0x4F4C213: find_module (import.c:1481)
==10278==    by 0x4F4E097: import_submodule (import.c:2714)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:read_directory
   fun:zipimporter_init
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:get_path_importer
   fun:find_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,096 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F53478: Py_InitModule4_64 (modsupport.c:86)
==10278==    by 0x6812752: inittime (timemodule.c:854)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:Py_InitModule4_64
   fun:inittime
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,097 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x6A16C3C: initcStringIO (cStringIO.c:767)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initcStringIO
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,098 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x6A16C50: initcStringIO (cStringIO.c:768)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initcStringIO
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,099 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x6C1C7A1: init_collections (_collectionsmodule.c:1750)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_collections
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,100 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEDC2B: PyType_Ready (typeobject.c:4211)
==10278==    by 0x702FBAE: inititertools (itertoolsmodule.c:4126)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:inititertools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,101 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4F70B59: initthread (threadmodule.c:923)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initthread
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,102 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,103 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x78413BE: init_functools (_functoolsmodule.c:407)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_functools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,104 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x7A8DDC4: init_ctypes (_ctypes.c:5615)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,105 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x7A8DDDF: init_ctypes (_ctypes.c:5619)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,106 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x7A8DDFD: init_ctypes (_ctypes.c:5623)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,107 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x7A8DE1C: init_ctypes (_ctypes.c:5627)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,108 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x7A8DE3A: init_ctypes (_ctypes.c:5631)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,109 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x7A8DE58: init_ctypes (_ctypes.c:5635)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,110 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x7A8DE6F: init_ctypes (_ctypes.c:5643)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,111 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x7A8DF24: init_ctypes (_ctypes.c:5662)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,112 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x7A8DF5E: init_ctypes (_ctypes.c:5669)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,113 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x7A8DF97: init_ctypes (_ctypes.c:5676)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,114 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x7A8DFD7: init_ctypes (_ctypes.c:5683)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,115 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x7A8E002: init_ctypes (_ctypes.c:5694)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,116 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x7CAAAC5: init_struct (_struct.c:2032)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_struct
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,117 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x7CAC87E: cache_struct (_struct.c:1835)
==10278==    by 0x7CACAD8: calcsize (_struct.c:1858)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:cache_struct
   fun:calcsize
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,118 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xCADE631: initdatetime (datetimemodule.c:4784)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initdatetime
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,119 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC25E: setup_scalartypes (multiarraymodule.c:4378)
==10278==    by 0x81EC25E: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,120 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC38C: setup_scalartypes (multiarraymodule.c:4397)
==10278==    by 0x81EC38C: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,121 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC3AE: setup_scalartypes (multiarraymodule.c:4399)
==10278==    by 0x81EC3AE: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,122 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC506: setup_scalartypes (multiarraymodule.c:4416)
==10278==    by 0x81EC506: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,123 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC592: setup_scalartypes (multiarraymodule.c:4420)
==10278==    by 0x81EC592: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,124 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC5F0: setup_scalartypes (multiarraymodule.c:4422)
==10278==    by 0x81EC5F0: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,125 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC651: setup_scalartypes (multiarraymodule.c:4423)
==10278==    by 0x81EC651: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,126 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC673: setup_scalartypes (multiarraymodule.c:4425)
==10278==    by 0x81EC673: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,127 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC6D3: initmultiarray (multiarraymodule.c:4582)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,128 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x81EC6FB: initmultiarray (multiarraymodule.c:4588)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,129 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xCCFDCD1: initumath (umathmodule.c:346)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initumath
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,130 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xD4158BB: init_stuff (cPickle.c:5897)
==10278==    by 0xD4158BB: initcPickle (cPickle.c:6043)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_stuff
   fun:initcPickle
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,131 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0xD415D5C: init_stuff (cPickle.c:6013)
==10278==    by 0xD415D5C: initcPickle (cPickle.c:6043)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:init_stuff
   fun:initcPickle
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,132 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4ECF3D7: _PyObject_GenericGetAttrWithDict (object.c:1359)
==10278==    by 0x4F331B4: PyEval_EvalFrameEx (ceval.c:2543)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_PyObject_GenericGetAttrWithDict
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,133 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F3721D: exec_statement (ceval.c:5043)
==10278==    by 0x4F3721D: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,134 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEDC2B: PyType_Ready (typeobject.c:4211)
==10278==    by 0xD93590F: init_io (_iomodule.c:677)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,135 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0xD935944: init_io (_iomodule.c:678)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,136 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xD935985: init_io (_iomodule.c:683)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,137 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xD935A0F: init_io (_iomodule.c:691)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,138 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xD935A8B: init_io (_iomodule.c:699)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,139 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xD935AC9: init_io (_iomodule.c:703)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,140 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xD935B7B: init_io (_iomodule.c:714)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,141 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0xDF6B608: init_hashlib (_hashopenssl.c:911)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,142 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xEC1D2FF: init_random (_randommodule.c:592)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_random
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,143 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4F1FD3B: add_ast_fields (Python-ast.c:654)
==10278==    by 0x4F1FD3B: init_types (Python-ast.c:673)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:add_ast_fields
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,144 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x4F1FE46: add_attributes (Python-ast.c:540)
==10278==    by 0x4F1FE46: init_types (Python-ast.c:676)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:add_attributes
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,145 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x4F13211: add_attributes (Python-ast.c:540)
==10278==    by 0x4F1FF58: init_types (Python-ast.c:689)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:add_attributes
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,146 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x4F13211: add_attributes (Python-ast.c:540)
==10278==    by 0x4F203BC: init_types (Python-ast.c:741)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:add_attributes
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,147 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x4F13211: add_attributes (Python-ast.c:540)
==10278==    by 0x4F20801: init_types (Python-ast.c:789)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:add_attributes
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,148 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x4F13211: add_attributes (Python-ast.c:540)
==10278==    by 0x4F209CE: init_types (Python-ast.c:816)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:add_attributes
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,149 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x4F13211: add_attributes (Python-ast.c:540)
==10278==    by 0x4F20ABD: init_types (Python-ast.c:827)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:add_attributes
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,150 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x4F13211: add_attributes (Python-ast.c:540)
==10278==    by 0x4F20B7E: init_types (Python-ast.c:838)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:add_attributes
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,151 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x4F13211: add_attributes (Python-ast.c:540)
==10278==    by 0x4F20EDD: init_types (Python-ast.c:889)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:add_attributes
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,152 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x4F13211: add_attributes (Python-ast.c:540)
==10278==    by 0x4F21024: init_types (Python-ast.c:908)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:add_attributes
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,153 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x4F13211: add_attributes (Python-ast.c:540)
==10278==    by 0x4F21334: init_types (Python-ast.c:954)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:add_attributes
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,154 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1091A258: init_ssl (_ssl.c:4075)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,155 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1091A26C: init_ssl (_ssl.c:4077)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,156 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x10B68F61: initselect (selectmodule.c:1860)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initselect
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,157 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F32EAB: PyEval_EvalFrameEx (ceval.c:1909)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,158 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x11A1DF8D: initlazylinker_ext (mod.cpp:1092)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:initlazylinker_ext
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,159 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F32EAB: PyEval_EvalFrameEx (ceval.c:1909)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,160 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x12D7F90E: init_ufuncs_cxx (_ufuncs_cxx.cxx:4501)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x126CDEFB: __Pyx_ImportModule (_ufuncs.c:88501)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_ufuncs_cxx
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:__Pyx_ImportModule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,161 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x13DF8E1D: init_solve_toeplitz (_solve_toeplitz.c:20760)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,162 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x13DF91EA: init_solve_toeplitz (_solve_toeplitz.c:20838)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,163 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1427FB78: initcython_blas (cython_blas.c:26152)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,164 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x14515106: initcython_lapack (cython_lapack.c:45500)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278==    by 0x140265BB: __Pyx_ImportModule (_decomp_update.c:40839)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:initcython_lapack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
   fun:__Pyx_ImportModule
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,165 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1403163E: init_decomp_update (_decomp_update.c:38632)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_decomp_update
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,166 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1477DA28: init_comb (_comb.c:1757)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_comb
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,167 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x14985813: init_ellip_harm_2 (_ellip_harm_2.c:8470)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_ellip_harm_2
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,168 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x15CB70D4: init_csparsetools (_csparsetools.c:29865)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,169 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x15F2C84B: init_shortest_path (_shortest_path.c:17914)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_shortest_path
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,170 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x161787FA: init_tools (_tools.c:9572)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_tools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,171 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x1638F410: init_traversal (_traversal.c:10941)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:init_traversal
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,172 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x165B9C74: init_min_spanning_tree (_min_spanning_tree.c:18705)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,173 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x165BA02D: init_min_spanning_tree (_min_spanning_tree.c:18788)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,174 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x16857EAC: init_reordering (_reordering.c:26256)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,175 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x16858231: init_reordering (_reordering.c:26333)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,176 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x16CB0B40: init_superlu (_superlumodule.c:355)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:init_superlu
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,177 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F3721D: exec_statement (ceval.c:5043)
==10278==    by 0x4F3721D: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,178 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1897AA6C: init_group_columns (_group_columns.c:18934)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,179 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1897ADE1: init_group_columns (_group_columns.c:19005)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,180 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x18BA23CB: initgivens_elimination (givens_elimination.c:15165)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,181 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x18BA26AC: initgivens_elimination (givens_elimination.c:15228)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,182 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1971AA6F: init_bspl (_bspl.c:22209)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,183 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1971AEF8: init_bspl (_bspl.c:22293)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,184 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x199AC850: init_ppoly (_ppoly.c:30925)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,185 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x199ACB06: init_ppoly (_ppoly.c:30991)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,186 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x19BFAB98: initinterpnd (interpnd.c:25936)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,187 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x19BFBF64: initinterpnd (interpnd.c:25968)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,188 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x19E62AF6: initckdtree (ckdtree.cxx:20208)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initckdtree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,189 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEEEBE: PyType_Ready (typeobject.c:4214)
==10278==    by 0x19E62B45: initckdtree (ckdtree.cxx:20212)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:initckdtree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,190 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x19E62B72: initckdtree (ckdtree.cxx:20214)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:initckdtree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,191 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x19E62BB0: initckdtree (ckdtree.cxx:20218)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:initckdtree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,192 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1A0C28A9: init_multiprocessing (multiprocessing.c:271)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_multiprocessing
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,193 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1A0C28D7: init_multiprocessing (multiprocessing.c:279)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_multiprocessing
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,194 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1A2EACE5: initqhull (qhull.c:45636)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,195 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1A2EAD34: initqhull (qhull.c:45640)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,196 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1A2EAD9F: initqhull (qhull.c:45646)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,197 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2EB861: initqhull (qhull.c:45944)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,198 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2EC00E: initqhull (qhull.c:46193)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,199 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2EC5C8: initqhull (qhull.c:46360)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,200 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2ECB28: initqhull (qhull.c:46515)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,201 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2ED088: initqhull (qhull.c:46670)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,202 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1A60629F: init_voronoi (_voronoi.c:18573)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,203 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1A6065D2: init_voronoi (_voronoi.c:18645)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,204 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1AA4520C: init_hausdorff (_hausdorff.c:18484)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,205 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1AA4553F: init_hausdorff (_hausdorff.c:18556)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,206 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1AD07ADD: init_stats (_stats.c:32868)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,207 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1AD07E52: init_stats (_stats.c:32939)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,208 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EF4A4F: type_new (typeobject.c:2159)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_new
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,209 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEEEBE: PyType_Ready (typeobject.c:4214)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EF4A4F: type_new (typeobject.c:2159)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_new
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,210 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1BF82CEC: init_max_len_seq_inner (_max_len_seq_inner.c:17774)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,211 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1BF83011: init_max_len_seq_inner (_max_len_seq_inner.c:17843)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,212 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1C1AE3AA: init_upfirdn_apply (_upfirdn_apply.c:25033)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,213 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1C1AE6CF: init_upfirdn_apply (_upfirdn_apply.c:25102)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,214 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB568: dict_update_common (dictobject.c:1481)
==10278==    by 0x4ECB568: dict_init (dictobject.c:2383)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:dict_update_common
   fun:dict_init
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,215 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x1CF92D71: init_ni_label (_ni_label.c:28266)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,216 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1CF93044: init_ni_label (_ni_label.c:28323)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 1 blocks are still reachable in loss record 1,217 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1D1C8C03: init_spectral (_spectral.c:4920)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_spectral
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 768 bytes in 2 blocks are still reachable in loss record 1,218 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x7A8EBFA: PyCSimpleType_new (_ctypes.c:2025)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 794 bytes in 1 blocks are still reachable in loss record 1,219 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 800 bytes in 1 blocks are possibly lost in loss record 1,220 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F33E04: PyEval_EvalFrameEx (ceval.c:2950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:PyEval_EvalFrameEx
}
==10278== 816 bytes in 34 blocks are still reachable in loss record 1,221 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA809: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 816 bytes in 34 blocks are still reachable in loss record 1,222 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4EACDD: ERR_load_BIO_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA834: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_BIO_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 840 bytes in 35 blocks are still reachable in loss record 1,223 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA854: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 848 bytes in 1 blocks are still reachable in loss record 1,224 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1B6DA449: initmvn (mvnmodule.c:680)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initmvn
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 864 bytes in 36 blocks are still reachable in loss record 1,225 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F82B0: ERR_load_ERR_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7D8: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_ERR_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 895 bytes in 8 blocks are still reachable in loss record 1,226 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4005F38: open_path (dl-load.c:2121)
==10278==    by 0x4008F26: _dl_map_object (dl-load.c:2283)
==10278==    by 0x400DDEF: openaux (dl-deps.c:63)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x400E40A: _dl_map_object_deps (dl-deps.c:254)
==10278==    by 0x401582E: dl_open_worker (dl-open.c:280)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:open_path
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
}
==10278== 936 bytes in 39 blocks are still reachable in loss record 1,227 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4E481D: ERR_load_ENGINE_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA859: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_ENGINE_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 937 bytes in 1 blocks are still reachable in loss record 1,228 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x126CD9F5: __Pyx_CyFunction_get_doc (_ufuncs.c:86217)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x1A2EC157: initqhull (qhull.c:46225)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:__Pyx_CyFunction_get_doc
   fun:_PyObject_GenericGetAttrWithDict
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,229 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F854BC: initzipimport (zipimport.c:1327)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initzipimport
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,230 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F72871: initsignal (signalmodule.c:836)
==10278==    by 0x4F72B88: PyOS_InitInterrupts (signalmodule.c:958)
==10278==    by 0x4F59FA2: initsigs (pythonrun.c:1800)
==10278==    by 0x4F59FA2: Py_InitializeEx (pythonrun.c:265)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initsignal
   fun:PyOS_InitInterrupts
   fun:initsigs
   fun:Py_InitializeEx
   fun:Py_Main
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,231 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x632CD3C: init_locale (_localemodule.c:739)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_locale
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,232 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,233 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F70B26: initthread (threadmodule.c:920)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initthread
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,234 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x7A8E18D: init_ctypes (_ctypes.c:5743)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_ctypes
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,235 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x7CAAC0D: init_struct (_struct.c:2080)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_struct
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,236 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8E7DF: PyCFuncPtrType_new (_ctypes.c:2405)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,237 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8F58F: StructUnionType_new (_ctypes.c:408)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:StructUnionType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,238 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8E7DF: PyCFuncPtrType_new (_ctypes.c:2405)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,239 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xD415BAE: init_stuff (cPickle.c:5962)
==10278==    by 0xD415BAE: initcPickle (cPickle.c:6043)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_stuff
   fun:initcPickle
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,240 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xD415BEC: init_stuff (cPickle.c:5968)
==10278==    by 0xD415BEC: initcPickle (cPickle.c:6043)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_stuff
   fun:initcPickle
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,241 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xD415C5F: init_stuff (cPickle.c:5983)
==10278==    by 0xD415C5F: initcPickle (cPickle.c:6043)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_stuff
   fun:initcPickle
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,242 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xD415C9D: init_stuff (cPickle.c:5989)
==10278==    by 0xD415C9D: initcPickle (cPickle.c:6043)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_stuff
   fun:initcPickle
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,243 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xD415CBE: init_stuff (cPickle.c:5993)
==10278==    by 0xD415CBE: initcPickle (cPickle.c:6043)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_stuff
   fun:initcPickle
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,244 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E872DB: call_function_tail (abstract.c:2579)
==10278==    by 0x4E872DB: _PyObject_CallFunction_SizeT (abstract.c:2623)
==10278==    by 0xD93581C: init_io (_iomodule.c:658)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:_PyObject_CallFunction_SizeT
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,245 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xDB4D2EB: initbinascii (binascii.c:1521)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initbinascii
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,246 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xDB4D314: initbinascii (binascii.c:1523)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initbinascii
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,247 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1FDFB: make_type (Python-ast.c:520)
==10278==    by 0x4F1FDFB: init_types (Python-ast.c:674)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
   fun:import_submodule
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,248 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F1FE80: init_types (Python-ast.c:677)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,249 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F1FEAF: init_types (Python-ast.c:679)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,250 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F1FEDE: init_types (Python-ast.c:682)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,251 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F1FF0D: init_types (Python-ast.c:685)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,252 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F1FF34: init_types (Python-ast.c:687)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,253 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F1FF7F: init_types (Python-ast.c:690)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,254 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F1FFAE: init_types (Python-ast.c:693)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,255 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F1FFDD: init_types (Python-ast.c:695)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,256 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2000C: init_types (Python-ast.c:697)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,257 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2003B: init_types (Python-ast.c:699)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,258 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2006A: init_types (Python-ast.c:701)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,259 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20099: init_types (Python-ast.c:703)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,260 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F200C8: init_types (Python-ast.c:705)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,261 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F200F7: init_types (Python-ast.c:707)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,262 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20126: init_types (Python-ast.c:709)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,263 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20155: init_types (Python-ast.c:711)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,264 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20184: init_types (Python-ast.c:713)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,265 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F201B3: init_types (Python-ast.c:715)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,266 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F201E2: init_types (Python-ast.c:717)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,267 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20211: init_types (Python-ast.c:720)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,268 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20240: init_types (Python-ast.c:722)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,269 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2026F: init_types (Python-ast.c:724)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,270 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2029E: init_types (Python-ast.c:727)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,271 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F202CD: init_types (Python-ast.c:729)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,272 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F202FC: init_types (Python-ast.c:731)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,273 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20323: init_types (Python-ast.c:733)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,274 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2034A: init_types (Python-ast.c:735)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,275 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20371: init_types (Python-ast.c:737)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,276 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20398: init_types (Python-ast.c:739)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,277 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F203E3: init_types (Python-ast.c:742)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,278 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20412: init_types (Python-ast.c:744)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,279 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20441: init_types (Python-ast.c:746)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,280 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20470: init_types (Python-ast.c:748)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,281 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2049F: init_types (Python-ast.c:750)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,282 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F204CE: init_types (Python-ast.c:752)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,283 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F204FD: init_types (Python-ast.c:754)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,284 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2052C: init_types (Python-ast.c:756)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,285 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2055B: init_types (Python-ast.c:758)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,286 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2058A: init_types (Python-ast.c:760)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,287 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F205B9: init_types (Python-ast.c:762)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,288 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F205E8: init_types (Python-ast.c:765)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,289 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20617: init_types (Python-ast.c:767)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,290 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20646: init_types (Python-ast.c:769)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,291 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20675: init_types (Python-ast.c:771)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,292 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F206A4: init_types (Python-ast.c:773)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,293 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F206D3: init_types (Python-ast.c:775)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,294 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20702: init_types (Python-ast.c:777)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,295 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20731: init_types (Python-ast.c:779)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,296 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20760: init_types (Python-ast.c:781)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,297 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2078F: init_types (Python-ast.c:783)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,298 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F207BE: init_types (Python-ast.c:785)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,299 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F207E5: init_types (Python-ast.c:787)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,300 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20820: init_types (Python-ast.c:790)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,301 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20863: init_types (Python-ast.c:794)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,302 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F208A6: init_types (Python-ast.c:798)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,303 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F208E9: init_types (Python-ast.c:802)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,304 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2092C: init_types (Python-ast.c:806)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,305 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2096F: init_types (Python-ast.c:810)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,306 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F209B2: init_types (Python-ast.c:814)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,307 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F209ED: init_types (Python-ast.c:817)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,308 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20A1C: init_types (Python-ast.c:819)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,309 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20A4B: init_types (Python-ast.c:821)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,310 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20A7A: init_types (Python-ast.c:823)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,311 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20AA1: init_types (Python-ast.c:825)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,312 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20ADC: init_types (Python-ast.c:828)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,313 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20B1F: init_types (Python-ast.c:832)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,314 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20B62: init_types (Python-ast.c:836)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,315 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20B9D: init_types (Python-ast.c:839)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,316 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20BE0: init_types (Python-ast.c:843)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,317 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20C23: init_types (Python-ast.c:847)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,318 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20C66: init_types (Python-ast.c:851)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,319 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20CA9: init_types (Python-ast.c:855)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,320 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20CEC: init_types (Python-ast.c:859)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,321 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20D2F: init_types (Python-ast.c:863)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,322 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20D72: init_types (Python-ast.c:867)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,323 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20DB5: init_types (Python-ast.c:871)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,324 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20DF8: init_types (Python-ast.c:875)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,325 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20E3B: init_types (Python-ast.c:879)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,326 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20E7E: init_types (Python-ast.c:883)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,327 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20EC1: init_types (Python-ast.c:887)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,328 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20EFC: init_types (Python-ast.c:890)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,329 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20F3F: init_types (Python-ast.c:894)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,330 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20F82: init_types (Python-ast.c:898)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,331 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F20FC5: init_types (Python-ast.c:902)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,332 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F21008: init_types (Python-ast.c:906)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,333 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F21043: init_types (Python-ast.c:909)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,334 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F21086: init_types (Python-ast.c:913)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,335 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F210C9: init_types (Python-ast.c:917)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,336 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2110C: init_types (Python-ast.c:921)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,337 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2114F: init_types (Python-ast.c:925)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,338 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F21192: init_types (Python-ast.c:929)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,339 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F211D5: init_types (Python-ast.c:933)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,340 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F21218: init_types (Python-ast.c:937)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,341 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2125B: init_types (Python-ast.c:941)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,342 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2129E: init_types (Python-ast.c:945)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,343 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F212E9: init_types (Python-ast.c:949)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,344 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F21310: init_types (Python-ast.c:952)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,345 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2135B: init_types (Python-ast.c:956)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,346 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F2138A: init_types (Python-ast.c:959)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,347 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F213B5: init_types (Python-ast.c:961)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,348 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F1347B: make_type (Python-ast.c:520)
==10278==    by 0x4F213E0: init_types (Python-ast.c:963)
==10278==    by 0x4F217B2: init_ast (Python-ast.c:6763)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:make_type
   fun:init_types
   fun:init_ast
   fun:init_builtin
   fun:load_module
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,349 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xF0A52B4: initlapack_lite (lapack_litemodule.c:354)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initlapack_lite
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,350 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0xFB0DD48: initfftpack_lite (fftpack_litemodule.c:357)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initfftpack_lite
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,351 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x107001E4: init_socket (socketmodule.c:4616)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_socket
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,352 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1070022A: init_socket (socketmodule.c:4623)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_socket
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,353 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x10700269: init_socket (socketmodule.c:4629)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_socket
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,354 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x107002A4: init_socket (socketmodule.c:4635)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_socket
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,355 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F44FDF: PyErr_NewExceptionWithDoc (errors.c:653)
==10278==    by 0x1091A315: init_ssl (_ssl.c:4106)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:PyErr_NewExceptionWithDoc
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,356 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F44FDF: PyErr_NewExceptionWithDoc (errors.c:653)
==10278==    by 0x1091A34F: init_ssl (_ssl.c:4113)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:PyErr_NewExceptionWithDoc
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,357 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F44FDF: PyErr_NewExceptionWithDoc (errors.c:653)
==10278==    by 0x1091A372: init_ssl (_ssl.c:4116)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:PyErr_NewExceptionWithDoc
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,358 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F44FDF: PyErr_NewExceptionWithDoc (errors.c:653)
==10278==    by 0x1091A395: init_ssl (_ssl.c:4119)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:PyErr_NewExceptionWithDoc
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,359 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F44FDF: PyErr_NewExceptionWithDoc (errors.c:653)
==10278==    by 0x1091A3B8: init_ssl (_ssl.c:4122)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:PyErr_NewExceptionWithDoc
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,360 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x4F44FDF: PyErr_NewExceptionWithDoc (errors.c:653)
==10278==    by 0x1091A3DB: init_ssl (_ssl.c:4125)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:PyErr_NewExceptionWithDoc
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,361 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x10B68E33: initselect (selectmodule.c:1810)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initselect
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,362 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,363 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x112B38A0: init_curses (_cursesmodule.c:2781)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_curses
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,364 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x11CA15C3: initzlib (zlibmodule.c:1134)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initzlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,365 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8FA35: PyCPointerType_new (_ctypes.c:990)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x7A9425F: POINTER (callproc.c:1851)
==10278==    by 0x124AA084: __Pyx_PyObject_CallMethO (_ccallback_c.c:4997)
==10278==    by 0x124AA084: __Pyx_PyObject_CallOneArg (_ccallback_c.c:5032)
==10278==    by 0x124AEA94: init_ccallback_c (_ccallback_c.c:3527)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:PyCPointerType_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:POINTER
   fun:__Pyx_PyObject_CallMethO
   fun:__Pyx_PyObject_CallOneArg
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,366 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8E7DF: PyCFuncPtrType_new (_ctypes.c:2405)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B24AB: init_ccallback_c (_ccallback_c.c:3582)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,367 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8E7DF: PyCFuncPtrType_new (_ctypes.c:2405)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B1803: init_ccallback_c (_ccallback_c.c:3808)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,368 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8E7DF: PyCFuncPtrType_new (_ctypes.c:2405)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B0C0D: init_ccallback_c (_ccallback_c.c:4044)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,369 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8E7DF: PyCFuncPtrType_new (_ctypes.c:2405)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x124A9C94: __Pyx_PyFunction_FastCallDict.clone.3 (_ccallback_c.c:4975)
==10278==    by 0x124B05AB: init_ccallback_c (_ccallback_c.c:4210)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:__Pyx_PyFunction_FastCallDict.clone.3
   fun:init_ccallback_c
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,370 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x126DD147: __Pyx_Py3ClassCreate (_ufuncs.c:86851)
==10278==    by 0x126DD147: init_ufuncs (_ufuncs.c:39578)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate
   fun:init_ufuncs
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,371 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1336A269: initspecfun (specfunmodule.c:5845)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initspecfun
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,372 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1365C429: init_fblas (_fblasmodule.c:17816)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_fblas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,373 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1390DFF9: init_flapack (_flapackmodule.c:56199)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_flapack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,374 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x13BDE1C9: init_flinalg (_flinalgmodule.c:1988)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_flinalg
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,375 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x14B96155: init_odepack (_odepackmodule.c:847)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_odepack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,376 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x14DCCDB5: init_quadpack (_quadpackmodule.c:57)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_quadpack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,377 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1502A4F9: initvode (vodemodule.c:1630)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initvode
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,378 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x15265459: init_dop (_dopmodule.c:1325)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_dop
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,379 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x154851C9: initlsoda (lsodamodule.c:999)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initlsoda
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,380 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x15F2CEC2: __Pyx_Py3ClassCreate (_shortest_path.c:20539)
==10278==    by 0x15F2CEC2: init_shortest_path (_shortest_path.c:18046)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate
   fun:init_shortest_path
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,381 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x16A7A089: init_iterative (_iterativemodule.c:5754)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_iterative
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,382 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x17A471C9: init_arpack (_arpackmodule.c:4860)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_arpack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,383 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x17CDA819: initminpack2 (minpack2module.c:705)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initminpack2
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,384 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x17EE4F99: init_lbfgsb (_lbfgsbmodule.c:809)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_lbfgsb
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,385 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1830CCD9: init_cobyla (_cobylamodule.c:758)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_cobyla
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,386 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1852B819: init_slsqp (_slsqpmodule.c:672)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_slsqp
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,387 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x18746184: init_minpack (_minpackmodule.c:58)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_minpack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,388 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x18FFE7D9: init_nnls (_nnlsmodule.c:480)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_nnls
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,389 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1924DB5B: init_fitpack (_fitpackmodule.c:1515)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_fitpack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,390 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x194943A9: initdfitpack (dfitpackmodule.c:6863)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initdfitpack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,391 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2EB48D: initqhull (qhull.c:45829)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,392 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2EB861: initqhull (qhull.c:45944)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,393 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2EC00E: initqhull (qhull.c:46193)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,394 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2EC5C8: initqhull (qhull.c:46360)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,395 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2ECB28: initqhull (qhull.c:46515)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,396 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2ED088: initqhull (qhull.c:46670)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,397 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x19BDEDB2: __Pyx_Py3ClassCreate.clone.0 (interpnd.c:29741)
==10278==    by 0x19BFC74C: initinterpnd (interpnd.c:26133)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.0
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,398 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x19BDEDB2: __Pyx_Py3ClassCreate.clone.0 (interpnd.c:29741)
==10278==    by 0x19BFCDED: initinterpnd (interpnd.c:26240)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.0
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,399 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x19BDEDB2: __Pyx_Py3ClassCreate.clone.0 (interpnd.c:29741)
==10278==    by 0x19BFCF71: initinterpnd (interpnd.c:26264)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.0
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,400 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x19BDEDB2: __Pyx_Py3ClassCreate.clone.0 (interpnd.c:29741)
==10278==    by 0x19BFD627: initinterpnd (interpnd.c:26371)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.0
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,401 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1B48DB59: initstatlib (statlibmodule.c:630)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initstatlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,402 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1B6DA449: initmvn (mvnmodule.c:680)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initmvn
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,403 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1C62AE59: init_fftpack (_fftpackmodule.c:3600)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:init_fftpack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,404 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F44E04: PyErr_NewException (errors.c:616)
==10278==    by 0x1C8BF299: initconvolve (convolvemodule.c:978)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyErr_NewException
   fun:initconvolve
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 944 bytes in 1 blocks are still reachable in loss record 1,405 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1CF93337: __Pyx_Py3ClassCreate (_ni_label.c:31166)
==10278==    by 0x1CF93337: init_ni_label (_ni_label.c:28351)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 960 bytes in 40 blocks are still reachable in loss record 1,406 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE55249D: ERR_load_PKCS7_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA839: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_PKCS7_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 968 bytes in 11 blocks are still reachable in loss record 1,407 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x400B92B: add_dependency (dl-lookup.c:729)
==10278==    by 0x400B92B: _dl_lookup_symbol_x (dl-lookup.c:929)
==10278==    by 0x400C8DC: elf_machine_rela (dl-machine.h:325)
==10278==    by 0x400C8DC: elf_dynamic_do_Rela (do-rel.h:137)
==10278==    by 0x400C8DC: _dl_relocate_object (dl-reloc.c:259)
==10278==    by 0x4015C40: dl_open_worker (dl-open.c:435)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278==    by 0x4F4FA67: _PyImport_LoadDynamicModule (importdl.c:42)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:add_dependency
   fun:_dl_lookup_symbol_x
   fun:elf_machine_rela
   fun:elf_dynamic_do_Rela
   fun:_dl_relocate_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
   fun:_PyImport_LoadDynamicModule
}
==10278== 984 bytes in 41 blocks are still reachable in loss record 1,408 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA859: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 990 bytes in 1 blocks are still reachable in loss record 1,409 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x4ECE65B: _Py_ReadyTypes (object.c:2204)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,410 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x4EAFAE5: PyFloat_GetInfo (floatobject.c:120)
==10278==    by 0x4F605CE: _PySys_Init (sysmodule.c:1452)
==10278==    by 0x4F59BBC: Py_InitializeEx (pythonrun.c:241)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:PyFloat_GetInfo
   fun:_PySys_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,411 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F50767: r_object (marshal.c:689)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,412 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F53210: PyModule_AddIntConstant (modsupport.c:651)
==10278==    by 0x632CDAA: init_locale (_localemodule.c:748)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:PyModule_AddIntConstant
   fun:init_locale
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,413 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F539F6: do_mkvalue (modsupport.c:369)
==10278==    by 0x4F541B7: do_mktuple (modsupport.c:299)
==10278==    by 0x4F54302: va_build_value (modsupport.c:564)
==10278==    by 0x4F5472E: Py_BuildValue (modsupport.c:511)
==10278==    by 0x4F87396: read_directory (zipimport.c:843)
==10278==    by 0x4F87396: zipimporter_init (zipimport.c:129)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F4A501: get_path_importer (import.c:1257)
==10278==    by 0x4F4C213: find_module (import.c:1481)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:do_mkvalue
   fun:do_mktuple
   fun:va_build_value
   fun:Py_BuildValue
   fun:read_directory
   fun:zipimporter_init
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:get_path_importer
   fun:find_module
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,414 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F5C87D: update_symbols (symtable.c:543)
==10278==    by 0x4F5C87D: analyze_block (symtable.c:712)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:update_symbols
   fun:analyze_block
   fun:symtable_analyze
   fun:PySymtable_Build
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,415 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F50767: r_object (marshal.c:689)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,416 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F5C9E5: update_symbols (symtable.c:553)
==10278==    by 0x4F5C9E5: analyze_block (symtable.c:712)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:update_symbols
   fun:analyze_block
   fun:analyze_child_block
   fun:analyze_block
   fun:analyze_child_block
   fun:analyze_block
   fun:symtable_analyze
   fun:PySymtable_Build
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,417 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F50767: r_object (marshal.c:689)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,418 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,419 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F5C87D: update_symbols (symtable.c:543)
==10278==    by 0x4F5C87D: analyze_block (symtable.c:712)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F57993: run_mod (pythonrun.c:1373)
==10278==    by 0x4F57993: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:update_symbols
   fun:analyze_block
   fun:analyze_child_block
   fun:analyze_block
   fun:symtable_analyze
   fun:PySymtable_Build
   fun:PyAST_Compile
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,420 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x112B46FC: init_curses (_cursesmodule.c:2902)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:init_curses
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,421 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x68128DA: time_time (timemodule.c:136)
==10278==    by 0x4F36F99: call_function (ceval.c:4336)
==10278==    by 0x4F36F99: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:time_time
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,422 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F784E3: _pystat_fromstructstat (posixmodule.c:1524)
==10278==    by 0x4F787D2: posix_do_stat (posixmodule.c:1681)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:_pystat_fromstructstat
   fun:posix_do_stat
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,423 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F5C9E5: update_symbols (symtable.c:553)
==10278==    by 0x4F5C9E5: analyze_block (symtable.c:712)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:update_symbols
   fun:analyze_block
   fun:analyze_child_block
   fun:analyze_block
   fun:symtable_analyze
   fun:PySymtable_Build
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,424 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F5C87D: update_symbols (symtable.c:543)
==10278==    by 0x4F5C87D: analyze_block (symtable.c:712)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F2DEA3: builtin_compile (bltinmodule.c:570)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:update_symbols
   fun:analyze_block
   fun:analyze_child_block
   fun:analyze_block
   fun:symtable_analyze
   fun:PySymtable_Build
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:builtin_compile
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,425 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x4F505BF: r_object (marshal.c:736)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,426 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x4F31018: PyEval_EvalFrameEx (ceval.c:1336)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,427 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x4F505BF: r_object (marshal.c:736)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
}
==10278== 992 bytes in 1 blocks are still reachable in loss record 1,428 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F50767: r_object (marshal.c:689)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
}
==10278== 1,008 bytes in 6 blocks are still reachable in loss record 1,429 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F33502: PyEval_EvalFrameEx (ceval.c:2466)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 1,008 bytes in 42 blocks are still reachable in loss record 1,430 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4AE0BD: ERR_load_BN_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7DD: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_BN_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,008 bytes in 42 blocks are still reachable in loss record 1,431 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE52F56D: ERR_load_PEM_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7FE: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_PEM_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,024 bytes in 1 blocks are still reachable in loss record 1,432 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xFD62335: __pyx_insert_code_object (mtrand.c:45910)
==10278==    by 0xFD62335: __Pyx_AddTraceback (mtrand.c:46012)
==10278==    by 0xFD92A24: __pyx_pf_6mtrand_11RandomState_4seed (mtrand.c:13919)
==10278==    by 0xFD92A24: __pyx_pw_6mtrand_11RandomState_5seed (mtrand.c:13502)
==10278==    by 0xFD6135E: __Pyx_PyObject_Call (mtrand.c:44507)
==10278==    by 0xFD61EA3: __Pyx__PyObject_CallOneArg (mtrand.c:44546)
==10278==    by 0xFD61EA3: __Pyx_PyObject_CallOneArg (mtrand.c:44569)
==10278==    by 0xFD65A9F: __pyx_pf_6mtrand_11RandomState___init__ (mtrand.c:13316)
==10278==    by 0xFD65A9F: __pyx_pw_6mtrand_11RandomState_1__init__ (mtrand.c:13223)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:__pyx_insert_code_object
   fun:__Pyx_AddTraceback
   fun:__pyx_pf_6mtrand_11RandomState_4seed
   fun:__pyx_pw_6mtrand_11RandomState_5seed
   fun:__Pyx_PyObject_Call
   fun:__Pyx__PyObject_CallOneArg
   fun:__Pyx_PyObject_CallOneArg
   fun:__pyx_pf_6mtrand_11RandomState___init__
   fun:__pyx_pw_6mtrand_11RandomState_1__init__
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 1,024 bytes in 2 blocks are still reachable in loss record 1,433 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x6C1DEF9: newblock (_collectionsmodule.c:74)
==10278==    by 0x6C1DEF9: deque_new (_collectionsmodule.c:137)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4E984E5: PyInstance_New (classobject.c:581)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:newblock
   fun:deque_new
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyInstance_New
}
==10278== 1,047 bytes in 12 blocks are still reachable in loss record 1,434 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x400C033: _dl_new_object (dl-object.c:165)
==10278==    by 0x4006534: _dl_map_object_from_fd (dl-load.c:1006)
==10278==    by 0x4008C34: _dl_map_object (dl-load.c:2476)
==10278==    by 0x400DDEF: openaux (dl-deps.c:63)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x400E40A: _dl_map_object_deps (dl-deps.c:254)
==10278==    by 0x401582E: dl_open_worker (dl-open.c:280)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
}
==10278== 1,064 bytes in 2 blocks are still reachable in loss record 1,435 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
}
==10278== 1,072 bytes in 2 blocks are possibly lost in loss record 1,436 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 1,080 bytes in 8 blocks are still reachable in loss record 1,437 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F33502: PyEval_EvalFrameEx (ceval.c:2466)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 1,120 bytes in 1 blocks are still reachable in loss record 1,438 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x19BDEDB2: __Pyx_Py3ClassCreate.clone.0 (interpnd.c:29741)
==10278==    by 0x19BFCDED: initinterpnd (interpnd.c:26240)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.0
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 1,128 bytes in 47 blocks are still reachable in loss record 1,439 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE53909D: ERR_load_X509_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA809: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_X509_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,136 bytes in 2 blocks are possibly lost in loss record 1,440 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 1,152 bytes in 3 blocks are still reachable in loss record 1,441 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EC8E20: _PyDict_NewPresized (dictobject.c:690)
==10278==    by 0x4F3310E: PyEval_EvalFrameEx (ceval.c:2502)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyDict_NewPresized
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 1,168 bytes in 2 blocks are possibly lost in loss record 1,442 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
}
==10278== 1,176 bytes in 49 blocks are still reachable in loss record 1,443 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4E3BFD: ERR_load_DSO_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA84E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_DSO_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,178 bytes in 2 blocks are still reachable in loss record 1,444 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50BD5: r_object (marshal.c:1021)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:load_package
}
==10278== 1,224 bytes in 51 blocks are still reachable in loss record 1,445 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA824: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 1,224 bytes in 51 blocks are still reachable in loss record 1,446 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE56888D: ERR_load_TS_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA854: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_TS_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,280 bytes in 2 blocks are still reachable in loss record 1,447 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 1,280 bytes in 2 blocks are still reachable in loss record 1,448 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 1,280 bytes in 2 blocks are possibly lost in loss record 1,449 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 1,294 bytes in 2 blocks are still reachable in loss record 1,450 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x702FBAE: inititertools (itertoolsmodule.c:4126)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:inititertools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 1,312 bytes in 41 blocks are still reachable in loss record 1,451 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6B524: PyThread_allocate_lock (thread_pthread.h:266)
==10278==    by 0x1091ACE4: _setup_ssl_threads (_ssl.c:4020)
==10278==    by 0x1091ACE4: init_ssl (_ssl.c:4095)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyThread_allocate_lock
   fun:_setup_ssl_threads
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 1,320 bytes in 55 blocks are still reachable in loss record 1,452 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA839: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 1,326 bytes in 1 blocks are still reachable in loss record 1,453 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0xD935B45: init_io (_iomodule.c:711)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 1,358 bytes in 2 blocks are still reachable in loss record 1,454 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
}
==10278== 1,362 bytes in 1 blocks are still reachable in loss record 1,455 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0xD9358A3: init_io (_iomodule.c:675)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 1,364 bytes in 1 blocks are still reachable in loss record 1,456 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50BD5: r_object (marshal.c:1021)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
}
==10278== 1,372 bytes in 1 blocks are still reachable in loss record 1,457 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x19E62BB0: initckdtree (ckdtree.cxx:20218)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:initckdtree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 1,440 bytes in 36 blocks are still reachable in loss record 1,458 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBC530: list_resize (listobject.c:62)
==10278==    by 0x4EBC530: listextend (listobject.c:827)
==10278==    by 0x4EBC71F: list_init (listobject.c:2462)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:listextend
   fun:list_init
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==10278== 1,456 bytes in 2 blocks are possibly lost in loss record 1,459 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:PyObject_Realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 1,480 bytes in 2 blocks are still reachable in loss record 1,460 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== 1,488 bytes in 7 blocks are still reachable in loss record 1,461 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x7CAC59F: prepare_s (_struct.c:1287)
==10278==    by 0x7CAC59F: s_init (_struct.c:1395)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x7CAC852: cache_struct (_struct.c:1830)
==10278==    by 0x7CACAD8: calcsize (_struct.c:1858)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:prepare_s
   fun:s_init
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:cache_struct
   fun:calcsize
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 1,504 bytes in 47 blocks are still reachable in loss record 1,462 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
}
==10278== 1,509 bytes in 1 blocks are still reachable in loss record 1,463 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x11706886: _nc_read_termtype (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x117072BE: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11707480: _nc_read_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701118: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701461: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_nc_read_termtype
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_read_entry
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 1,512 bytes in 63 blocks are still reachable in loss record 1,464 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4D2A3D: ERR_load_RSA_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7E2: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_RSA_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,520 bytes in 1 blocks are still reachable in loss record 1,465 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x126DD147: __Pyx_Py3ClassCreate (_ufuncs.c:86851)
==10278==    by 0x126DD147: init_ufuncs (_ufuncs.c:39578)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate
   fun:init_ufuncs
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 1,536 bytes in 1 blocks are still reachable in loss record 1,466 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4F36F99: call_function (ceval.c:4336)
==10278==    by 0x4F36F99: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,536 bytes in 2 blocks are still reachable in loss record 1,467 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4EF5A9C: type_getattro (typeobject.c:2621)
==10278==    by 0x4F2C5D0: builtin_getattr (bltinmodule.c:848)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:type_getattro
   fun:builtin_getattr
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
}
==10278== 1,536 bytes in 2 blocks are still reachable in loss record 1,468 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4F37FA3: do_call (ceval.c:4566)
==10278==    by 0x4F37FA3: call_function (ceval.c:4374)
==10278==    by 0x4F37FA3: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 1,536 bytes in 2 blocks are still reachable in loss record 1,469 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x702FBAE: inititertools (itertoolsmodule.c:4126)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:inititertools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 1,536 bytes in 2 blocks are still reachable in loss record 1,470 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 1,536 bytes in 2 blocks are still reachable in loss record 1,471 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x7A8F009: PyCSimpleType_new (_ctypes.c:2088)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 1,536 bytes in 2 blocks are still reachable in loss record 1,472 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
}
==10278== 1,536 bytes in 2 blocks are still reachable in loss record 1,473 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F34674: PyEval_EvalFrameEx (ceval.c:2515)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,536 bytes in 2 blocks are still reachable in loss record 1,474 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==10278== 1,536 bytes in 2 blocks are still reachable in loss record 1,475 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F34674: PyEval_EvalFrameEx (ceval.c:2515)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,556 bytes in 1 blocks are still reachable in loss record 1,476 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x126DB43A: __Pyx_InitStrings (_ufuncs.c:88687)
==10278==    by 0x126DB43A: __Pyx_InitGlobals (_ufuncs.c:39282)
==10278==    by 0x126DB43A: init_ufuncs (_ufuncs.c:39366)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:init_ufuncs
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 1,584 bytes in 66 blocks are still reachable in loss record 1,477 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE543FFD: ERR_load_X509V3_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA83E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_X509V3_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,608 bytes in 67 blocks are still reachable in loss record 1,478 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7E2: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 1,656 bytes in 69 blocks are still reachable in loss record 1,479 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA83E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 1,728 bytes in 72 blocks are still reachable in loss record 1,480 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7EC: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 1,792 bytes in 6 blocks are still reachable in loss record 1,481 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x401603E: dl_open_worker (dl-open.c:485)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278==    by 0x4F4FA67: _PyImport_LoadDynamicModule (importdl.c:42)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 1,823 bytes in 1 blocks are still reachable in loss record 1,482 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50BD5: r_object (marshal.c:1021)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,888 bytes in 2 blocks are still reachable in loss record 1,483 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8FA35: PyCPointerType_new (_ctypes.c:990)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x7A9425F: POINTER (callproc.c:1851)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:PyCPointerType_new
   fun:type_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:POINTER
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 1,896 bytes in 79 blocks are still reachable in loss record 1,484 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505D5D: ERR_load_EVP_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7EC: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_EVP_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 1,912 bytes in 3 blocks are possibly lost in loss record 1,485 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
}
==10278== 1,920 bytes in 80 blocks are still reachable in loss record 1,486 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE562AED: ERR_load_CMS_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_CMS_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 1,937 bytes in 1 blocks are still reachable in loss record 1,487 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x4EF5A9C: type_getattro (typeobject.c:2621)
==10278==    by 0x4F331B4: PyEval_EvalFrameEx (ceval.c:2543)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:type_getattro
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== 1,960 bytes in 9 blocks are still reachable in loss record 1,488 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
   fun:PyObject_Call
}
==10278== 1,984 bytes in 2 blocks are still reachable in loss record 1,489 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x4F505BF: r_object (marshal.c:736)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 1,984 bytes in 2 blocks are still reachable in loss record 1,490 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F5B7B5: ste_new (symtable.c:27)
==10278==    by 0x4F5B9B0: symtable_enter_block (symtable.c:850)
==10278==    by 0x4F5E3B9: symtable_visit_stmt (symtable.c:1011)
==10278==    by 0x4F5E47F: symtable_visit_stmt (symtable.c:1031)
==10278==    by 0x4F5E7BF: PySymtable_Build (symtable.c:242)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:ste_new
   fun:symtable_enter_block
   fun:symtable_visit_stmt
   fun:symtable_visit_stmt
   fun:PySymtable_Build
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
}
==10278== 1,984 bytes in 2 blocks are still reachable in loss record 1,491 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F5C87D: update_symbols (symtable.c:543)
==10278==    by 0x4F5C87D: analyze_block (symtable.c:712)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:update_symbols
   fun:analyze_block
   fun:symtable_analyze
   fun:PySymtable_Build
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
}
==10278== 1,992 bytes in 83 blocks are still reachable in loss record 1,492 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 1,993 bytes in 1 blocks are still reachable in loss record 1,493 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0xFD988FC: initmtrand (mtrand.c:42764)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:initmtrand
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 2,048 bytes in 1 blocks are still reachable in loss record 1,494 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE4507EE: CRYPTO_realloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F58E6: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE453DA8: OBJ_NAME_add (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE501C16: EVP_add_cipher (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE5064D6: OpenSSL_add_all_ciphers (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE505DCD: OPENSSL_add_all_algorithms_noconf (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2F9: init_ssl (_ssl.c:4103)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:CRYPTO_realloc
   fun:lh_insert
   fun:OBJ_NAME_add
   fun:EVP_add_cipher
   fun:OpenSSL_add_all_ciphers
   fun:OPENSSL_add_all_algorithms_noconf
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 2,113 bytes in 3 blocks are still reachable in loss record 1,495 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50C9F: r_object (marshal.c:1046)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
}
==10278== 2,160 bytes in 4 blocks are possibly lost in loss record 1,496 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== 2,184 bytes in 3 blocks are possibly lost in loss record 1,497 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 2,184 bytes in 3 blocks are possibly lost in loss record 1,498 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:PyObject_Realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 2,245 bytes in 1 blocks are still reachable in loss record 1,499 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 2,282 bytes in 1 blocks are still reachable in loss record 1,500 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x19BDEDB2: __Pyx_Py3ClassCreate.clone.0 (interpnd.c:29741)
==10278==    by 0x19BFD627: initinterpnd (interpnd.c:26371)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.0
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 2,291 bytes in 2 blocks are still reachable in loss record 1,501 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 2,304 bytes in 2 blocks are still reachable in loss record 1,502 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4F36F99: call_function (ceval.c:4336)
==10278==    by 0x4F36F99: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== 2,304 bytes in 3 blocks are still reachable in loss record 1,503 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
}
==10278== 2,304 bytes in 3 blocks are still reachable in loss record 1,504 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EF4A4F: type_new (typeobject.c:2159)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_new
   fun:type_call
}
==10278== 2,304 bytes in 3 blocks are still reachable in loss record 1,505 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 2,304 bytes in 3 blocks are still reachable in loss record 1,506 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F32EAB: PyEval_EvalFrameEx (ceval.c:1909)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 2,304 bytes in 3 blocks are still reachable in loss record 1,507 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4F36F99: call_function (ceval.c:4336)
==10278==    by 0x4F36F99: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 2,304 bytes in 6 blocks are still reachable in loss record 1,508 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x7A8E7FA: PyCFuncPtrType_new (_ctypes.c:2412)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 2,336 bytes in 4 blocks are still reachable in loss record 1,509 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 2,447 bytes in 3 blocks are still reachable in loss record 1,510 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F5578B: PyCode_Optimize (peephole.c:649)
==10278==    by 0x4F3BA35: makecode (compile.c:3844)
==10278==    by 0x4F3BA35: assemble (compile.c:3960)
==10278==    by 0x4F4000C: compiler_function (compile.c:1381)
==10278==    by 0x4F3FC2D: compiler_body (compile.c:1168)
==10278==    by 0x4F3FC2D: compiler_class (compile.c:1435)
==10278==    by 0x4F424ED: compiler_body (compile.c:1168)
==10278==    by 0x4F424ED: compiler_mod (compile.c:1188)
==10278==    by 0x4F424ED: PyAST_Compile (compile.c:292)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:PyCode_Optimize
   fun:makecode
   fun:assemble
   fun:compiler_function
   fun:compiler_body
   fun:compiler_class
   fun:compiler_body
   fun:compiler_mod
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
}
==10278== 2,560 bytes in 2 blocks are still reachable in loss record 1,511 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED26BE: set_table_resize (setobject.c:316)
==10278==    by 0x4ED47E8: set_update_internal (setobject.c:967)
==10278==    by 0x4ED56B8: set_init (setobject.c:2007)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:set_table_resize
   fun:set_update_internal
   fun:set_init
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 2,720 bytes in 2 blocks are still reachable in loss record 1,512 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 2,880 bytes in 120 blocks are still reachable in loss record 1,513 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA80E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 2,904 bytes in 121 blocks are still reachable in loss record 1,514 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE52957D: ERR_load_ASN1_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA80E: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_ASN1_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 2,912 bytes in 4 blocks are possibly lost in loss record 1,515 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 2,976 bytes in 3 blocks are still reachable in loss record 1,516 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x4F505BF: r_object (marshal.c:736)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
}
==10278== 2,976 bytes in 3 blocks are still reachable in loss record 1,517 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F5C87D: update_symbols (symtable.c:543)
==10278==    by 0x4F5C87D: analyze_block (symtable.c:712)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:update_symbols
   fun:analyze_block
   fun:analyze_child_block
   fun:analyze_block
   fun:symtable_analyze
   fun:PySymtable_Build
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
}
==10278== 2,976 bytes in 3 blocks are still reachable in loss record 1,518 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F5C9E5: update_symbols (symtable.c:553)
==10278==    by 0x4F5C9E5: analyze_block (symtable.c:712)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:update_symbols
   fun:analyze_block
   fun:analyze_child_block
   fun:analyze_block
   fun:analyze_child_block
   fun:analyze_block
   fun:symtable_analyze
   fun:PySymtable_Build
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
}
==10278== 3,027 bytes in 1 blocks are still reachable in loss record 1,519 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EE1392: PyString_Format (stringobject.c:4687)
==10278==    by 0x4F363BA: PyEval_EvalFrameEx (ceval.c:1450)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_PyString_Resize
   fun:PyString_Format
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 3,048 bytes in 127 blocks are still reachable in loss record 1,520 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8469: ERR_load_ERR_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA7D8: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_ERR_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 3,056 bytes in 4 blocks are still reachable in loss record 1,521 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x13916652: fortran_doc (fortranobject.c:229)
==10278==    by 0x13916652: fortran_getattr (fortranobject.c:302)
==10278==    by 0x4F331B4: PyEval_EvalFrameEx (ceval.c:2543)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF42AB: slot_tp_call (typeobject.c:5546)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:fortran_doc
   fun:fortran_getattr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,522 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4ECE2FF: _Py_ReadyTypes (object.c:2071)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,523 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE327: _Py_ReadyTypes (object.c:2077)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,524 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE33B: _Py_ReadyTypes (object.c:2080)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,525 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4EEED37: PyType_Ready (typeobject.c:4102)
==10278==    by 0x4ECE34F: _Py_ReadyTypes (object.c:2083)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,526 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4ECE363: _Py_ReadyTypes (object.c:2086)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,527 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECEE7: add_tp_new_wrapper (typeobject.c:4944)
==10278==    by 0x4EECEE7: add_operators (typeobject.c:6537)
==10278==    by 0x4EECEE7: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE377: _Py_ReadyTypes (object.c:2089)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_tp_new_wrapper
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,528 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE38B: _Py_ReadyTypes (object.c:2092)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,529 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4ECE417: _Py_ReadyTypes (object.c:2113)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,530 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE42B: _Py_ReadyTypes (object.c:2116)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,531 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4ECE43F: _Py_ReadyTypes (object.c:2120)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,532 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE47B: _Py_ReadyTypes (object.c:2131)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,533 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE48F: _Py_ReadyTypes (object.c:2135)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,534 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE4B7: _Py_ReadyTypes (object.c:2141)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,535 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECEE7: add_tp_new_wrapper (typeobject.c:4944)
==10278==    by 0x4EECEE7: add_operators (typeobject.c:6537)
==10278==    by 0x4EECEE7: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE4DF: _Py_ReadyTypes (object.c:2147)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_tp_new_wrapper
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,536 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x4ECE507: _Py_ReadyTypes (object.c:2153)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,537 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEDC2B: PyType_Ready (typeobject.c:4211)
==10278==    by 0x4ECE51B: _Py_ReadyTypes (object.c:2156)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,538 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4ECE557: _Py_ReadyTypes (object.c:2165)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,539 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x4ECE5A7: _Py_ReadyTypes (object.c:2177)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,540 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4ECE5CF: _Py_ReadyTypes (object.c:2183)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,541 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x4ECE61F: _Py_ReadyTypes (object.c:2195)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,542 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4ECE65B: _Py_ReadyTypes (object.c:2204)
==10278==    by 0x4F59B23: Py_InitializeEx (pythonrun.c:205)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:_Py_ReadyTypes
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,543 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EE37D4: PyStructSequence_InitType (structseq.c:538)
==10278==    by 0x4EBD152: _PyLong_Init (longobject.c:4405)
==10278==    by 0x4F59B44: Py_InitializeEx (pythonrun.c:213)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyStructSequence_InitType
   fun:_PyLong_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,544 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EE3765: PyStructSequence_InitType (structseq.c:523)
==10278==    by 0x4EAEF0A: _PyFloat_Init (floatobject.c:2211)
==10278==    by 0x4F59B64: Py_InitializeEx (pythonrun.c:219)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:PyStructSequence_InitType
   fun:_PyFloat_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,545 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F53478: Py_InitModule4_64 (modsupport.c:86)
==10278==    by 0x4F60046: _PySys_Init (sysmodule.c:1363)
==10278==    by 0x4F59BBC: Py_InitializeEx (pythonrun.c:241)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:Py_InitModule4_64
   fun:_PySys_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,546 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EE3765: PyStructSequence_InitType (structseq.c:523)
==10278==    by 0x4F60C57: _PySys_Init (sysmodule.c:1494)
==10278==    by 0x4F59BBC: Py_InitializeEx (pythonrun.c:241)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:PyStructSequence_InitType
   fun:_PySys_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,547 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EE3765: PyStructSequence_InitType (structseq.c:523)
==10278==    by 0x4F60C85: _PySys_Init (sysmodule.c:1502)
==10278==    by 0x4F59BBC: Py_InitializeEx (pythonrun.c:241)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:PyStructSequence_InitType
   fun:_PySys_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,548 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EE3765: PyStructSequence_InitType (structseq.c:523)
==10278==    by 0x4F7724E: initposix (posixmodule.c:9483)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:PyStructSequence_InitType
   fun:initposix
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,549 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EE3765: PyStructSequence_InitType (structseq.c:523)
==10278==    by 0x4F7728B: initposix (posixmodule.c:9488)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:PyStructSequence_InitType
   fun:initposix
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,550 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,551 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F35149: import_all_from (ceval.c:4926)
==10278==    by 0x4F35149: PyEval_EvalFrameEx (ceval.c:2643)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:import_all_from
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,552 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EE3765: PyStructSequence_InitType (structseq.c:523)
==10278==    by 0x6812832: inittime (timemodule.c:883)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:PyStructSequence_InitType
   fun:inittime
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,553 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x6C1C765: init_collections (_collectionsmodule.c:1744)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_collections
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,554 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F530AC: PyModule_AddObject (modsupport.c:642)
==10278==    by 0x702FB9A: inititertools (itertoolsmodule.c:4131)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyModule_AddObject
   fun:inititertools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,555 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F3279F: PyEval_EvalFrameEx (ceval.c:2275)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,556 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F35149: import_all_from (ceval.c:4926)
==10278==    by 0x4F35149: PyEval_EvalFrameEx (ceval.c:2643)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:import_all_from
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,557 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xCADE5E1: initdatetime (datetimemodule.c:4776)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initdatetime
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,558 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xCADE5F5: initdatetime (datetimemodule.c:4778)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initdatetime
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,559 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0xCADE609: initdatetime (datetimemodule.c:4780)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:initdatetime
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,560 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0xCADE61D: initdatetime (datetimemodule.c:4782)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:initdatetime
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,561 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC280: setup_scalartypes (multiarraymodule.c:4379)
==10278==    by 0x81EC280: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,562 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC2A2: setup_scalartypes (multiarraymodule.c:4380)
==10278==    by 0x81EC2A2: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,563 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC2C4: setup_scalartypes (multiarraymodule.c:4385)
==10278==    by 0x81EC2C4: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,564 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC317: setup_scalartypes (multiarraymodule.c:4388)
==10278==    by 0x81EC317: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,565 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC36A: setup_scalartypes (multiarraymodule.c:4391)
==10278==    by 0x81EC36A: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,566 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC3D0: setup_scalartypes (multiarraymodule.c:4407)
==10278==    by 0x81EC3D0: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,567 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC3F2: setup_scalartypes (multiarraymodule.c:4408)
==10278==    by 0x81EC3F2: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,568 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC414: setup_scalartypes (multiarraymodule.c:4409)
==10278==    by 0x81EC414: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,569 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC436: setup_scalartypes (multiarraymodule.c:4410)
==10278==    by 0x81EC436: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,570 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC458: setup_scalartypes (multiarraymodule.c:4411)
==10278==    by 0x81EC458: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,571 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC47A: setup_scalartypes (multiarraymodule.c:4413)
==10278==    by 0x81EC47A: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,572 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC49C: setup_scalartypes (multiarraymodule.c:4414)
==10278==    by 0x81EC49C: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,573 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC4E4: setup_scalartypes (multiarraymodule.c:4415)
==10278==    by 0x81EC4E4: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,574 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC528: setup_scalartypes (multiarraymodule.c:4418)
==10278==    by 0x81EC528: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,575 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4EECD66: add_operators (typeobject.c:6529)
==10278==    by 0x4EECD66: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC570: setup_scalartypes (multiarraymodule.c:4419)
==10278==    by 0x81EC570: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,576 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECEE7: add_tp_new_wrapper (typeobject.c:4944)
==10278==    by 0x4EECEE7: add_operators (typeobject.c:6537)
==10278==    by 0x4EECEE7: PyType_Ready (typeobject.c:4138)
==10278==    by 0x81EC695: setup_scalartypes (multiarraymodule.c:4427)
==10278==    by 0x81EC695: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_tp_new_wrapper
   fun:add_operators
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,577 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x81EC731: initmultiarray (multiarraymodule.c:4595)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,578 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x81EC753: initmultiarray (multiarraymodule.c:4600)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,579 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x81EC767: initmultiarray (multiarraymodule.c:4603)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,580 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,581 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EE3765: PyStructSequence_InitType (structseq.c:523)
==10278==    by 0x4F7A0D2: initpwd (pwdmodule.c:200)
==10278==    by 0x4F4B12F: init_builtin (import.c:2021)
==10278==    by 0x4F4D93B: load_module (import.c:1950)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:PyStructSequence_InitType
   fun:initpwd
   fun:init_builtin
   fun:load_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,582 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEDC2B: PyType_Ready (typeobject.c:4211)
==10278==    by 0x4EE3765: PyStructSequence_InitType (structseq.c:523)
==10278==    by 0xD6E3EDF: initgrp (grpmodule.c:201)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:PyStructSequence_InitType
   fun:initgrp
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,583 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xD9358A3: init_io (_iomodule.c:675)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,584 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xD9359D1: init_io (_iomodule.c:687)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,585 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0xD935A4D: init_io (_iomodule.c:695)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,586 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xD935B07: init_io (_iomodule.c:707)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,587 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0xD935B45: init_io (_iomodule.c:711)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:init_io
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,588 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,589 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0xFD988FC: initmtrand (mtrand.c:42764)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initmtrand
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,590 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0xFD99F7F: initmtrand (mtrand.c:43398)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:initmtrand
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,591 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x4EF5A9C: type_getattro (typeobject.c:2621)
==10278==    by 0x4F331B4: PyEval_EvalFrameEx (ceval.c:2543)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:type_getattro
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,592 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,593 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,594 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F2A093: builtin_setattr (bltinmodule.c:1153)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:builtin_setattr
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,595 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F3279F: PyEval_EvalFrameEx (ceval.c:2275)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,596 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F32EAB: PyEval_EvalFrameEx (ceval.c:1909)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,597 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,598 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F86A1D: zipimporter_load_module (zipimport.c:360)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,599 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F86A1D: zipimporter_load_module (zipimport.c:360)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:import_submodule
   fun:load_next
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,600 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x124B0136: init_ccallback_c (_ccallback_c.c:4325)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_ccallback_c
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,601 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x126DC467: __Pyx_FetchCommonType (_ufuncs.c:86193)
==10278==    by 0x126DC467: __pyx_CyFunction_init (_ufuncs.c:86760)
==10278==    by 0x126DC467: init_ufuncs (_ufuncs.c:39330)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:__Pyx_FetchCommonType
   fun:__pyx_CyFunction_init
   fun:init_ufuncs
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,602 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x4EEED37: PyType_Ready (typeobject.c:4102)
==10278==    by 0x13DF0413: __Pyx_FetchCommonType (_solve_toeplitz.c:23433)
==10278==    by 0x13DF81CF: __pyx_FusedFunction_init (_solve_toeplitz.c:24349)
==10278==    by 0x13DF81CF: init_solve_toeplitz (_solve_toeplitz.c:20697)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:PyType_Ready
   fun:__Pyx_FetchCommonType
   fun:__pyx_FusedFunction_init
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,603 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x13DF0413: __Pyx_FetchCommonType (_solve_toeplitz.c:23433)
==10278==    by 0x13DF81CF: __pyx_FusedFunction_init (_solve_toeplitz.c:24349)
==10278==    by 0x13DF81CF: init_solve_toeplitz (_solve_toeplitz.c:20697)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:__Pyx_FetchCommonType
   fun:__pyx_FusedFunction_init
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,604 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x13DF046E: __Pyx_SetVtable (_solve_toeplitz.c:23386)
==10278==    by 0x13DF8F28: init_solve_toeplitz (_solve_toeplitz.c:20777)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_solve_toeplitz
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,605 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F53478: Py_InitModule4_64 (modsupport.c:86)
==10278==    by 0x1427DE79: initcython_blas (cython_blas.c:25961)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:Py_InitModule4_64
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,606 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1427562E: __Pyx_SetVtable (cython_blas.c:28316)
==10278==    by 0x1427FC83: initcython_blas (cython_blas.c:26169)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E8715B: call_function_tail (abstract.c:2579)
==10278==    by 0x4E8715B: PyObject_CallFunction (abstract.c:2603)
==10278==    by 0x4F4EFBC: PyImport_Import (import.c:2911)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:initcython_blas
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallFunction
   fun:PyImport_Import
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,607 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x15CAB28E: __Pyx_SetVtable (_csparsetools.c:36939)
==10278==    by 0x15CB71DF: init_csparsetools (_csparsetools.c:29882)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,608 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x15CB7D52: init_csparsetools (_csparsetools.c:30255)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,609 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x15CBC8CE: init_csparsetools (_csparsetools.c:33410)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_csparsetools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,610 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x165B20FE: __Pyx_SetVtable (_min_spanning_tree.c:21035)
==10278==    by 0x165B9D7F: init_min_spanning_tree (_min_spanning_tree.c:18722)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,611 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1682210E: __Pyx_SetVtable (_reordering.c:28974)
==10278==    by 0x16857FB7: init_reordering (_reordering.c:26273)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_reordering
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,612 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x16A7A0CD: init_iterative (_iterativemodule.c:5757)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:init_iterative
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,613 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F2A093: builtin_setattr (bltinmodule.c:1153)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:builtin_setattr
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,614 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x17A53513: PyFortranObject_New (fortranobject.c:69)
==10278==    by 0x17A47233: init_arpack (_arpackmodule.c:4879)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyFortranObject_New
   fun:init_arpack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,615 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x17A53513: PyFortranObject_New (fortranobject.c:69)
==10278==    by 0x17A47258: init_arpack (_arpackmodule.c:4880)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyFortranObject_New
   fun:init_arpack
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,616 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1896FA1E: __Pyx_SetVtable (_group_columns.c:21176)
==10278==    by 0x1897AB77: init_group_columns (_group_columns.c:18951)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_group_columns
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,617 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x18B9ABBE: __Pyx_SetVtable (givens_elimination.c:17383)
==10278==    by 0x18BA24D6: initgivens_elimination (givens_elimination.c:15182)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:initgivens_elimination
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,618 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x19706FFE: __Pyx_SetVtable (_bspl.c:24969)
==10278==    by 0x1971AB7A: init_bspl (_bspl.c:22226)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,619 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1998A86E: __Pyx_SetVtable (_ppoly.c:33671)
==10278==    by 0x199AC95B: init_ppoly (_ppoly.c:30942)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_ppoly
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,620 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x19BDE95E: __Pyx_SetVtable (interpnd.c:29011)
==10278==    by 0x19BFC06F: initinterpnd (interpnd.c:25985)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,621 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x19E62C55: initckdtree (ckdtree.cxx:20227)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:initckdtree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,622 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F3279F: PyEval_EvalFrameEx (ceval.c:2275)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,623 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1A2DD09E: __Pyx_SetVtable (qhull.c:49431)
==10278==    by 0x1A2EAEAA: initqhull (qhull.c:45663)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,624 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1A2ED0AA: initqhull (qhull.c:46672)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,625 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1A5FE8DE: __Pyx_SetVtable (_voronoi.c:20982)
==10278==    by 0x1A6063AA: init_voronoi (_voronoi.c:18590)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_voronoi
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,626 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1AA3DA3E: __Pyx_SetVtable (_hausdorff.c:20721)
==10278==    by 0x1AA45317: init_hausdorff (_hausdorff.c:18501)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_hausdorff
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,627 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1ACECB6E: __Pyx_SetVtable (_stats.c:36402)
==10278==    by 0x1AD07BE8: init_stats (_stats.c:32885)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_stats
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,628 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1BF7B67E: __Pyx_SetVtable (_max_len_seq_inner.c:19996)
==10278==    by 0x1BF82DF7: init_max_len_seq_inner (_max_len_seq_inner.c:17791)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_max_len_seq_inner
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,629 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1C1A573E: __Pyx_SetVtable (_upfirdn_apply.c:27649)
==10278==    by 0x1C1AE4B5: init_upfirdn_apply (_upfirdn_apply.c:25050)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_upfirdn_apply
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,072 bytes in 1 blocks are still reachable in loss record 1,630 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x1CF7D9AE: __Pyx_SetVtable (_ni_label.c:31058)
==10278==    by 0x1CF92E7C: init_ni_label (_ni_label.c:28283)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:__Pyx_SetVtable
   fun:init_ni_label
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 3,101 bytes in 4 blocks are still reachable in loss record 1,631 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 3,146 bytes in 1 blocks are still reachable in loss record 1,632 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2EC5C8: initqhull (qhull.c:46360)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 3,168 bytes in 5 blocks are possibly lost in loss record 1,633 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EE541E: PyTuple_New (tupleobject.c:90)
==10278==    by 0x4F50A3D: r_object (marshal.c:885)
==10278==    by 0x4F50C13: r_object (marshal.c:1030)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyTuple_New
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
}
==10278== 3,200 bytes in 5 blocks are possibly lost in loss record 1,634 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 3,256 bytes in 3 blocks are still reachable in loss record 1,635 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F331B4: PyEval_EvalFrameEx (ceval.c:2543)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:_PyObject_GenericGetAttrWithDict
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 3,290 bytes in 1 blocks are still reachable in loss record 1,636 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2ECB28: initqhull (qhull.c:46515)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 3,342 bytes in 1 blocks are still reachable in loss record 1,637 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4ECF37A: _PyObject_GenericGetAttrWithDict (object.c:1439)
==10278==    by 0x4F331B4: PyEval_EvalFrameEx (ceval.c:2543)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:_PyObject_GenericGetAttrWithDict
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 3,408 bytes in 6 blocks are possibly lost in loss record 1,638 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:PyObject_Realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 3,456 bytes in 144 blocks are still reachable in loss record 1,639 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4C025D: ERR_load_EC_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4FA824: ERR_load_crypto_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_EC_strings
   fun:ERR_load_crypto_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 3,474 bytes in 2 blocks are still reachable in loss record 1,640 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x19BFAC06: __Pyx_InitStrings (interpnd.c:31696)
==10278==    by 0x19BFAC06: __Pyx_InitGlobals (interpnd.c:25855)
==10278==    by 0x19BFAC06: initinterpnd (interpnd.c:25938)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:initinterpnd
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 3,498 bytes in 4 blocks are still reachable in loss record 1,641 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F86A1D: zipimporter_load_module (zipimport.c:360)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
}
==10278== 3,602 bytes in 5 blocks are still reachable in loss record 1,642 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F24A8A: parsestrplus (ast.c:3558)
==10278==    by 0x4F24A8A: ast_for_atom (ast.c:1377)
==10278==    by 0x4F24A8A: ast_for_power (ast.c:1790)
==10278==    by 0x4F24A8A: ast_for_expr (ast.c:1968)
==10278==    by 0x4F27B9A: ast_for_expr_stmt (ast.c:2186)
==10278==    by 0x4F27B9A: ast_for_stmt (ast.c:3267)
==10278==    by 0x4F27EE8: ast_for_suite (ast.c:2778)
==10278==    by 0x4F28802: ast_for_funcdef (ast.c:911)
==10278==    by 0x4F27EE8: ast_for_suite (ast.c:2778)
==10278==    by 0x4F280D0: ast_for_classdef (ast.c:3238)
==10278==    by 0x4F28CD4: PyAST_FromNode (ast.c:254)
==10278==    by 0x4F5772D: PyParser_ASTFromString (pythonrun.c:1479)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:parsestrplus
   fun:ast_for_atom
   fun:ast_for_power
   fun:ast_for_expr
   fun:ast_for_expr_stmt
   fun:ast_for_stmt
   fun:ast_for_suite
   fun:ast_for_funcdef
   fun:ast_for_suite
   fun:ast_for_classdef
   fun:PyAST_FromNode
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
}
==10278== 3,631 bytes in 3 blocks are still reachable in loss record 1,643 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
}
==10278== 3,642 bytes in 4 blocks are still reachable in loss record 1,644 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F24A8A: parsestrplus (ast.c:3558)
==10278==    by 0x4F24A8A: ast_for_atom (ast.c:1377)
==10278==    by 0x4F24A8A: ast_for_power (ast.c:1790)
==10278==    by 0x4F24A8A: ast_for_expr (ast.c:1968)
==10278==    by 0x4F27B9A: ast_for_expr_stmt (ast.c:2186)
==10278==    by 0x4F27B9A: ast_for_stmt (ast.c:3267)
==10278==    by 0x4F27EE8: ast_for_suite (ast.c:2778)
==10278==    by 0x4F280D0: ast_for_classdef (ast.c:3238)
==10278==    by 0x4F28CD4: PyAST_FromNode (ast.c:254)
==10278==    by 0x4F5772D: PyParser_ASTFromString (pythonrun.c:1479)
==10278==    by 0x4F5788B: Py_CompileStringFlags (pythonrun.c:1423)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:parsestrplus
   fun:ast_for_atom
   fun:ast_for_power
   fun:ast_for_expr
   fun:ast_for_expr_stmt
   fun:ast_for_stmt
   fun:ast_for_suite
   fun:ast_for_classdef
   fun:PyAST_FromNode
   fun:PyParser_ASTFromString
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
}
==10278== 3,790 bytes in 5 blocks are still reachable in loss record 1,645 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50BD5: r_object (marshal.c:1021)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 3,808 bytes in 1 blocks are still reachable in loss record 1,646 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x116FEF22: _nc_doalloc (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11706EEB: _nc_read_termtype (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x117072BE: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11707480: _nc_read_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701118: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11701461: _nc_setupterm (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B524D: PyCurses_setupterm (_cursesmodule.c:2068)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_nc_doalloc
   fun:_nc_read_termtype
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_read_entry
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_setupterm
   fun:PyCurses_setupterm
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 3,832 bytes in 3 blocks are still reachable in loss record 1,647 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4F331B4: PyEval_EvalFrameEx (ceval.c:2543)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 3,840 bytes in 4 blocks are still reachable in loss record 1,648 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
   fun:PyObject_Call
}
==10278== 3,840 bytes in 5 blocks are still reachable in loss record 1,649 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
}
==10278== 3,840 bytes in 5 blocks are still reachable in loss record 1,650 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EE6FEB: type_set_abstractmethods (typeobject.c:359)
==10278==    by 0x4ECF054: _PyObject_GenericSetAttrWithDict (object.c:1507)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:type_set_abstractmethods
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
}
==10278== 3,840 bytes in 5 blocks are still reachable in loss record 1,651 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 3,968 bytes in 4 blocks are still reachable in loss record 1,652 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x4F505BF: r_object (marshal.c:736)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 3,977 bytes in 1 blocks are still reachable in loss record 1,653 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9894: PyString_FromString (stringobject.c:143)
==10278==    by 0x4EEDC09: PyType_Ready (typeobject.c:4208)
==10278==    by 0x19E62C55: initckdtree (ckdtree.cxx:20227)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromString
   fun:PyType_Ready
   fun:initckdtree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 4,064 bytes in 1 blocks are still reachable in loss record 1,654 of 1,766
==10278==    at 0x4C2FB45: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x400A70E: do_lookup_unique (dl-lookup.c:268)
==10278==    by 0x400A70E: do_lookup_x (dl-lookup.c:544)
==10278==    by 0x400AB90: _dl_lookup_symbol_x (dl-lookup.c:833)
==10278==    by 0x400C8DC: elf_machine_rela (dl-machine.h:325)
==10278==    by 0x400C8DC: elf_dynamic_do_Rela (do-rel.h:137)
==10278==    by 0x400C8DC: _dl_relocate_object (dl-reloc.c:259)
==10278==    by 0x4015C40: dl_open_worker (dl-open.c:435)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:do_lookup_unique
   fun:do_lookup_x
   fun:_dl_lookup_symbol_x
   fun:elf_machine_rela
   fun:elf_dynamic_do_Rela
   fun:_dl_relocate_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
}
==10278== 4,278 bytes in 4 blocks are still reachable in loss record 1,655 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:load_package
   fun:import_submodule
}
==10278== 4,405 bytes in 2 blocks are still reachable in loss record 1,656 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F2EDA4: string_concatenate (ceval.c:5172)
==10278==    by 0x4F36859: PyEval_EvalFrameEx (ceval.c:1478)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyObject_Realloc
   fun:_PyString_Resize
   fun:string_concatenate
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== 4,960 bytes in 5 blocks are still reachable in loss record 1,657 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x4F505BF: r_object (marshal.c:736)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 5,088 bytes in 159 blocks are still reachable in loss record 1,658 of 1,766
==10278==    at 0x4C2DA5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4C2FDDF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 5,120 bytes in 8 blocks are possibly lost in loss record 1,659 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 5,144 bytes in 1 blocks are still reachable in loss record 1,660 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xFD656A1: __pyx_pf_6mtrand_11RandomState___init__ (mtrand.c:13246)
==10278==    by 0xFD656A1: __pyx_pw_6mtrand_11RandomState_1__init__ (mtrand.c:13223)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0xFD6135E: __Pyx_PyObject_Call (mtrand.c:44507)
==10278==    by 0xFD99E9E: initmtrand (mtrand.c:43381)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:__pyx_pf_6mtrand_11RandomState___init__
   fun:__pyx_pw_6mtrand_11RandomState_1__init__
   fun:type_call
   fun:__Pyx_PyObject_Call
   fun:initmtrand
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 5,374 bytes in 3 blocks are still reachable in loss record 1,661 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4F2EDA4: string_concatenate (ceval.c:5172)
==10278==    by 0x4F36859: PyEval_EvalFrameEx (ceval.c:1478)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_PyString_Resize
   fun:string_concatenate
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 5,376 bytes in 4 blocks are still reachable in loss record 1,662 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EED7EF: add_members (typeobject.c:3714)
==10278==    by 0x4EED7EF: PyType_Ready (typeobject.c:4145)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_members
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 5,417 bytes in 1 blocks are still reachable in loss record 1,663 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2ED088: initqhull (qhull.c:46670)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 5,640 bytes in 235 blocks are still reachable in loss record 1,664 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE1C9E6D: ERR_load_SSL_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libssl.so.1.0.0)
==10278==    by 0x1091A2E1: init_ssl (_ssl.c:4090)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:ERR_load_SSL_strings
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 5,664 bytes in 6 blocks are still reachable in loss record 1,665 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8E7DF: PyCFuncPtrType_new (_ctypes.c:2405)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:PyCFuncPtrType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 5,888 bytes in 6 blocks are still reachable in loss record 1,666 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED26BE: set_table_resize (setobject.c:316)
==10278==    by 0x4ED481F: set_merge (setobject.c:665)
==10278==    by 0x4ED481F: set_update_internal (setobject.c:933)
==10278==    by 0x4ED4B29: make_new_set (setobject.c:1029)
==10278==    by 0x4ED5347: frozenset_new (setobject.c:1061)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:set_table_resize
   fun:set_merge
   fun:set_update_internal
   fun:make_new_set
   fun:frozenset_new
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
}
==10278== 5,952 bytes in 6 blocks are still reachable in loss record 1,667 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB54B2: fill_free_list (intobject.c:52)
==10278==    by 0x4EB54B2: PyInt_FromLong (intobject.c:104)
==10278==    by 0x4F5C87D: update_symbols (symtable.c:543)
==10278==    by 0x4F5C87D: analyze_block (symtable.c:712)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5C631: analyze_child_block (symtable.c:762)
==10278==    by 0x4F5C631: analyze_block (symtable.c:701)
==10278==    by 0x4F5E63B: symtable_analyze (symtable.c:791)
==10278==    by 0x4F5E63B: PySymtable_Build (symtable.c:266)
==10278==    by 0x4F4244C: PyAST_Compile (compile.c:285)
==10278==    by 0x4F578AE: Py_CompileStringFlags (pythonrun.c:1433)
==10278==    by 0x4F863D5: compile_source (zipimport.c:1148)
==10278==    by 0x4F863D5: get_code_from_data (zipimport.c:1222)
==10278==    by 0x4F863D5: get_module_code (zipimport.c:1263)
==10278==    by 0x4F868F6: zipimporter_load_module (zipimport.c:320)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyInt_FromLong
   fun:update_symbols
   fun:analyze_block
   fun:analyze_child_block
   fun:analyze_block
   fun:analyze_child_block
   fun:analyze_block
   fun:symtable_analyze
   fun:PySymtable_Build
   fun:PyAST_Compile
   fun:Py_CompileStringFlags
   fun:compile_source
   fun:get_code_from_data
   fun:get_module_code
   fun:zipimporter_load_module
   fun:PyObject_Call
   fun:call_function_tail
}
==10278== 6,032 bytes in 11 blocks are possibly lost in loss record 1,668 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
   fun:PyObject_Call
}
==10278== 6,144 bytes in 1 blocks are still reachable in loss record 1,669 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1BB7: new_arena (obmalloc.c:584)
==10278==    by 0x4ED1BB7: PyObject_Malloc (obmalloc.c:867)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EE541E: PyTuple_New (tupleobject.c:90)
==10278==    by 0x4F50A3D: r_object (marshal.c:885)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:new_arena
   fun:PyObject_Malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyTuple_New
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
}
==10278== 6,144 bytes in 2 blocks are still reachable in loss record 1,670 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
}
==10278== 6,144 bytes in 8 blocks are still reachable in loss record 1,671 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x7A8EF0C: PyCSimpleType_new (_ctypes.c:2116)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 6,144 bytes in 8 blocks are still reachable in loss record 1,672 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4ECF837: PyObject_SetAttrString (object.c:1166)
==10278==    by 0x7A8EF30: PyCSimpleType_new (_ctypes.c:2118)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyObject_SetAttrString
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 6,264 bytes in 1 blocks are still reachable in loss record 1,673 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x1A2DE482: __Pyx_Py3ClassCreate.clone.16 (qhull.c:49553)
==10278==    by 0x1A2EC00E: initqhull (qhull.c:46193)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:__Pyx_Py3ClassCreate.clone.16
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 6,552 bytes in 9 blocks are possibly lost in loss record 1,674 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F6F4C8: _PyObject_GC_Resize (gcmodule.c:1544)
==10278==    by 0x4EB30FC: PyFrame_New (frameobject.c:693)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:realloc
   fun:_PyObject_GC_Resize
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 6,904 bytes in 1 blocks are still reachable in loss record 1,675 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EFA9EC: _PyUnicode_New (unicodeobject.c:348)
==10278==    by 0x4F02A26: PyUnicodeUCS4_DecodeUTF8Stateful (unicodeobject.c:1985)
==10278==    by 0x1971A602: __Pyx_InitStrings (_bspl.c:27712)
==10278==    by 0x1971A602: __Pyx_InitGlobals (_bspl.c:22104)
==10278==    by 0x1971A602: init_bspl (_bspl.c:22179)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyUnicode_New
   fun:PyUnicodeUCS4_DecodeUTF8Stateful
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:init_bspl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 6,944 bytes in 7 blocks are still reachable in loss record 1,676 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB6988: fill_free_list (intobject.c:52)
==10278==    by 0x4EB6988: _PyInt_Init (intobject.c:1456)
==10278==    by 0x4F59B35: Py_InitializeEx (pythonrun.c:210)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:_PyInt_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 7,552 bytes in 8 blocks are still reachable in loss record 1,677 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8EE0F: CreateSwappedType (_ctypes.c:1874)
==10278==    by 0x7A8EE0F: PyCSimpleType_new (_ctypes.c:2100)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:CreateSwappedType
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 7,689 bytes in 4 blocks are still reachable in loss record 1,678 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4EDB896: string_join (stringobject.c:1659)
==10278==    by 0x4F37D3C: call_function (ceval.c:4340)
==10278==    by 0x4F37D3C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:string_join
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 7,824 bytes in 326 blocks are still reachable in loss record 1,679 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE450722: CRYPTO_malloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F5942: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0x1091A2E1: init_ssl (_ssl.c:4090)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:CRYPTO_malloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:init_ssl
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 7,952 bytes in 1 blocks are still reachable in loss record 1,680 of 1,766
==10278==    at 0x4C2FB45: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x116FDFC7: ??? (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x116FE72A: _nc_find_type_entry (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x11702199: tigetnum (in /lib/x86_64-linux-gnu/libtinfo.so.5.9)
==10278==    by 0x112B4FA4: PyCurses_tigetnum (_cursesmodule.c:2512)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   obj:/lib/x86_64-linux-gnu/libtinfo.so.5.9
   fun:_nc_find_type_entry
   fun:tigetnum
   fun:PyCurses_tigetnum
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 8,168 bytes in 13 blocks are possibly lost in loss record 1,681 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EE541E: PyTuple_New (tupleobject.c:90)
==10278==    by 0x4F50A3D: r_object (marshal.c:885)
==10278==    by 0x4F50BFF: r_object (marshal.c:1027)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyTuple_New
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
}
==10278== 8,208 bytes in 4 blocks are still reachable in loss record 1,682 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F7CFA8: _compile (_sre.c:2754)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_compile
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 8,448 bytes in 11 blocks are still reachable in loss record 1,683 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E83F80: call_function_tail (abstract.c:2579)
==10278==    by 0x4E88327: PyObject_CallMethod (abstract.c:2654)
==10278==    by 0x4EEA04D: slotnames (typeobject.c:3255)
==10278==    by 0x4EEA04D: reduce_2 (typeobject.c:3333)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:call_function_tail
   fun:PyObject_CallMethod
   fun:slotnames
   fun:reduce_2
}
==10278== 8,496 bytes in 9 blocks are still reachable in loss record 1,684 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EF4A4F: type_new (typeobject.c:2159)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_new
   fun:type_call
}
==10278== 8,648 bytes in 37 blocks are still reachable in loss record 1,685 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EBAD40: list_resize (listobject.c:62)
==10278==    by 0x4EBAD40: app1 (listobject.c:277)
==10278==    by 0x4EBAD40: PyList_Append (listobject.c:289)
==10278==    by 0x4EEDA17: add_subclass (typeobject.c:4275)
==10278==    by 0x4EEDA17: PyType_Ready (typeobject.c:4238)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:list_resize
   fun:app1
   fun:PyList_Append
   fun:add_subclass
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 9,200 bytes in 9 blocks are still reachable in loss record 1,686 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50BD5: r_object (marshal.c:1021)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
}
==10278== 9,216 bytes in 6 blocks are still reachable in loss record 1,687 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4F36F99: call_function (ceval.c:4336)
==10278==    by 0x4F36F99: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 9,608 bytes in 1 blocks are still reachable in loss record 1,688 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EFAA48: _PyUnicode_New (unicodeobject.c:358)
==10278==    by 0x4F02A26: PyUnicodeUCS4_DecodeUTF8Stateful (unicodeobject.c:1985)
==10278==    by 0x165B9492: __Pyx_InitStrings (_min_spanning_tree.c:22997)
==10278==    by 0x165B9492: __Pyx_InitGlobals (_min_spanning_tree.c:18603)
==10278==    by 0x165B9492: init_min_spanning_tree (_min_spanning_tree.c:18675)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyUnicode_New
   fun:PyUnicodeUCS4_DecodeUTF8Stateful
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:init_min_spanning_tree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 9,697 bytes in 95 blocks are still reachable in loss record 1,689 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x401D499: strdup (strdup.c:42)
==10278==    by 0x4008BA9: expand_dynamic_string_token (dl-load.c:376)
==10278==    by 0x4008BA9: _dl_map_object (dl-load.c:2409)
==10278==    by 0x40157C3: dl_open_worker (dl-open.c:237)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278==    by 0x4F4FA67: _PyImport_LoadDynamicModule (importdl.c:42)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:strdup
   fun:expand_dynamic_string_token
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
   fun:_PyImport_LoadDynamicModule
}
==10278== 9,697 bytes in 95 blocks are still reachable in loss record 1,690 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x400C033: _dl_new_object (dl-object.c:165)
==10278==    by 0x4006534: _dl_map_object_from_fd (dl-load.c:1006)
==10278==    by 0x4008C34: _dl_map_object (dl-load.c:2476)
==10278==    by 0x40157C3: dl_open_worker (dl-open.c:237)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
}
==10278== 10,460 bytes in 1 blocks are still reachable in loss record 1,691 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EFAA48: _PyUnicode_New (unicodeobject.c:358)
==10278==    by 0x4F02A26: PyUnicodeUCS4_DecodeUTF8Stateful (unicodeobject.c:1985)
==10278==    by 0x16177CC2: __Pyx_InitStrings (_tools.c:13014)
==10278==    by 0x16177CC2: __Pyx_InitGlobals (_tools.c:9417)
==10278==    by 0x16177CC2: init_tools (_tools.c:9488)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyUnicode_New
   fun:PyUnicodeUCS4_DecodeUTF8Stateful
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:init_tools
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 10,920 bytes in 15 blocks are possibly lost in loss record 1,692 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38251: fast_function (ceval.c:4426)
==10278==    by 0x4F38251: call_function (ceval.c:4372)
==10278==    by 0x4F38251: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 11,064 bytes in 461 blocks are still reachable in loss record 1,693 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EB97FD: PyList_New (listobject.c:152)
==10278==    by 0x4F33502: PyEval_EvalFrameEx (ceval.c:2466)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF0D46: call_method (typeobject.c:1283)
==10278==    by 0x4EF10AA: slot_mp_ass_subscript (typeobject.c:5220)
==10278==    by 0x4F32EAB: PyEval_EvalFrameEx (ceval.c:1909)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyList_New
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:call_method
   fun:slot_mp_ass_subscript
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 11,328 bytes in 12 blocks are still reachable in loss record 1,694 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F86A1D: zipimporter_load_module (zipimport.c:360)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:zipimporter_load_module
}
==10278== 12,288 bytes in 1 blocks are still reachable in loss record 1,695 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F29172: _PyBuiltin_Init (bltinmodule.c:2737)
==10278==    by 0x4F59B94: Py_InitializeEx (pythonrun.c:233)
==10278==    by 0x4F6E7D5: Py_Main (main.c:547)
==10278==    by 0x5B843F0: (below main) (libc-start.c:291)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:_PyBuiltin_Init
   fun:Py_InitializeEx
   fun:Py_Main
   fun:(below main)
}
==10278== 12,288 bytes in 1 blocks are still reachable in loss record 1,696 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F32EAB: PyEval_EvalFrameEx (ceval.c:1909)
==10278==    by 0x4F38344: fast_function (ceval.c:4437)
==10278==    by 0x4F38344: call_function (ceval.c:4372)
==10278==    by 0x4F38344: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 12,288 bytes in 1 blocks are still reachable in loss record 1,697 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F53478: Py_InitModule4_64 (modsupport.c:86)
==10278==    by 0x6E26322: initoperator (operator.c:916)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:Py_InitModule4_64
   fun:initoperator
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 12,288 bytes in 1 blocks are still reachable in loss record 1,698 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F32EAB: PyEval_EvalFrameEx (ceval.c:1909)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 12,288 bytes in 1 blocks are still reachable in loss record 1,699 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x81EC005: initmultiarray (multiarraymodule.c:4572)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 12,288 bytes in 1 blocks are still reachable in loss record 1,700 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECE05: add_methods (typeobject.c:3694)
==10278==    by 0x4EECE05: PyType_Ready (typeobject.c:4141)
==10278==    by 0x81EC10A: setup_scalartypes (multiarraymodule.c:4313)
==10278==    by 0x81EC10A: initmultiarray (multiarraymodule.c:4575)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_methods
   fun:PyType_Ready
   fun:setup_scalartypes
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 12,288 bytes in 1 blocks are still reachable in loss record 1,701 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x81ECC56: initmultiarray (multiarraymodule.c:4674)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:initmultiarray
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 12,288 bytes in 1 blocks are still reachable in loss record 1,702 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F32EAB: PyEval_EvalFrameEx (ceval.c:1909)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 12,288 bytes in 1 blocks are still reachable in loss record 1,703 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x126E3F15: init_ufuncs (_ufuncs.c:54187)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:init_ufuncs
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 12,592 bytes in 1 blocks are still reachable in loss record 1,704 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EFAA48: _PyUnicode_New (unicodeobject.c:358)
==10278==    by 0x4F02A26: PyUnicodeUCS4_DecodeUTF8Stateful (unicodeobject.c:1985)
==10278==    by 0x1D1C8652: __Pyx_InitStrings (_spectral.c:7320)
==10278==    by 0x1D1C8652: __Pyx_InitGlobals (_spectral.c:4786)
==10278==    by 0x1D1C8652: init_spectral (_spectral.c:4853)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyUnicode_New
   fun:PyUnicodeUCS4_DecodeUTF8Stateful
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:init_spectral
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 13,056 bytes in 17 blocks are still reachable in loss record 1,705 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F3721D: exec_statement (ceval.c:5043)
==10278==    by 0x4F3721D: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 14,176 bytes in 25 blocks are possibly lost in loss record 1,706 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4F708FD: _PyObject_GC_NewVar (gcmodule.c:1531)
==10278==    by 0x4EB3150: PyFrame_New (frameobject.c:680)
==10278==    by 0x4F38416: PyEval_EvalCodeEx (ceval.c:3365)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:_PyObject_GC_NewVar
   fun:PyFrame_New
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 14,184 bytes in 107 blocks are still reachable in loss record 1,707 of 1,766
==10278==    at 0x4C2FB45: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x40123CD: _dl_check_map_versions (dl-version.c:293)
==10278==    by 0x4015AAE: dl_open_worker (dl-open.c:286)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278==    by 0x4F4FA67: _PyImport_LoadDynamicModule (importdl.c:42)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:_dl_check_map_versions
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
}
==10278== 14,209 bytes in 12 blocks are still reachable in loss record 1,708 of 1,766
==10278==    at 0x4C2FB45: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x400BD75: _dl_new_object (dl-object.c:75)
==10278==    by 0x4006534: _dl_map_object_from_fd (dl-load.c:1006)
==10278==    by 0x4008C34: _dl_map_object (dl-load.c:2476)
==10278==    by 0x400DDEF: openaux (dl-deps.c:63)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x400E40A: _dl_map_object_deps (dl-deps.c:254)
==10278==    by 0x401582E: dl_open_worker (dl-open.c:280)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
}
==10278== 15,872 bytes in 16 blocks are still reachable in loss record 1,709 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x4F505BF: r_object (marshal.c:736)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
}
==10278== 16,384 bytes in 1 blocks are still reachable in loss record 1,710 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0xE4507EE: CRYPTO_realloc (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F58E6: lh_insert (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F9428: int_err_set_item (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xE4F8548: ERR_load_strings (in /home/notoraptor/Programmes/anaconda3/envs/python2/lib/libcrypto.so.1.0.0)
==10278==    by 0xDF6B5EE: init_hashlib (_hashopenssl.c:903)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:CRYPTO_realloc
   fun:lh_insert
   fun:int_err_set_item
   fun:ERR_load_strings
   fun:init_hashlib
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 17,748 bytes in 3 blocks are still reachable in loss record 1,711 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED1D54: PyObject_Realloc (obmalloc.c:1272)
==10278==    by 0x4EFA916: unicode_resize (unicodeobject.c:288)
==10278==    by 0x4EFA916: _PyUnicode_New (unicodeobject.c:341)
==10278==    by 0x4F02A26: PyUnicodeUCS4_DecodeUTF8Stateful (unicodeobject.c:1985)
==10278==    by 0x126DB4D2: __Pyx_InitStrings (_ufuncs.c:88683)
==10278==    by 0x126DB4D2: __Pyx_InitGlobals (_ufuncs.c:39282)
==10278==    by 0x126DB4D2: init_ufuncs (_ufuncs.c:39366)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyObject_Realloc
   fun:unicode_resize
   fun:_PyUnicode_New
   fun:PyUnicodeUCS4_DecodeUTF8Stateful
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:init_ufuncs
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
}
==10278== 17,936 bytes in 19 blocks are still reachable in loss record 1,712 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x7A8EAB9: PyCSimpleType_new (_ctypes.c:1948)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:PyCSimpleType_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 18,261 bytes in 4 blocks are still reachable in loss record 1,713 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x1A2E832A: __Pyx_InitStrings (qhull.c:52162)
==10278==    by 0x1A2E832A: __Pyx_InitGlobals (qhull.c:45517)
==10278==    by 0x1A2E832A: initqhull (qhull.c:45598)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:initqhull
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 18,432 bytes in 24 blocks are still reachable in loss record 1,714 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEEEBE: PyType_Ready (typeobject.c:4214)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
}
==10278== 18,848 bytes in 19 blocks are still reachable in loss record 1,715 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EAF258: fill_free_list (floatobject.c:43)
==10278==    by 0x4EAF258: PyFloat_FromDouble (floatobject.c:146)
==10278==    by 0x4F505BF: r_object (marshal.c:736)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:fill_free_list
   fun:PyFloat_FromDouble
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 19,128 bytes in 2 blocks are still reachable in loss record 1,716 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EFA9EC: _PyUnicode_New (unicodeobject.c:348)
==10278==    by 0x4F02A26: PyUnicodeUCS4_DecodeUTF8Stateful (unicodeobject.c:1985)
==10278==    by 0x19E621B2: __Pyx_InitStrings (ckdtree.cxx:25001)
==10278==    by 0x19E621B2: __Pyx_InitGlobals (ckdtree.cxx:20109)
==10278==    by 0x19E621B2: initckdtree (ckdtree.cxx:20185)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyUnicode_New
   fun:PyUnicodeUCS4_DecodeUTF8Stateful
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:initckdtree
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 19,540 bytes in 2 blocks are still reachable in loss record 1,717 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EFAA48: _PyUnicode_New (unicodeobject.c:358)
==10278==    by 0x4F02A26: PyUnicodeUCS4_DecodeUTF8Stateful (unicodeobject.c:1985)
==10278==    by 0x1638F4C2: __Pyx_InitStrings (_traversal.c:14286)
==10278==    by 0x1638F4C2: __Pyx_InitGlobals (_traversal.c:10873)
==10278==    by 0x1638F4C2: init_traversal (_traversal.c:10943)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyUnicode_New
   fun:PyUnicodeUCS4_DecodeUTF8Stateful
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:init_traversal
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 20,736 bytes in 27 blocks are still reachable in loss record 1,718 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EEEEBE: PyType_Ready (typeobject.c:4214)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 20,736 bytes in 27 blocks are still reachable in loss record 1,719 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F2A093: builtin_setattr (bltinmodule.c:1153)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:builtin_setattr
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
}
==10278== 21,504 bytes in 7 blocks are still reachable in loss record 1,720 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB649: dict_update_common (dictobject.c:1476)
==10278==    by 0x4ECB649: dict_update (dictobject.c:1488)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:dict_update_common
   fun:dict_update
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== 23,040 bytes in 9 blocks are still reachable in loss record 1,721 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4EF63CC: type_setattro (typeobject.c:2697)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F2A093: builtin_setattr (bltinmodule.c:1153)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:type_setattro
   fun:PyObject_SetAttr
   fun:builtin_setattr
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== 23,040 bytes in 28 blocks are still reachable in loss record 1,722 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50BD5: r_object (marshal.c:1021)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 23,992 bytes in 21 blocks are still reachable in loss record 1,723 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 25,290 bytes in 22 blocks are still reachable in loss record 1,724 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 29,468 bytes in 40 blocks are still reachable in loss record 1,725 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EE1392: PyString_Format (stringobject.c:4687)
==10278==    by 0x4F363BA: PyEval_EvalFrameEx (ceval.c:1450)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_PyString_Resize
   fun:PyString_Format
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 29,481 bytes in 9 blocks are still reachable in loss record 1,726 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EE1392: PyString_Format (stringobject.c:4687)
==10278==    by 0x4F363BA: PyEval_EvalFrameEx (ceval.c:1450)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_PyString_Resize
   fun:PyString_Format
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 29,952 bytes in 39 blocks are still reachable in loss record 1,727 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
}
==10278== 33,040 bytes in 35 blocks are still reachable in loss record 1,728 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
}
==10278== 34,560 bytes in 6 blocks are still reachable in loss record 1,729 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E384: load_next (import.c:2543)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 36,864 bytes in 3 blocks are still reachable in loss record 1,730 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 37,632 bytes in 7 blocks are still reachable in loss record 1,731 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:call_function
   fun:PyEval_EvalFrameEx
}
==10278== 39,936 bytes in 52 blocks are still reachable in loss record 1,732 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4F3721D: exec_statement (ceval.c:5043)
==10278==    by 0x4F3721D: PyEval_EvalFrameEx (ceval.c:2106)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:exec_statement
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 46,922 bytes in 13 blocks are still reachable in loss record 1,733 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EE1392: PyString_Format (stringobject.c:4687)
==10278==    by 0x4F363BA: PyEval_EvalFrameEx (ceval.c:1450)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_PyString_Resize
   fun:PyString_Format
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
}
==10278== 48,384 bytes in 63 blocks are still reachable in loss record 1,734 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECAC5F: PyDict_SetItemString (dictobject.c:2469)
==10278==    by 0x4EECFC7: add_getset (typeobject.c:3736)
==10278==    by 0x4EECFC7: PyType_Ready (typeobject.c:4149)
==10278==    by 0x4EF5327: type_new (typeobject.c:2512)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_SetItemString
   fun:add_getset
   fun:PyType_Ready
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 49,152 bytes in 1 blocks are still reachable in loss record 1,735 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F35149: import_all_from (ceval.c:4926)
==10278==    by 0x4F35149: PyEval_EvalFrameEx (ceval.c:2643)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:import_all_from
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 49,152 bytes in 4 blocks are still reachable in loss record 1,736 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F35149: import_all_from (ceval.c:4926)
==10278==    by 0x4F35149: PyEval_EvalFrameEx (ceval.c:2643)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:import_all_from
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 53,756 bytes in 3 blocks are still reachable in loss record 1,737 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EFAA48: _PyUnicode_New (unicodeobject.c:358)
==10278==    by 0x4F02A26: PyUnicodeUCS4_DecodeUTF8Stateful (unicodeobject.c:1985)
==10278==    by 0x1402FA92: __Pyx_InitStrings (_decomp_update.c:40972)
==10278==    by 0x1402FA92: __Pyx_InitGlobals (_decomp_update.c:38414)
==10278==    by 0x1402FA92: init_decomp_update (_decomp_update.c:38487)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyUnicode_New
   fun:PyUnicodeUCS4_DecodeUTF8Stateful
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:init_decomp_update
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 55,296 bytes in 3 blocks are still reachable in loss record 1,738 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F35149: import_all_from (ceval.c:4926)
==10278==    by 0x4F35149: PyEval_EvalFrameEx (ceval.c:2643)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:import_all_from
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 67,024 bytes in 71 blocks are still reachable in loss record 1,739 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F579AB: run_mod (pythonrun.c:1376)
==10278==    by 0x4F579AB: PyRun_StringFlags (pythonrun.c:1339)
==10278==    by 0x4F35661: exec_statement (ceval.c:5086)
==10278==    by 0x4F35661: PyEval_EvalFrameEx (ceval.c:2106)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:run_mod
   fun:PyRun_StringFlags
   fun:exec_statement
   fun:PyEval_EvalFrameEx
}
==10278== 69,033 bytes in 56 blocks are still reachable in loss record 1,740 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 69,120 bytes in 71 blocks are still reachable in loss record 1,741 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F579AB: run_mod (pythonrun.c:1376)
==10278==    by 0x4F579AB: PyRun_StringFlags (pythonrun.c:1339)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:run_mod
   fun:PyRun_StringFlags
}
==10278== 69,386 bytes in 48 blocks are still reachable in loss record 1,742 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
}
==10278== 72,704 bytes in 1 blocks are still reachable in loss record 1,743 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x1301EA9F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==10278==    by 0x40109C9: call_init.part.0 (dl-init.c:72)
==10278==    by 0x4010ADA: call_init (dl-init.c:30)
==10278==    by 0x4010ADA: _dl_init (dl-init.c:120)
==10278==    by 0x4015A75: dl_open_worker (dl-open.c:575)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   obj:/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22
   fun:call_init.part.0
   fun:call_init
   fun:_dl_init
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
}
==10278== 82,944 bytes in 108 blocks are still reachable in loss record 1,744 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB568: dict_update_common (dictobject.c:1481)
==10278==    by 0x4ECB568: dict_init (dictobject.c:2383)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F3680C: do_call (ceval.c:4569)
==10278==    by 0x4F3680C: call_function (ceval.c:4374)
==10278==    by 0x4F3680C: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:dict_update_common
   fun:dict_init
   fun:type_call
   fun:PyObject_Call
   fun:do_call
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
}
==10278== 87,693 bytes in 23 blocks are still reachable in loss record 1,745 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4EE23E3: replace_substring (stringobject.c:2707)
==10278==    by 0x4EE23E3: replace (stringobject.c:2808)
==10278==    by 0x4EE23E3: string_replace (stringobject.c:2854)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:replace_substring
   fun:replace
   fun:string_replace
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
}
==10278== 98,304 bytes in 2 blocks are still reachable in loss record 1,746 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F35149: import_all_from (ceval.c:4926)
==10278==    by 0x4F35149: PyEval_EvalFrameEx (ceval.c:2643)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4DB79: load_package (import.c:1188)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:import_all_from
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:load_package
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
}
==10278== 102,144 bytes in 133 blocks are still reachable in loss record 1,747 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
}
==10278== 120,657 bytes in 95 blocks are still reachable in loss record 1,748 of 1,766
==10278==    at 0x4C2FB45: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x400BD75: _dl_new_object (dl-object.c:75)
==10278==    by 0x4006534: _dl_map_object_from_fd (dl-load.c:1006)
==10278==    by 0x4008C34: _dl_map_object (dl-load.c:2476)
==10278==    by 0x40157C3: dl_open_worker (dl-open.c:237)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x4015058: _dl_open (dl-open.c:660)
==10278==    by 0x5454EE8: dlopen_doit (dlopen.c:66)
==10278==    by 0x4010873: _dl_catch_error (dl-error.c:187)
==10278==    by 0x5455580: _dlerror_run (dlerror.c:163)
==10278==    by 0x5454F81: dlopen@@GLIBC_2.2.5 (dlopen.c:87)
==10278==    by 0x4F6B1DD: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_PyImport_GetDynLoadFunc
}
==10278== 122,337 bytes in 98 blocks are still reachable in loss record 1,749 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
}
==10278== 144,384 bytes in 86 blocks are still reachable in loss record 1,750 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
}
==10278== 156,966 bytes in 84 blocks are possibly lost in loss record 1,751 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
}
==10278== 165,120 bytes in 35 blocks are still reachable in loss record 1,752 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E60B: ensure_fromlist (import.c:2631)
==10278==    by 0x4F4EAF3: import_module_level (import.c:2293)
==10278==    by 0x4F4EAF3: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:ensure_fromlist
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 172,032 bytes in 53 blocks are still reachable in loss record 1,753 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E9D7: import_module_level (import.c:2256)
==10278==    by 0x4F4E9D7: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 211,584 bytes in 221 blocks are still reachable in loss record 1,754 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
}
==10278== 282,944 bytes in 153 blocks are still reachable in loss record 1,755 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EF5631: type_new (typeobject.c:2418)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 289,888 bytes in 307 blocks are still reachable in loss record 1,756 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7CE3: tp_new_wrapper (typeobject.c:4922)
==10278==    by 0x4F371E4: call_function (ceval.c:4352)
==10278==    by 0x4F371E4: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3A60: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EE785C: slot_tp_new (typeobject.c:5849)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:tp_new_wrapper
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:slot_tp_new
   fun:type_call
   fun:PyObject_Call
}
==10278== 290,833 bytes in 305 blocks are still reachable in loss record 1,757 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50BD5: r_object (marshal.c:1021)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
}
==10278== 300,089 bytes in 72 blocks are still reachable in loss record 1,758 of 1,766
==10278==    at 0x4C2FD4F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EDBBB6: _PyString_Resize (stringobject.c:3909)
==10278==    by 0x4EE1392: PyString_Format (stringobject.c:4687)
==10278==    by 0x4F363BA: PyEval_EvalFrameEx (ceval.c:1450)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F381F6: fast_function (ceval.c:4447)
==10278==    by 0x4F381F6: call_function (ceval.c:4372)
==10278==    by 0x4F381F6: PyEval_EvalFrameEx (ceval.c:2989)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:realloc
   fun:_PyString_Resize
   fun:PyString_Format
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:fast_function
   fun:call_function
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
}
==10278== 331,008 bytes in 104 blocks are still reachable in loss record 1,759 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4F363DA: PyEval_EvalFrameEx (ceval.c:2174)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
}
==10278== 374,400 bytes in 408 blocks are still reachable in loss record 1,760 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECB066: PyDict_Merge (dictobject.c:1612)
==10278==    by 0x4ECB16E: PyDict_Copy (dictobject.c:1694)
==10278==    by 0x4EF511B: type_new (typeobject.c:2389)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyDict_Merge
   fun:PyDict_Copy
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
}
==10278== 413,952 bytes in 539 blocks are still reachable in loss record 1,761 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ECF084: _PyObject_GenericSetAttrWithDict (object.c:1529)
==10278==    by 0x4ECF576: PyObject_SetAttr (object.c:1252)
==10278==    by 0x4F3264D: PyEval_EvalFrameEx (ceval.c:2253)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4EB3B67: function_call (funcobject.c:523)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E9664E: instancemethod_call (classobject.c:2602)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4EF3E6F: slot_tp_init (typeobject.c:5806)
==10278==    by 0x4EE7567: type_call (typeobject.c:765)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:_PyObject_GenericSetAttrWithDict
   fun:PyObject_SetAttr
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:function_call
   fun:PyObject_Call
   fun:instancemethod_call
   fun:PyObject_Call
   fun:slot_tp_init
   fun:type_call
}
==10278== 436,136 bytes in 43 blocks are still reachable in loss record 1,762 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EFAA48: _PyUnicode_New (unicodeobject.c:358)
==10278==    by 0x4F02A26: PyUnicodeUCS4_DecodeUTF8Stateful (unicodeobject.c:1985)
==10278==    by 0xFD96162: __Pyx_InitStrings (mtrand.c:49172)
==10278==    by 0xFD96162: __Pyx_InitGlobals (mtrand.c:42635)
==10278==    by 0xFD96162: initmtrand (mtrand.c:42735)
==10278==    by 0x4F4FA94: _PyImport_LoadDynamicModule (importdl.c:53)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278==    by 0x4F4E983: import_module_level (import.c:2247)
==10278==    by 0x4F4E983: PyImport_ImportModuleLevel (import.c:2312)
==10278==    by 0x4F2E2CE: builtin___import__ (bltinmodule.c:49)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4F2E7B2: PyEval_CallObjectWithKeywords (ceval.c:4221)
==10278==    by 0x4F33445: PyEval_EvalFrameEx (ceval.c:2624)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyUnicode_New
   fun:PyUnicodeUCS4_DecodeUTF8Stateful
   fun:__Pyx_InitStrings
   fun:__Pyx_InitGlobals
   fun:initmtrand
   fun:_PyImport_LoadDynamicModule
   fun:import_submodule
   fun:load_next
   fun:import_module_level
   fun:PyImport_ImportModuleLevel
   fun:builtin___import__
   fun:PyObject_Call
   fun:PyEval_CallObjectWithKeywords
   fun:PyEval_EvalFrameEx
}
==10278== 520,524 bytes in 287 blocks are still reachable in loss record 1,763 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278==    by 0x4F4E0D0: import_submodule (import.c:2725)
==10278==    by 0x4F4E343: load_next (import.c:2539)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
   fun:import_submodule
   fun:load_next
}
==10278== 534,038 bytes in 517 blocks are still reachable in loss record 1,764 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4ED9A79: PyString_FromStringAndSize (stringobject.c:88)
==10278==    by 0x4F502F9: r_object (marshal.c:814)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278==    by 0x4F4D2B5: read_compiled_module (import.c:823)
==10278==    by 0x4F4D2B5: load_source_module (import.c:1094)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:PyString_FromStringAndSize
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
   fun:read_compiled_module
   fun:load_source_module
}
==10278== 838,584 bytes in 886 blocks are still reachable in loss record 1,765 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4F707B8: _PyObject_GC_Malloc (gcmodule.c:1499)
==10278==    by 0x4EE8DA8: PyType_GenericAlloc (typeobject.c:781)
==10278==    by 0x4EF4FEA: type_new (typeobject.c:2337)
==10278==    by 0x4EE7522: type_call (typeobject.c:749)
==10278==    by 0x4E83E92: PyObject_Call (abstract.c:2547)
==10278==    by 0x4E88A65: PyObject_CallFunctionObjArgs (abstract.c:2774)
==10278==    by 0x4F321EB: build_class (ceval.c:4964)
==10278==    by 0x4F321EB: PyEval_EvalFrameEx (ceval.c:2160)
==10278==    by 0x4F38C3D: PyEval_EvalCodeEx (ceval.c:3584)
==10278==    by 0x4F38D51: PyEval_EvalCode (ceval.c:669)
==10278==    by 0x4F4ABD1: PyImport_ExecCodeModuleEx (import.c:731)
==10278==    by 0x4F4D31D: load_source_module (import.c:1121)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_PyObject_GC_Malloc
   fun:PyType_GenericAlloc
   fun:type_new
   fun:type_call
   fun:PyObject_Call
   fun:PyObject_CallFunctionObjArgs
   fun:build_class
   fun:PyEval_EvalFrameEx
   fun:PyEval_EvalCodeEx
   fun:PyEval_EvalCode
   fun:PyImport_ExecCodeModuleEx
   fun:load_source_module
}
==10278== 3,145,728 bytes in 1 blocks are still reachable in loss record 1,766 of 1,766
==10278==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10278==    by 0x4EC754F: dictresize (dictobject.c:643)
==10278==    by 0x4ED97C8: PyString_InternInPlace (stringobject.c:4773)
==10278==    by 0x4F51462: r_object (marshal.c:827)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50C13: r_object (marshal.c:1030)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F50A81: r_object (marshal.c:891)
==10278==    by 0x4F50BEB: r_object (marshal.c:1024)
==10278==    by 0x4F51717: PyMarshal_ReadObjectFromString (marshal.c:1188)
==10278==    by 0x4F5183E: PyMarshal_ReadLastObjectFromFile (marshal.c:1149)
==10278== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:dictresize
   fun:PyString_InternInPlace
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:r_object
   fun:PyMarshal_ReadObjectFromString
   fun:PyMarshal_ReadLastObjectFromFile
}
==10278== LEAK SUMMARY:
==10278==    definitely lost: 0 bytes in 0 blocks
==10278==    indirectly lost: 0 bytes in 0 blocks
==10278==      possibly lost: 245,014 bytes in 225 blocks
==10278==    still reachable: 11,671,378 bytes in 11,131 blocks
==10278==         suppressed: 0 bytes in 0 blocks
==10278== 
==10278== For counts of detected and suppressed errors, rerun with: -v
==10278== Use --track-origins=yes to see where uninitialised values come from
==10278== ERROR SUMMARY: 6519 errors from 167 contexts (suppressed: 0 from 0)
